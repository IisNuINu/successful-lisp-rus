#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter08.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-05-27 12:38+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter08.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 8</title>\n"
"</head> "
msgstr ""

#: in/chapter08.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 8 - Lifetime and Visibility</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 8 - Время жизни и Видимость</h1> "

#: in/chapter08.html:14
msgid ""
"<p>In this chapter we'll see how lifetime and visibility affect the\n"
"values of Lisp variables during execution. This is pretty much like\n"
"local and global variables in other languages, but Lisp's special\n"
"variables change things. This chapter also sets the stage for\n"
"understanding that lifetime and visibility aren't just for variables."
msgstr ""
"<p>\n"
"В этой главе мы увидим, как время жизни и видимость влияют на значения \n"
"переменных Lisp во время выполнения. Это очень похоже на локальные и \n"
"глобальные переменные в других языках, но специальные переменные Lisp \n"
"меняют дело. Эта глава также закладывает основу для понимания того, \n"
"что продолжительность жизни и видимость - относятся не только к переменным."

#: in/chapter08.html:16
msgid "<h2>Everything in Lisp has both lifetime and visibility</h2> "
msgstr "<h2>Все в Лиспе имеет как время жизни, так и видимость.</h2> "

#: in/chapter08.html:19
msgid ""
"<p>Every object in Lisp has both lifetime and visibility.  We'll see\n"
"why this is important in the following sections."
msgstr ""
"<p>\n"
"Каждый объект в Lisp имеет как время жизни, так и видимость. \n"
"Мы увидим, почему это важно, в последующих разделах.\n"

#: in/chapter08.html:21
msgid "<h2>Lifetime: Creation, existence, then destruction</h2> "
msgstr "<h2>Время жизни: Создание, существование, затем разрушение</h2> "

#: in/chapter08.html:28
msgid ""
"<p>An object's lifetime is the period between its creation and\n"
"destruction. Some objects have fleeting lifetimes, limited to the\n"
"form in which they appear. Other objects are created as soon as the\n"
"program begins running, and are not destroyed until the program\n"
"finishes. And others enter and leave existence according to still\n"
"other rules."
msgstr ""
"<p>\n"
"Время жизни объекта - это период между его созданием и разрушением. \n"
"Некоторые объекты имеют мимолетное время жизни, ограниченное формой, \n"
"в которой они появляются. Другие объекты создаются сразу же после \n"
"запуска программы и не уничтожаются до тех пор, пока программа не \n"
"завершится. А другие входят и выходят из существования по \n"
"другим правилам."

#: in/chapter08.html:30
msgid "<h2>Visibility: To see and to be seen by</h2> "
msgstr "<h2>Видимость: видеть и быть увиденным</h2> "

#: in/chapter08.html:38
msgid ""
"<p>An object is either visible or not visible at a particular point\n"
"in your program. Sometimes visibility is controlled by the execution\n"
"path of the program. But for most objects in Common Lisp, visibility\n"
"is determined by the textual arrangement of your program; this is\n"
"good, because you can reason about visibility just by reading a\n"
"program, without having to first reason about the program's control\n"
"flow."
msgstr ""
"<p>\n"
"Объект либо виден, либо не виден в определенной точке вашей программы. \n"
"Иногда видимость контролируется путем выполнения программы. Но для \n"
"большинства объектов в Common Lisp видимость определяется расположением в\n"
"тексте вашей программе; это хорошо, потому что вы можете рассуждать о "
"видимости,\n"
"просто читая программу, без необходимости сначала рассуждать о потоке "
"управления\n"
"программой."

#: in/chapter08.html:40
msgid "<h2>The technical names: Extent and Scope</h2> "
msgstr ""
"<h2>Технические названия: Объем/Протяженность(Extent) и \n"
"Область видимости(Scope)</h2> "

#: in/chapter08.html:46
msgid ""
"<p>When you read language specifications for Common Lisp, you'll \n"
"see the technical terms extent and scope used in place of lifetime\n"
"and visibility.  I wanted to introduce these concepts first using\n"
"the non-technical terms because I believe them to be more evocative.\n"
"But you should get used to reading about extent and scope.  Remember:"
msgstr ""
"<p>\n"
"Когда вы читаете языковые спецификации для Common Lisp, вы увидите \n"
"технические термины протяженность(extent) и область видимости(scope), \n"
"используемые вместо времени жизни(lifetime) и видимости(visibility). \n"
"Я хотел сначала ввести эти понятия, используя нетехнические термины, \n"
"потому что я считаю их более выразительными. Но вы должны привыкнуть \n"
"читая о протяженности и области видимости. Помните:\n"

#: in/chapter08.html:52
msgid ""
"<blockquote>\n"
"<b>lifetime</b> is to <b>extent</b> <br>\n"
"as<br>\n"
"<b>visibility</b> is to <b>scope</b> \n"
"</blockquote> "
msgstr ""
"<blockquote>\n"
"<b>время жизни(lifetime)</b> это <b>протяженность(extent)</b> <br>\n"
"as<br>\n"
"<b>видимость(visibility)</b> это <b>область видимости(scope)</b> \n"
"</blockquote> "

#: in/chapter08.html:54
msgid "<h2>Really easy cases: top-level defining forms</h2> "
msgstr ""
"<h2>Действительно просты случаи: определяющие формы верхнего уровня</h2> "

#: in/chapter08.html:60
msgid ""
"<p>Top-level defining forms are easy. The objects so defined have\n"
"<em>indefinite</em> extent and scope. This is a fancy way of saying\n"
"that objects defined by top level forms \"always\" exist and are\n"
"visible (or at least potentially accessible, as I'll explain\n"
"shortly) everywhere in the program."
msgstr ""
"<p>\n"
"Определить формы верхнего уровня очень просто. Определенные таким \n"
"образом объекты имеют <em>неопределенную</em> протяженность и область \n"
"видимости. Это причудливый способ сказать, что объекты, определенные \n"
"формами верхнего уровня, \"всегда\" существуют и видны (или, по крайней \n"
"мере, потенциально доступны, как я вскоре объясню) везде в программе."

#: in/chapter08.html:66
msgid ""
"<p>Practically, what this means is that every object defined by a\n"
"top level form exists for as long as the program runs. The object\n"
"comes into existence when the top level form is evaluated. If the\n"
"form was compiled into a file, then the object created by the form\n"
"comes into existence when the compiled file is loaded."
msgstr ""
"<p>\n"
"Практически это означает, что каждый объект, определенный формой \n"
"верхнего уровня, существует до тех пор, пока выполняется программа. \n"
"Объект появляется, когда вычисляется форма верхнего уровня. \n"
"Если форма была скомпилирована в файл, то объект, созданный формой, \n"
"появляется при загрузке скомпилированного файла."

#: in/chapter08.html:75
msgid ""
"<p>An object having indefinite scope is visible everywhere in your\n"
"program. It doesn't matter whether the object was created in a\n"
"different source file or at a different time -- even if it was\n"
"created <em>after</em> you define a function that references the top\n"
"level object (although some Lisp compilers will issue a warning when\n"
"you do this, the code will always behave properly if you evaluate\n"
"the object's defining form before evaluating the function that\n"
"references the object)."
msgstr ""
"<p>\n"
"Объект с неопределенной областью видимости виден везде в вашей программе. \n"
"Не имеет значения, был ли объект создан в другом исходном файле или \n"
"в другое время - даже если он был создан <em>после</em> определения "
"функции, \n"
"ссылающейся на объект верхнего уровня (хотя некоторые компиляторы \n"
"Lisp выдадут предупреждение, когда вы это сделаете), код всегда будет \n"
"вести себя правильно, если вы вычислите определяющую форму объекта \n"
"перед вычислением функции, ссылающейся на объект.\n"

#: in/chapter08.html:83
msgid ""
"<blockquote>\n"
"If you're familiar with the concept of lexical scope as it\n"
"applies to programming languages, you're probably confused by the\n"
"notion of indefinite scope. If I introduce an object whose name\n"
"<em>shadows</em> the name of an object in an outer scope, then that\n"
"outer object is \"not visible\" in the inner scope.  And you're right,\n"
"up to a point."
msgstr ""
"<blockquote>\n"
"Если вы знакомы с понятием лексической области в ее применении \n"
"к языкам программирования,то вас, вероятно, смущает понятие \n"
"неопределенной области. Если я представлю объект, имя которого \n"
"<em>затеняет</em> имя объекта во внешней области, то этот \n"
"внешний объект \"не виден\" во внутренней области. И в какой - \n"
"то степени вы правы."

#: in/chapter08.html:94
msgid ""
"<p>Lisp makes a very clear and explicit distinction between an\n"
"object and its name. We say that an object is bound to a name, or\n"
"that a (named) binding is established for an object. And it is very\n"
"true that a <em>binding</em> in an inner lexical scope may shadow a\n"
"<em>binding</em> in an outer scope. However, the scope of the outer\n"
"object extends into the inner scope, even though it is inaccessible\n"
"via its shadowed binding. This is an important distinction, because\n"
"an object may have more than one binding, and the object must remain\n"
"accessible via any binding which has not been lexically shadowed.\n"
"</blockquote> "
msgstr ""
"<p>\n"
"Лисп делает очень четкое и явное различие между объектом и его именем. \n"
"Мы говорим, что объект привязан к имени или что для объекта установлена\n"
"(именованная) привязка. И это очень верно, что (<em>binding</em>)привязка \n"
"во внутренней лексической области может затенять (<em>binding</em>)привязку\n"
"во внешней области. \n"
"Однако область действия внешнего объекта распространяется и на \n"
"внутреннюю область, даже если он недоступен из-за своей \n"
"затеняющей привязки. Это важное различие, поскольку объект может иметь \n"
"более одной привязки, и объект должен оставаться доступным через любую\n"
"привязку, которая не была лексически затенена.\n"
"</blockquote> "

#: in/chapter08.html:96
msgid "<h2>Scope and extent of parameters and LET variables</h2> "
msgstr ""
"<h2>Область видимости(Scope) и протяженность(extent) параметров и LET "
"переменные\n"
"</h2> "

#: in/chapter08.html:104
msgid ""
"<p>Objects bound by function parameters and <code>LET</code> forms\n"
"have lexical scope. Their bindings are visible beginning at a\n"
"certain textual location in the defining form and continuing through\n"
"the textual end of the defining form. Any reference to a textually\n"
"identical name from outside of the defining form must refer to a\n"
"different binding. A nested defining form may declare a binding that\n"
"shadows an enclosing binding to a textually identical name."
msgstr ""
"<p>Объекты, связанные параметрами функции и <code>LET</code> формы, \n"
"имеют лексическую область видимости/действия. Их привязки видны, \n"
"начиная с определенного текстового места в определяющей форме и \n"
"продолжаются через текст до конца определяющей формы. Любая ссылка \n"
"на текстуально идентичное имя вне пределов определяющей формы \n"
"должна ссылаться на другую привязку. Вложенная определяющая форма \n"
"может объявить привязку, которая затеняет заключающую привязку \n"
"к текстуально идентичному имени.\n"

#: in/chapter08.html:112
msgid ""
"<blockquote>\n"
"This is a slightly more rigorous restatement of concepts\n"
"introduced in <a href=\"chapter03-06.html\">Chapter 3, Lesson 6</a>.\n"
"If you need to refresh your memory, this would be a good time to <a\n"
"href=\"chapter03-06.html\">go back</a> and review the examples in\n"
"that short passage.\n"
"</blockquote> "
msgstr ""
"<blockquote>\n"
"Это несколько более строгое повторение понятий, введенных в \n"
"<a href=\"chapter03-06.html\">Главе 3, Урок 6</a>. Если вам нужно освежить\n"
"свою память, то сейчас самое время вернуться \n"
"<a href=\"chapter03-06.html\">назад</a> и просмотреть примеры\n"
"из этого короткого отрывка.\n"
"</blockquote> "

#: in/chapter08.html:115
msgid ""
"<a name=\"special\"></a> \n"
"<h2>Slightly trickier: special variables</h2> "
msgstr ""
"<a name=\"special\"></a> \n"
"<h2>Немного сложнее: специальные переменные</h2> "

#: in/chapter08.html:122
msgid ""
"<p>Special variables (also known by the more technically correct\n"
"term <em>dynamic variables</em>) have <em>dynamic</em> scope. This\n"
"means that a binding is created for a special variable as a result\n"
"of executing some form in your program. The scope of the dynamic\n"
"binding extends into any form called (directly or indirectly) by the\n"
"form which established the dynamic binding."
msgstr ""
"<p>Специальные переменные (также известные под более технически \n"
"корректным термином <em>динамические переменные</em>) имеют \n"
"<em>динамическую область</em> действия/видимости. Это означает, \n"
"что привязка создается для специальной переменной в результате \n"
"выполнения какой-либо формы в вашей программе. Область видимости \n"
"динамической привязки распространяется на любую форму, вызываемую\n"
"(прямо или косвенно) формой, которая установила динамическую привязку.\n"

#: in/chapter08.html:129
msgid ""
"<p>The extent of a special variable lasts indefinitely, until the\n"
"form that created the dynamic binding is no longer a site of active\n"
"program execution -- in other words, until the defining form (and\n"
"all of the forms called by it) finishes executing.  If the dynamic\n"
"binding is created by a top level form, the extent is the same as \n"
"described previously for top level defining forms."
msgstr ""
"<p>Протяженность(время жизни) специальной переменной длится бесконечно, \n"
"пока форма, создавшая динамическую привязку, не перестанет быть местом \n"
"активного выполнения программы - другими словами, пока определяющая форма \n"
"(и все вызываемые ею формы) не завершат свое выполнение. Если динамическая\n"
"привязка создается формой верхнего уровня, протяженность будет такой же, \n"
"как описано ранее для форм определения верхнего уровня."

#: in/chapter08.html:147
msgid ""
"<pre>\n"
"? (defparameter *my-special-variable* 17)\n"
"*MY-SPECIAL-VARIABLE*\n"
"? (defun show-my-special ()\n"
"    (declare (special *my-special-variable*))\n"
"    (print *my-special-variable*)\n"
"    nil)\n"
"SHOW-MY-SPECIAL\n"
"? (defun do-something-else ()\n"
"    (show-my-special))\n"
"DO-SOMETHING-ELSE\n"
"? (defun dynamically-shadow-my-special ()\n"
"    (let ((*my-special-variable* 8))\n"
"      (do-something-else))\n"
"    (show-my-special))\n"
"DYNAMICALLY-SHADOW-MY-SPECIAL\n"
"? (dynamically-shadow-my-special)"
msgstr ""

#: in/chapter08.html:152
msgid ""
"8\n"
"17\n"
"NIL\n"
"</pre> "
msgstr ""

#: in/chapter08.html:159
msgid ""
"<p>When reading the above, pay special attention to\n"
"<code>DO-SOMETHING-ELSE</code> -- this calls\n"
"<code>SHOW-MY-SPECIAL</code>. <code>SHOW-MY-SPECIAL</code> would\n"
"normally see the lexical value of <code>*MY-SPECIAL-VARIABLE*</code>\n"
"-- 17 -- except for the declaration which says that\n"
"<code>*MY-SPECIAL-VARIABLE*</code> is a special variable."
msgstr ""
"<p>\n"
"Читая вышеизложенное, обратите особое внимание на \n"
"<code>DO-SOMETHING-ELSE</code>. вызывающий  <code>SHOW-MY-SPECIAL</code>. "
"<code>SHOW-MY-SPECIAL</code>  обычно видит лексическое значение \n"
"<code>*MY-SPECIAL-VARIABLE*</code> -- 17 -- кроме декларации, которая "
"гласит, что \n"
"<code>*MY-SPECIAL-VARIABLE*</code> - это специальная переменная."

#: in/chapter08.html:171
msgid ""
"<p><code>DYNAMICALLY-SHADOW-MY-SPECIAL</code> binds\n"
"<code>*MY-SPECIAL-VARIABLE*</code> to the value 8, then calls\n"
"<code>DO-SOMETHING-ELSE</code>, which in turn calls\n"
"<code>SHOW-MY-SPECIAL</code>. At this point, the <code>LET</code>\n"
"binding of <code>*MY-SPECIAL-VARIABLE*</code> is not lexically\n"
"apparent to the code in <code>SHOW-MY-SPECIAL</code>. Yet, because\n"
"the binding is declared special at the point of reference, and\n"
"because the binding <code>LET</code> form is still active when\n"
"<code>DO-SOMETHING-ELSE</code> calls <code>SHOW-MY-SPECIAL</code>,\n"
"the <em>dynamic</em> binding of 8 (rather than the lexical binding\n"
"of 17) is printed."
msgstr ""
"<p><code>DYNAMICALLY-SHADOW-MY-SPECIAL</code> связывает\n"
"<code>*MY-SPECIAL-VARIABLE*</code> со значением 8, \n"
"затем вызывает <code>DO-SOMETHING-ELSE</code> На данный момент, \n"
"<code>LET</code> связывает  <code>*MY-SPECIAL-VARIABLE*</code> \n"
"не лексически очевидным для кода в <code>SHOW-MY-SPECIAL</code>. \n"
"Тем не менее, поскольку привязка объявлена Специальной в этой точке, \n"
"и поскольку форма связывания  <code>LET</code> все еще активна, \n"
"когда <code>DO-SOMETHING-ELSE</code> вызывает <code>SHOW-MY-SPECIAL</code>,\n"
"печатается динамическая привязка к 8 (а не лексическая привязка к 17)\n"

#: in/chapter08.html:176
msgid ""
"<p>Later during execution, the second call to\n"
"<code>SHOW-MY-SPECIAL</code> happens outside of the <code>LET</code>\n"
"form, and the top level value of <code>*MY-SPECIAL-VARIABLE*</code>\n"
"-- 17 -- is printed."
msgstr ""
"<p>Позже во время выполнения второго вызова <code>SHOW-MY-SPECIAL</code>\n"
"происходит за пределами формы <code>LET</code>, и печатается значение "
"верхнего\n"
"уровня стоимости <code>*MY-SPECIAL-VARIABLE*</code> -- 17."

#: in/chapter08.html:186
msgid ""
"<blockquote> Strictly speaking, the <code>(DECLARE (SPECIAL\n"
"...</code> form is not necessary in <code>SHOW-MY-SPECIAL</code> --\n"
"the <code>DEFPARAMETER</code> form has the side effect of\n"
"proclaiming its variable to be special. However, the added\n"
"declaration adds redundant documentation at the point of use of the\n"
"special variable. Furthermore, some Lisp compilers will issue a\n"
"warning (typically: \"<samp>Undeclared free variable assumed\n"
"special</samp>\") that is easily silenced by adding the declaration.\n"
"</blockquote> "
msgstr ""
"<blockquote> \n"
"Строго говоря, форма <code>(DECLARE (SPECIAL ...</code> \n"
"не является необходимой в <code>SHOW-MY-SPECIAL</code> - форма \n"
"<code>DEFPARAMETER</code> имеет побочный эффект объявленения её \n"
"переменной СПЕЦИАЛЬНОЙ. Однако добавленное объявление добавляет \n"
"избыточную документацию в месте использования специальной переменной. \n"
"Кроме того, некоторые компиляторы Lisp выдают предупреждение (обычно:\n"
"\"необъявленная свободная переменная предполагается специальной\"/\n"
"\"<samp>Undeclared free variable assumed special</samp>\"), \n"
"от которого легко избавиться, добавив объявление.\n"
"</blockquote> "

#: in/chapter08.html:199
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter07.html\">Chapter 7</a> | Chapter 8 | <a href=\"chapter09."
"html\">Chapter 9</a> \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its author.  "
"Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
