#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter03-05.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:44+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter03-05.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 3, Lesson 5</title> \n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 3, Lesson 5</title> \n"
"</head> "

#: in/chapter03-05.html:7
msgid ""
"<body bgcolor=\"white\" text=\"black\"><h1>Chapter 3 - Essential Lisp in "
"Twelve Lessons</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\"><h1>Глава 3 - Основы Лисп в 12 "
"уроках</h1> "

#: in/chapter03-05.html:9
msgid "<h2><A NAME=\"lesson-5\">Lesson 5 - Naming and Identity</A></h2> "
msgstr ""
"<h2><A NAME=\"lesson-5\">Урок 5 - Наименование и Идентичность</A></h2> "

#: in/chapter03-05.html:11
msgid "<h3>A symbol is just a name</h3> "
msgstr "<h3>Символ - это всего лишь имя</h3> "

#: in/chapter03-05.html:16
msgid ""
"<P>A symbol is just a name.  It can stand for itself.  This makes it easy \n"
"to write certain kinds of programs in Lisp.  For example, if you want your \n"
"program to represent relationships in your family tree, you can make a \n"
"database that keeps relationships like this:</P>"
msgstr ""
"<P>Символ - это просто имя. Он может сам представлять себя. \n"
"Это позволяет легко писать определенные виды программ на Лиспе. \n"
"Например, если вы хотите, чтобы ваша программа представляла отношения \n"
"в вашем семейном древе, вы можете создать базу данных, которая хранит \n"
"такие отношения:</P>"

#: in/chapter03-05.html:23
msgid ""
"<PRE WIDTH=80>(father John Barry)\n"
"(son John Harold)\n"
"(father John Susan)\n"
"(mother Edith Barry)\n"
"(mother Edith Susan)\n"
"...</PRE>"
msgstr ""

#: in/chapter03-05.html:34
msgid ""
"<P>Each relationship is a list.  <CODE>(father John Barry)</CODE> means \n"
"that John is Barry's father.  Every element of every list in our database \n"
"is a symbol.  Your Lisp program can compare symbols in this database to \n"
"determine, for example, that Harold is Barry's grandfather.  If you tried \n"
"to write a program like this in another language -- a language without \n"
"symbols -- you'd have to decide how to represent the names of family \n"
"members and relationships, and then create code to perform all the needed \n"
"operations -- reading, printing, comparison, assignment, etc.  This is all \n"
"built into Lisp, because symbols are a data type distinct from the objects \n"
"they might be used to name.</P>"
msgstr ""
"<P>\n"
"Каждое отношение - это список. <CODE>(father John Barry)</CODE> означает, \n"
"что Джон-это отец Барри. Каждый элемент каждого списка в нашей базе данных \n"
"является символом. Ваша программа Lisp может сравнить символы в этой базе "
"данных, \n"
"чтобы определить, например, что Гарольд-дедушка Барри. Если бы вы "
"попытались \n"
"написать подобную программу на другом языке-языке без символов, - вам "
"пришлось \n"
"бы решить, как представлять имена членов семьи и отношения, а затем "
"создать \n"
"код для выполнения всех необходимых операций-чтения, печати, сравнения, "
"присваивания\n"
"и т. д. Все это встроено в Lisp, потому что символы-это тип данных, отличный "
"от объектов, для которых они могут использоваться в качестве имен.\n"
"</P>"

#: in/chapter03-05.html:36
msgid "<h3>A symbol is always unique</h3> "
msgstr "<h3>Символ- всегда уникален</h3> "

#: in/chapter03-05.html:40
msgid ""
"<P>Every time your program uses a symbol, that symbol is \n"
"<EM>identical</EM> to every other symbol with the same name.  You can use \n"
"the <CODE>EQ</CODE> test to compare symbols:</P>"
msgstr ""
"<P>\n"
"Каждый раз, когда ваша программа использует символ, этот символ \n"
"<EM>идентичен</EM> любому другому символу с тем же именем. \n"
"Вы можете использовать тест <CODE>EQ</CODE> для сравнения символов:\n"
"</P>"

#: in/chapter03-05.html:42
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(eq 'a 'a)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM"
"\"> T<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(eq 'david 'a)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN="
"\"BOTTOM\"> NIL<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN="
"\"BOTTOM\"> (eq 'David 'DAVID)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-"
"&gt;\" ALIGN=\"BOTTOM\"> T<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" "
"ALIGN=\"BOTTOM\"> (setq zzz 'sleeper)<br><IMG SRC=\"gifs/right-arrow.gif\" "
"ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> SLEEPER<br><br><IMG SRC=\"gifs/circle-dot.gif"
"\" ALT=\"?\" ALIGN=\"BOTTOM\"> (eq zzz 'sleeper)<br><IMG SRC=\"gifs/right-"
"arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> T</PRE>"
msgstr ""

#: in/chapter03-05.html:47
msgid ""
"<P>Notice that it doesn't matter whether you use uppercase or lowercase \n"
"letters in your symbol names.  Internally, Lisp translates every "
"alphabetic \n"
"character in a symbol name to a common case -- usually upper, but you can \n"
"control this by setting a flag in the Lisp reader.</P>"
msgstr ""
"<P>\n"
"Обратите внимание, что не имеет значения, используете ли вы прописные или \n"
"строчные буквы в названиях ваших символов. Внутренне Lisp переводит каждый \n"
"буквенный символ в имени символа в общий регистр - обычно верхний, но вы \n"
"можете управлять этим, установив флаг в программе чтения Lisp.\n"
"</P>"

#: in/chapter03-05.html:55
msgid ""
"<BLOCKQUOTE>\n"
"When you learn about packages in <A HREF=\"chapter03-10.html\">Lesson 10</"
"A> \n"
"(also see <A HREF=\"chapter31.html\">Chapter 31</A>), you can create "
"symbol \n"
"names that are not identical given the same spelling.  For now, all you \n"
"need to know is that any symbol spelled with a <CODE>:</CODE> gets special \n"
"treatment.\n"
"</BLOCKQUOTE>"
msgstr ""
"<BLOCKQUOTE>\n"
"Когда вы узнаете о пакетах(package) в <A HREF=\"chapter03-10.html\">Уроке "
"10</A>\n"
"(Также смотрите <A HREF=\"chapter31.html\">Главу 31</A>), вы можете "
"создать \n"
"имена символов, которые не идентичны при одинаковом написании. \n"
"На данный момент все, что вам нужно знать, - это то, что любой символ, \n"
"написанный с двоеточием <CODE>:</CODE>, получает особую обработку.\n"
"</BLOCKQUOTE>"

#: in/chapter03-05.html:57
msgid "<h3>A symbol can name a value</h3> "
msgstr "<h3>Символ может именовать значение</h3> "

#: in/chapter03-05.html:63
msgid ""
"<P>Although the ability for a Lisp symbol to stand for itself is sometimes \n"
"useful, a more common use is for the symbol to name a value.  This is the \n"
"role played by variable and function names in other programming "
"languages.  \n"
"A Lisp symbol most commonly names a value or -- when used as the first \n"
"element of a function call form -- a function.</P>"
msgstr ""
"<P>\n"
"Хотя возможность для символа Lisp представлять самого себя иногда и полезна, "
"более\n"
"распространенным является использование символа для имени значения. Именно "
"такую роль\n"
"играют имена переменных и функций в других языках программирования. Символ "
"Lisp \n"
"чаще всего именует значение или, при использовании в качестве первого "
"элемента формы вызова функции, функцию.\n"
"</P>"

#: in/chapter03-05.html:66
msgid ""
"<P>What's unusual about Lisp is that a symbol can have a value as a \n"
"function and a variable at the same time:</P>"
msgstr ""
"<P>\n"
"Что необычно в Lisp, так это то, что символ может иметь значение как функция "
"и \n"
"переменная одновременно:</P>"

#: in/chapter03-05.html:68
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(setq first 'number-one)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" "
"ALIGN=\"BOTTOM\"> NUMBER-ONE<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?"
"\" ALIGN=\"BOTTOM\"> (first (list 3 2 1))<br><IMG SRC=\"gifs/right-arrow.gif"
"\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> 3<br><br><IMG SRC=\"gifs/circle-dot.gif\" "
"ALT=\"?\" ALIGN=\"BOTTOM\"> first<br><IMG SRC=\"gifs/right-arrow.gif\" ALT="
"\"-&gt;\" ALIGN=\"BOTTOM\"> NUMBER-ONE</PRE>"
msgstr ""

#: in/chapter03-05.html:75
msgid ""
"<P>Note how <CODE>FIRST</CODE> is used as a variable in the first and last \n"
"case, and as a function (predefined by Lisp, in this example) in the "
"second \n"
"case.  Lisp decides which of these values to use based on where the symbol \n"
"appears.  When the evaluation rule requires a value, Lisp looks for the \n"
"variable value of the symbol.  When a function is called for, Lisp looks \n"
"for the symbol's function.</P>"
msgstr ""
"<P>\n"
"Обратите внимание, как <CODE>FIRST</CODE> используется в качестве "
"переменной \n"
"в первом и последнем случае, а также в качестве функции (предопределенной \n"
"Lisp, в данном примере) во втором случае. Lisp решает, какое из этих "
"значений\n"
"использовать, основываясь на том, где появляется символ. Когда правило "
"выполнения\n"
"требует значения, Lisp ищет переменное значение символа. Когда вызывается "
"функция, \n"
"Lisp ищет функцию символа.\n"
"</P>"

#: in/chapter03-05.html:84
msgid ""
"<P>A symbol can have other values besides those it has as a variable or \n"
"function.  A symbol can also have values for its documentation, property \n"
"list, and print name.  A symbol's documentation is text that you create to \n"
"describe a symbol.  You can create this using the \n"
"<CODE>DOCUMENTATION</CODE> form or as part of certain forms which define a \n"
"symbol's value.  Because a symbol can have multiple meanings, you can \n"
"assign documentation to each of several meanings, for example as a "
"function \n"
"and as a variable.</P>"
msgstr ""
"<P>\n"
"Символ может иметь и другие значения, помимо тех, которые он имеет в "
"качестве \n"
"переменной или функции. Символ также может иметь значения для своей "
"документации,\n"
"списка свойств и печатного имени. Документация к символу - это текст, "
"который \n"
"вы создаете для описания символа. Вы можете создать его с помощью формы \n"
"<CODE>DOCUMENTATION</CODE> или как часть определенных форм, которые \n"
"определяют значение символа. Поскольку символ может иметь несколько "
"значений, \n"
"вы можете назначить документацию каждому из нескольких значений, например "
"как \n"
"функции и как переменной.\n"
"</P>"

#: in/chapter03-05.html:88
msgid ""
"<P>A property list is like a small database with a single key per entry.  \n"
"We'll look at this use of symbols in <A HREF=\"chapter03-10.html\">Lesson \n"
"10</A>.</P>"
msgstr ""
"<P>\n"
"Список свойств подобен небольшой базе данных с одним ключом на запись. \n"
"Мы рассмотрим это использование символов в <A HREF=\"chapter03-10.html"
"\">Уроке 10</A>.\n"
"</P>"

#: in/chapter03-05.html:93
msgid ""
"<P>The print name is what Lisp uses to print the symbol.  You normally \n"
"don't want to change this; if you do, Lisp will print the symbol with a \n"
"different name than it originally used to read the symbol, which will \n"
"create a different symbol when later read by Lisp.</P>"
msgstr ""
"<P>\n"
"Печатное имя - это то, что Lisp использует для печати символа. Обычно вы \n"
"не хотите его менять; если вы это сделаете, Lisp напечатает символ с "
"другим \n"
"именем, чем его первоначальное использование при чтении символа, что "
"создаст \n"
"другой символ при последующем чтении Lisp.\n"
"</P>"

#: in/chapter03-05.html:95
msgid "<h3>A value can have more than one name</h3> "
msgstr "<h3>Значение может иметь несколько имен</h3> "

#: in/chapter03-05.html:101
msgid ""
"<P>A value can have more than one name.  That is, more than one symbol can \n"
"share a value.  Other languages have pointers that work this way.  Lisp \n"
"does not expose pointers to the programmer, but does have shared objects.  \n"
"An object is considered identical when it passes the <CODE>EQ</CODE> \n"
"test.  Consider the following:</P>"
msgstr ""
"<P>\n"
"Значение может иметь несколько имен. То есть более чем один символ может \n"
"иметь общее значение. В других языках есть указатели, которые работают \n"
"таким образом. Lisp не предоставляет указатели программисту, но имеет \n"
"общие объекты. Объект считается идентичным, когда он проходит тест <CODE>EQ</"
"CODE>. Рассмотрим следующее:\n"
"</P>"

#: in/chapter03-05.html:103
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(setq L1 (list 'a 'b 'c))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" "
"ALIGN=\"BOTTOM\"> (A B C)<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" "
"ALIGN=\"BOTTOM\"> (setq L2 L1)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-"
"&gt;\" ALIGN=\"BOTTOM\"> (A B C)<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT="
"\"?\" ALIGN=\"BOTTOM\"> (eq L1 L2)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT="
"\"-&gt;\" ALIGN=\"BOTTOM\"> T<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?"
"\" ALIGN=\"BOTTOM\"> (setq L3 (list 'a 'b 'c))<br><IMG SRC=\"gifs/right-"
"arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> (A B C)<br><br><IMG SRC=\"gifs/"
"circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (eq L3 L1)<br><IMG SRC=\"gifs/"
"right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> NIL</PRE>"
msgstr ""

#: in/chapter03-05.html:113
msgid ""
"<P>Here, <CODE>L1</CODE> is <CODE>EQ</CODE> to <CODE>L2</CODE> because \n"
"<CODE>L1</CODE> names the <EM>same value</EM> as <CODE>L2</CODE>.  In "
"other \n"
"words, the value created by the <CODE>(LIST 'A 'B 'C)</CODE> form has two \n"
"names, <CODE>L1</CODE> and <CODE>L2</CODE>.  The <CODE>(SETQ L2 L1)</CODE> \n"
"form says, \"Make the value of <CODE>L2</CODE> be the value of \n"
"<CODE>L1</CODE>.\" Not a copy of the the value, but the value.  So \n"
"<CODE>L1</CODE> and <CODE>L2</CODE> <EM>share</EM> the same value -- the \n"
"list <CODE>(A B C)</CODE> which was first assigned as the value of \n"
"<CODE>L1</CODE>.</P>"
msgstr ""
"<P>Здесь <CODE>L1</CODE> эквивалентен <CODE>EQ</CODE> - <CODE>L2</CODE>,\n"
"потому что <CODE>L1</CODE> именует <EM>тоже самое значение</EM>, что и\n"
"<CODE>L2</CODE>.  Другими словами, значение, созданное формой\n"
"<CODE>(LIST 'A 'B 'C)</CODE> имеет два имени: <CODE>L1</CODE> и \n"
"<CODE>L2</CODE>.  Форма <CODE>(SETQ L2 L1)</CODE> гласит: \n"
"\"Пусть значение <CODE>L2</CODE> имеет значение <CODE>L1</CODE>.\" \n"
"Не копию значения, а само значение.  Таким образом \n"
"<CODE>L1</CODE> и <CODE>L2</CODE> <EM>разделяют</EM> одно и тоже значение "
"--  список <CODE>(A B C)</CODE>, которое сначала было присвоено как "
"значение \n"
"<CODE>L1</CODE>.</P>"

#: in/chapter03-05.html:123
msgid ""
"<P><CODE>L3</CODE> also has a list <CODE>(A B C)</CODE> as its value, but \n"
"it is a <EM>different</EM> list than the one shared by <CODE>L1</CODE> and \n"
"<CODE>L2</CODE>.  Even though the value of <CODE>L3</CODE> <EM>looks</EM> \n"
"the same as the value of <CODE>L1</CODE> and <CODE>L2</CODE>, it is a \n"
"different list because it was created by a different <CODE>LIST</CODE> \n"
"form.  So <CODE>(EQ L3 L1)</CODE><IMG SRC=\"gifs/right-arrow.gif\" \n"
"ALT=\"-&gt;\" ALIGN=\"BOTTOM\"><CODE>NIL</CODE> because their values are \n"
"different lists, each made of the symbols <CODE>A</CODE>, <CODE>B</CODE>, \n"
"and <CODE>C</CODE>.</P>"
msgstr ""
"<P><CODE>L3</CODE> также содержит список <CODE>(A B C)</CODE> \n"
"в качестве значения, но это <EM>другой</EM> список, отличный от того "
"который\n"
"разделяют <CODE>L1</CODE> и <CODE>L2</CODE>.  Даже если значение\n"
"<CODE>L3</CODE> <EM>выглядит</EM> так же, как значение <CODE>L1</CODE>\n"
"и <CODE>L2</CODE>, это другой список, потому что он был создан\n"
"другой формой  <CODE>LIST</CODE>.  \n"
"Так что <CODE>(EQ L3 L1)</CODE><IMG SRC=\"gifs/right-arrow.gif\" \n"
"ALT=\"-&gt;\" ALIGN=\"BOTTOM\"><CODE>NIL</CODE>, потому что их значения,\n"
"это разные списки, каждый из которых состоит из символов <CODE>A</CODE>, "
"<CODE>B</CODE> и <CODE>C</CODE>.</P>"

#: in/chapter03-05.html:138
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter02.html\">Chapter 2</a> | <A HREF=\"chapter03.html"
"\">Chapter 3, Introduction</A> | <A HREF=\"chapter03-04.html\">Chapter 3, "
"Lesson 4</A> | Chapter 3, Lesson 5 | <A HREF=\"chapter03-06.html\">Chapter "
"3, Lesson 6</A> | <a href=\"chapter04.html\">Chapter 4</a> | \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its \n"
"author.  Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
