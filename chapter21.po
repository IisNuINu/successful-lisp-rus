#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter21.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:51+0300\n"
"PO-Revision-Date: 2020-06-12 19:59+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter21.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 21</title>\n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 21</title>\n"
"</head> "

#: in/chapter21.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 21 - Fancy Tricks with Function and Macro Arguments</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 21 - Необычные трюки с аргументами функций и\n"
"макросов</h1> "

#: in/chapter21.html:17
msgid ""
"<P>We've already seen (in <a href=\"chapter04.html\">Chapter 4</a>)\n"
"how <code>&amp;OPTIONAL</code> parameters can reduce the number of\n"
"arguments that you have to supply for the most common calls of a\n"
"function. In this chapter we'll look at additional language features\n"
"that let you declare named (keyword) parameters and provide default\n"
"values for unspecified parameters. We'll also take a look at\n"
"structured argument lists, which let you group related parameters\n"
"for clarity."
msgstr ""
"<P>\n"
"Мы уже видели (в  <a href=\"chapter04.html\">Главе 4</a>), как параметр\n"
" <code>&amp;OPTIONAL</code> может уменьшить количество аргументов, \n"
"которые вы должны предоставить для наиболее распространенных вызовов \n"
"функции. В этой главе мы рассмотрим дополнительные языковые функции, \n"
"которые позволяют объявлять именованные (ключевые слова) параметры \n"
"и предоставлять значения по умолчанию для неопределенных параметров. \n"
"Мы также рассмотрим структурированные списки аргументов, которые \n"
"позволяют сгруппировать связанные параметры для большей ясности."

#: in/chapter21.html:19
msgid "<h2>Keywords let you name your parameters</h2>"
msgstr "<h2>Ключевые слова позволяют именовать ваши параметры</h2>"

#: in/chapter21.html:28
msgid ""
"<p>Sometimes you'll want to define a function (or macro) that works\n"
"just fine with a small list of arguments, but can be extended in\n"
"useful -- and obvious, I hope -- ways through the addition of extra\n"
"arguments. But you'd rather not specify <em>all</em> of the\n"
"arguments <em>all</em> of the time. We've already seen keyword\n"
"arguments used in <a href=\"chapter13.html\"> Chapter 13</a> with the\n"
"sequence functions, and in <a href=\"chapter19.html\"> Chapter 19</a>\n"
"with the stream functions."
msgstr ""
"<p>\n"
"Иногда вам хочется определить функцию (или макрос), которая отлично \n"
"работает с небольшим списком аргументов, но может быть расширена полезными "
"- \n"
"и очевидными, я надеюсь, - способами,  путем добавления дополнительных "
"аргументов. \n"
"Но вы бы предпочли не указывать <em>все</em> аргументы <em>постоянно</em>. \n"
"Мы уже видели аргументы  ключевые слова, используемые в \n"
"<a href=\"chapter13.html\"> Главе 13</a> с функциями работающими с "
"последовательности, \n"
"и в <a href=\"chapter19.html\"> Главе 19</a> с функциями работающими с "
"потоками.\n"

#: in/chapter21.html:32
msgid ""
"<p>You can use keyword arguments for your own functions or macros\n"
"by adding a <code>&amp;key</code> marker to the lambda list.  The\n"
"general form (also used for <code>DEFMACRO</code>) is:"
msgstr ""
"<p>\n"
"Вы можете использовать аргументы ключевые слова для своих собственных \n"
"функций или макросов, добавив маркер <code>&amp;key</code> в лямбда-"
"список. \n"
"Общая форма (также используемая для <code>DEFMACRO</code>)  является:"

#: in/chapter21.html:37
msgid ""
"<pre>\n"
"(defun <i>name</i> (<i>req-arg</i> ... &amp;key <i>key-arg</i>)\n"
"  ...)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:43
msgid ""
"<p>All of the required arguments (<i>req-arg</i>) must precede the\n"
"<code>&amp;KEY</code> marker. The <i>key-arg</i>s name the variable\n"
"that you'll reference from within your function's definition; the\n"
"same <i>key-arg</i> name in the keyword package (i.e. preceded with\n"
"a colon) is used in the call as a prefix for the keyword value."
msgstr ""
"<p>\n"
"Все необходимые аргументы (<i>req-arg</i>) должны предшествовать \n"
"маркеру <code>&amp;KEY</code>. Имя переменной <i>key-arg</i>, на \n"
"которую вы будете ссылаться в определении вашей функции; то же \n"
"самое имя  <i>key-arg</i> в пакете ключевых слов (т. е. имеющее\n"
"предшествующее двоеточие) используется в вызове в качестве префикса \n"
"для задания значения ключевого слова."

#: in/chapter21.html:57
msgid ""
"<pre>\n"
"? (defun keyword-sample-1 (a b c &amp;key d e f)\n"
"    (list a b c d e f))\n"
"KEYWORD-SAMPLE-1\n"
"? (keyword-sample-1 1 2 3)\n"
"(1 2 3 NIL NIL NIL)\n"
"? (keyword-sample-1 1 2 3 :d 4)\n"
"(1 2 3 4 NIL NIL)\n"
"? (keyword-sample-1 1 2 3 :e 5)\n"
"(1 2 3 NIL 5 NIL)\n"
"? (keyword-sample-1 1 2 3 :f 6 :d 4 :e 5)\n"
"(1 2 3 4 5 6)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:61
msgid ""
"<p>You'll notice from the last sample that keyword parameters may\n"
"be listed in any order. However, as in their lambda list declaration,\n"
"all keyword parameters must follow all required parameters."
msgstr ""
"<p>\n"
"Из последнего примера вы заметите, что параметры ключевые слова могут быть \n"
"перечислены в любом порядке. Однако, как и в их объявлении лямбда-списка, \n"
"все ключевые параметры должны следовать после требуемых параметров."

#: in/chapter21.html:63
msgid "<h2>Default values for when you'd rather not say</h2>"
msgstr "<h2>Значения по умолчанию, когда вы не хотите говорить</h2>"

#: in/chapter21.html:69
msgid ""
"<p>Any keyword parameter that you don't specify in a call receives a\n"
"<code>NIL</code> default value. You can change the default using a\n"
"variation of the keyword argument declaration: instead of just the\n"
"argument name, specify <code>(</code><i>name</i>\n"
"<i>default</i><code>)</code>, like this:"
msgstr ""
"<p>\n"
"Любой параметр ключевое слово, который вы не указываете в вызове, \n"
"получает значение по умолчанию <code>NIL</code>. Вы можете изменить "
"значение \n"
"по умолчанию, используя вариант объявления аргумента ключевого слова: "
"вместо \n"
"простого имени аргумента укажите <code>(</code><i>name</i>\n"
"<i>default</i><code>)</code>, например:"

#: in/chapter21.html:79
msgid ""
"<pre>\n"
"? (defun keyword-sample-2 (a &amp;key (b 77) (c 88))\n"
"    (list a b c))\n"
"KEYWORD-SAMPLE-2\n"
"? (keyword-sample-2 1)\n"
"(1 77 88)\n"
"? (keyword-sample-2 1 :c 3)\n"
"(1 77 3)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:87
msgid ""
"<p>You can also find out whether a keyword parameter was specified\n"
"in the call, even if it was specified using the default value. The\n"
"keyword argument declaration looks like this:\n"
"<code>(</code><i>name</i> <i>default</i>\n"
"<i>arg-supplied-p</i><code>)</code>, where <i>arg-supplied-p</i> is\n"
"the name of a variable that your function's definition reads as\n"
"<code>NIL</code> only if no argument is supplied in the call."
msgstr ""
"<p>\n"
"Вы также можете узнать, был ли указан параметр ключевое слово в вызове, \n"
"даже если он был указан с использованием значения по умолчанию. \n"
"Объявление аргумента ключевого слова выглядит следующим образом: \n"
"<code>(</code><i>name</i> <i>default</i> <i>arg-supplied-p</i><code>)</"
"code>, \n"
"где <i>arg-supplied-p</i><code>)</code> - это имя переменной, которую \n"
"определение вашей функции считывает как <code>NIL</code> только в том \n"
"случае, если аргумент не указан в вызове."

#: in/chapter21.html:101
msgid ""
"<pre>\n"
"? (defun keyword-sample-3 (a &amp;key (b nil b-p) (c 53 c-p))\n"
"    (list a b b-p c c-p))\n"
"KEYWORD-SAMPLE-2\n"
"? (keyword-sample-3 1)\n"
"(1 NIL NIL 53 NIL)\n"
"? (keyword-sample-3 1 :b 74)\n"
"(1 74 T 53 NIL)\n"
"? (keyword-sample-3 1 :b nil)\n"
"(1 NIL T 53 NIL)\n"
"? (keyword-sample-3 1 :c 9)\n"
"(1 NIL NIL 9 T)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:104
msgid ""
"<p>Default values and supplied-p variable can also be used with\n"
"<code>&amp;OPTIONAL</code> parameters."
msgstr ""
"<p>\n"
"Значения по умолчанию и поставляемая переменная также могут использоваться \n"
"с дополнительными(<code>&amp;OPTIONAL</code>) параметрами.\n"

#: in/chapter21.html:116
msgid ""
"<pre>\n"
"? (defun optional-sample-1 (a &amp;optional (b nil b-p))\n"
"    (list a b b-p))\n"
"OPTIONAL-SAMPLE-1\n"
"? (optional-sample-1 1)\n"
"(1 NIL NIL)\n"
"? (optional-sample-1 1 nil)\n"
"(1 NIL T)\n"
"? (optional-sample-1 1 2)\n"
"(1 2 T)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:121
msgid ""
"<p>If you use both <code>&amp;OPTIONAL</code> and <code>&amp;KEY</code> \n"
"parameters, all of the optional parameters must precede all of the keyword\n"
"parameters, both in the declaration and the call. Of course, the required\n"
"parameters must always appear before all other parameters."
msgstr ""
"<p>\n"
"Когда вы определяете оба параметра  <code>&amp;OPTIONAL</code> и \n"
"<code>&amp;KEY</code>, вызов должен включать значения для всех "
"необязательных \n"
"параметров, если он задает какие-либо параметры ключевые слова, как в \n"
"последнем примере выше. Посмотрите, что может произойти, если вы опустите \n"
"некоторые необязательные параметры:"

#: in/chapter21.html:135
msgid ""
"<pre>\n"
"? (defun optional-keyword-sample-1 (a &amp;optional b c &amp;key d e)\n"
"    (list a b c d e))\n"
"OPTIONAL-KEYWORD-SAMPLE-1\n"
"? (optional-keyword-sample-1 1)\n"
"(1 NIL NIL NIL NIL)\n"
"? (optional-keyword-sample-1 1 2)\n"
"(1 2 NIL NIL NIL)\n"
"? (optional-keyword-sample-1 1 2 3)\n"
"(1 2 3 NIL NIL)\n"
"? (optional-keyword-sample-1 1 2 3 :e 5)\n"
"(1 2 3 NIL 5)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:141
msgid ""
"<p>When you define both <code>&amp;OPTIONAL</code> and <code>&amp;KEY</"
"code> \n"
"arguments, the call must include values for <em>all</em> of the optional\n"
"parameters if it specifies <em>any</em> keyword parameters, as in the last\n"
"sample, above.  Look at what can happen if you omit some optional\n"
"parameters:"
msgstr ""
"<p>\n"
"Когда вы определяете оба аргумента <code>&amp;OPTIONAL</code> и <code>&amp;"
"KEY</code>,\n"
"вызов должен включать значения для всех необязательных параметров, если он "
"задает \n"
"какие-либо параметры ключевые слова, как в последнем примере выше. "
"Посмотрите, \n"
"что может произойти, если вы опустите некоторые необязательные параметры:"

#: in/chapter21.html:149
msgid ""
"<pre>\n"
"? (defun optional-keyword-sample-2 (a &amp;optional b c d &amp;key e f)\n"
"    (list a b c d e f))\n"
"OPTIONAL-KEYWORD-SAMPLE-2\n"
"? (optional-keyword-sample-2 1 2 :e 3)\n"
"(1 2 :E 3 NIL NIL)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:155
msgid ""
"<blockquote>\n"
"Even though a Common Lisp function (<code>READ-FROM-STRING</code>) uses\n"
"both optional and keyword arguments, you should <em>not</em> do the same "
"when\n"
"you define your own functions or macros.\n"
"</blockquote> "
msgstr ""
"<blockquote>\n"
"Несмотря на то, что функция Common Lisp (<code>READ-FROM-STRING</code>) \n"
"использует как необязательные, так и аргументы ключевые слова, <em>не</em> \n"
"делайте так при определении собственных функций или макросов..\n"
"</blockquote> "

#: in/chapter21.html:157
msgid "<h2>Add some structure to your macros by taking apart arguments</h2>"
msgstr ""
"<h2>Добавьте некоторую структуру в ваши макросы, разбирая аргументы</h2>"

#: in/chapter21.html:160
msgid ""
"<p>You can use <em>destructuring</em> to create groups of parameters\n"
"for macros."
msgstr ""
"<p>Деструктурирование/выборку параметров из структуры(<em>destructuring</"
"em>) можно\n"
"использовать для создания групп параметров макросов."

#: in/chapter21.html:168
msgid ""
"<pre>\n"
"? (defmacro destructuring-sample-1 ((a b) (c d))\n"
"    `(list ',a ',b ',c ',d))\n"
"DESTRUCTURING-SAMPLE-1\n"
"? (destructuring-sample-1 (1 2) (3 4))\n"
"(1 2 3 4)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:170
msgid "<p>You can use all the usual techniques within each group."
msgstr "<p>Вы можете использовать все обычные методы в каждой группе"

#: in/chapter21.html:182
msgid ""
"<pre>\n"
"? (defmacro destructuring-sample-2 ((a &amp;key b) (c &amp;optional d))\n"
"    `(list ',a ',b ',c ',d))\n"
"DESTRUCTURING-SAMPLE-2\n"
"? (destructuring-sample-2 (1) (3))\n"
"(1 NIL 3 NIL)\n"
"? (destructuring-sample-2 (1 :b 2) (3))\n"
"(1 2 3 NIL)\n"
"? (destructuring-sample-2 (1) (3 4))\n"
"(1 NIL 3 4)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:184
msgid "<p>And the groupings can even be nested."
msgstr "<p>И группировки могут быть даже вложенными."

#: in/chapter21.html:192
msgid ""
"<pre>\n"
"? (defmacro destructuring-sample-3 ((a &amp;key b) (c (d e) &amp;optional "
"f))\n"
"    `(list ',a ',b ',c ',d ',e ',f))\n"
"DESTRUCTURING-SAMPLE-3\n"
"? (destructuring-sample-3 (1) (3 (4 5)))\n"
"(1 NIL 3 4 5 NIL)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:200
msgid ""
"<p>Destructuring is commonly used to set off a group of arguments or\n"
"declarations from the body forms in a macro. Here's an extended\n"
"example, <code>WITH-PROCESSES</code>, that expects a name, a list of\n"
"a variable name (pid) and a process count (num-processes), and a\n"
"list of another variable name (work-item) and a list of elements to\n"
"process (work-queue). All of these arguments are grouped before the\n"
"body forms."
msgstr ""
"<p>\n"
"Деструктурирование/выбор значений из структуры обычно используется для \n"
"выделения группы аргументов или объявлений из форм тела в макросе. Вот \n"
"расширенный пример <code>WITH-PROCESSES</code>, который ожидает имя, \n"
"список имени переменной (pid) и количество процессов (num-processes), \n"
"а также список другого имени переменной (work-item) и список элементов \n"
"для обработки (work-queue). Все эти аргументы сгруппированы перед формами \n"
"тела."

#: in/chapter21.html:227
msgid ""
"<pre>\n"
"? (defmacro with-processes ((name \n"
"                             (pid num-processes)\n"
"                             (work-item work-queue)) &amp;body body)\n"
"    (let ((process-fn (gensym))\n"
"          (items (gensym))\n"
"          (items-lock (gensym)))\n"
"      `(let ((,items (copy-list ,work-queue))\n"
"             (,items-lock (make-lock)))\n"
"         (flet ((,process-fn (,pid)\n"
"                  (let ((,work-item nil))\n"
"                    (loop\n"
"                      (with-lock-grabbed (,items-lock)\n"
"                        (setq ,work-item (pop ,items)))\n"
"                      (when (null ,work-item)\n"
"                        (return))\n"
"                      <i>;;(format t \"~&amp;running id ~D~%\" ,pid)</i> \n"
"                      ,@body))))\n"
"           (dotimes (i ,num-processes)\n"
"             <i>;;(format t \"~&amp;creating id ~D~%\" ,id)</i> \n"
"             (process-run-function\n"
"              (format nil \"~A-~D\" ,name i)\n"
"              #',process-fn\n"
"              i))))))\n"
"WITH-PROCESSES\n"
"</pre> "
msgstr ""

#: in/chapter21.html:234
msgid ""
"<p>Processes are not part of the ANSI Common Lisp standard, but are \n"
"present in almost every implementation. (We'll revisit processes in\n"
"<a href=\"chapter32.html\">Chapter 32</a>, along with some other common\n"
"language extensions.)  The code shown above works with Macintosh Common \n"
"Lisp, whose process interface is very similar to that found on the \n"
"Symbolics Lisp Machines of days past."
msgstr ""
"<p>\n"
"Процессы не являются частью стандарта ANSI Common Lisp, но присутствуют \n"
"почти в каждой реализации. (Мы еще вернемся к процессам в \n"
"<a href=\"chapter32.html\">Главе 32</a> вместе с некоторыми другими \n"
"распространенными языковыми расширениями.) Код, показанный выше, работает \n"
"с Macintosh Common Lisp, чей интерфейс процесса очень похож на тот, что "
"был \n"
"найден на машинах Symbolics Lisp прошлых дней."

#: in/chapter21.html:251
msgid ""
"<p>I'll describe a few key portions of the macro expander in case\n"
"you want to figure out what's going on; if you'd rather just see how\n"
"the macro gets called, you can skip the rest of this paragraph. The\n"
"<code>FLET</code> form defines a function. In this case, the\n"
"function defined by <code>FLET</code> will be used to do the actual\n"
"work within a Lisp process -- grab a lock on the work queue, remove\n"
"an item, release the lock, then process the item using the body\n"
"forms. The <code>PROCESS-RUN-FUNCTION</code> creates a Lisp process\n"
"with a given name (generated by the <code>FORMAT</code> form) and a\n"
"function to execute. The <code>WITH-PROCESSES</code> macro creates\n"
"<code>NUM-PROCESSES</code> Lisp processes (named\n"
"<i>name</i>-<i>#</i>) and within each process executes the\n"
"<code>BODY</code> forms with <code>PID</code> bound to the process\n"
"number and <code>WORK-ITEM</code> bound to some element of\n"
"<code>WORK-QUEUE</code>. The processes terminate themselves once the\n"
"work queue has been consumed."
msgstr ""
"<p>\n"
"Я опишу несколько ключевых частей расширителя макросов на случай, \n"
"если вы хотите выяснить, что происходит; если вы предпочитаете просто \n"
"посмотреть, как вызывается макрос, вы можете пропустить остальную часть "
"этого \n"
"абзаца. Форма <code>FLET</code> определяет функцию. В этом случае функция, \n"
"определенная <code>FLET</code>, будет использоваться для выполнения "
"фактической \n"
"работы в процессе Lisp - захвате блокировки в рабочей очереди, удаления "
"элемента,\n"
"освобождении блокировки, а затем обработке элемента с помощью форм тела. \n"
"Функция <code>PROCESS-RUN-FUNCTION</code> создает процесс Lisp с заданным "
"именем\n"
"(генерируемым формой <code>FORMAT</code>) и функцией для выполнения. "
"Макрос \n"
"<code>WITH-PROCESSES</code> создает <code>NUM-PROCESSES</code> Lisp-"
"процессов\n"
"с именами (named <i>name</i>-<i>#</i>) и внутри каждого процесса выполняет "
"формы\n"
"<code>BODY</code> с <code>PID</code>, привязанным к номеру процесса, и \n"
"<code>WORK-ITEM</code>, привязанным к некоторому элементу из <code>WORK-"
"QUEUE</code>.\n"
"Процессы завершаются сами по себе, как только рабочая очередь будет "
"израсходована."

#: in/chapter21.html:261
msgid ""
"<p>Here's an example of how we call <code>WITH-PROCESSES</code>. The\n"
"parameters are <code>\"Test\"</code> (used for the process names),\n"
"<code>(id 3)</code> (the variable bound to the process ID within a\n"
"process, and the number of processes to create), and <code>(item '(1\n"
"2 ... 15 16)</code> (the variable bound to an individual work item\n"
"within a process, and the list of items to be consumed by the\n"
"processes). The <code>FORMAT</code> and <code>SLEEP</code> forms\n"
"comprise the body of the processes, and the final argument to the \n"
"<code>WITH-PROCESSES</code> macro call."
msgstr ""
"<p>\n"
"Вот пример того, как мы вызываем <code>WITH-PROCESSES</code>. Параметры - \n"
"это <code>\"Test\"</code> (используется для создания имен процессов), \n"
"<code>(id 3)</code> (переменная, привязанная к идентификатору процесса "
"внутри \n"
"процесса, и количество процессов для создания) и \n"
"<code>(item '(1 2 ... 15 16)</code> (переменная, привязанная к отдельному \n"
"рабочему элементу в рамках процесса, и список элементов, потребляемых "
"процессами). \n"
"Формы <code>FORMAT</code> и <code>SLEEP</code> содержат тело процессов и "
"последний\n"
"аргумент для вызова макроса <code>WITH-PROCESSES</code>."

#: in/chapter21.html:286
msgid ""
"<pre>\n"
"? (with-processes (\"Test\"\n"
"                   (id 3)\n"
"                   (item '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16)))\n"
"    (format t \"~&amp;id ~D item ~A~%\" id item)\n"
"    (sleep (random 1.0)))\n"
"NIL\n"
"id 0 item 1\n"
"id 1 item 2\n"
"id 2 item 3\n"
"id 1 item 4\n"
"id 1 item 5\n"
"id 0 item 6\n"
"id 2 item 7\n"
"id 0 item 8\n"
"id 2 item 9\n"
"id 1 item 10\n"
"id 2 item 11\n"
"id 0 item 12\n"
"id 0 item 13\n"
"id 1 item 14\n"
"id 2 item 15\n"
"id 0 item 16\n"
"</pre> "
msgstr ""

#: in/chapter21.html:292
msgid ""
"<p>The form returns NIL almost immediately, but the created processes\n"
"run for a while to produce the output that follows.  The \"item\" numbers\n"
"follow an orderly progression as they are consumed from the work queue,\n"
"but the \"id\" numbers vary according to which process actually consumed\n"
"a particular item."
msgstr ""
"<p>\n"
"Форма возвращает NIL почти сразу, но созданные процессы запускаются в "
"течение \n"
"некоторого времени, чтобы произвести следующий вывод. Номера \"item\" "
"следуют \n"
"упорядоченной последовательности, поскольку они потребляются из рабочей "
"очереди, \n"
"но номера \"id\" варьируются в зависимости от того, какой процесс "
"фактически \n"
"использовал/потребил конкретный элемент."

#: in/chapter21.html:296
msgid ""
"<p>Destructuring is a useful tool for macros, but you can't use it\n"
"in the lambda list of a function. However, you can destructure a\n"
"list from within a function via <code>DESTRUCTURING-BIND</code>."
msgstr ""
"<p>\n"
"Деструктурирование-это полезный инструмент для макросов, но вы не \n"
"можете использовать его в лямбда-списке функции. Однако вы можете \n"
"деструктурировать список из функции с помощью <code>DESTRUCTURING-BIND</"
"code>."

#: in/chapter21.html:303
msgid ""
"<pre>\n"
"? (destructuring-bind ((a &amp;key b) (c (d e) &amp;optional f))\n"
"                      '((1 :b 2) (3 (4 5) 6))\n"
"    (list a b c d e f))\n"
"(1 2 3 4 5 6)\n"
"</pre> "
msgstr ""

#: in/chapter21.html:316
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter20.html\">Chapter 20</a> | Chapter 21 | <a href=\"chapter22."
"html\">Chapter 22</a> \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its author.  "
"Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
