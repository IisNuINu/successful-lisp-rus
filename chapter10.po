#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter10.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:53+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter10.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 10</title>\n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 10</title>\n"
"</head> "

#: in/chapter10.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 10 - How to Find Your Way Around, Part 1</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 10 - Как найти свой путь, \n"
"Часть 1</h1> "

#: in/chapter10.html:12
msgid ""
"<p>In this chapter, you'll learn how to find your way around Common Lisp\n"
"without resorting so often to the manuals.  (You <em>do</em> read the\n"
"fine manuals, don't you?)"
msgstr ""
"<p>В этой главе вы узнаете, как найти свой путь по Common Lisp, \n"
"не прибегая так часто к руководствам. (Вы ведь читаете прекрасные \n"
"руководства, не так ли?)"

#: in/chapter10.html:17
msgid ""
"<p>Oh, there's one thing you should keep in mind while you're reading\n"
"this chapter: all of these tools work equally well for the built-in\n"
"functionality of your Lisp system and for all of the Lisp programs \n"
"that you write."
msgstr ""
"<p>О, Есть одна вещь, которую вы должны иметь в виду, читая эту главу: \n"
"все эти инструменты одинаково хорошо работают для встроенных функций \n"
"вашей системы Lisp и для всех программ Lisp, которые вы пишете."

#: in/chapter10.html:19
msgid "<h2>APROPOS: I don't remember the name, but I recognize the face</h2>"
msgstr "<h2>APROPOS: Я не помню имя, но узнаю по лицу</h2>"

#: in/chapter10.html:24
msgid ""
"<p>Common Lisp defines 978 symbols.  Whatever implementation you use\n"
"probably defines hundreds of additional symbols for language extensions,\n"
"additional libraries, a graphical user interface, etc.  Are you going\n"
"to remember the names of all these symbols?  Not likely..."
msgstr ""
"<p>Common Lisp определяет 978 символов. Любая используемая вами реализация,\n"
"вероятно, определяет сотни дополнительных символов для расширений языка,\n"
"дополнительных библиотек, графического пользовательского интерфейса и т. "
"д. \n"
"Вы собираетесь запомнить названия всех этих символов? Вряд ли..."

#: in/chapter10.html:33
msgid ""
"<p>What you <em>can</em> do is to remember part of the name. This is\n"
"pretty easy, because the language and library designers have a\n"
"limited memory (just like you and me) and they tend to name related\n"
"objects with similar names. So, most of the mapping functions (see\n"
"<a href=\"chapter12.html\">Chapter 12</a>) will have <code>MAP</code>\n"
"in their names, the GUI library will probably have\n"
"<code>WINDOW</code> in the names of all the functions, macros, and\n"
"variables having something to do with windows, and so on."
msgstr ""
"<p>Что вы <em>можете</em> сделать, так это запомнить часть имени. \n"
"Это довольно легко, потому что разработчики языков и библиотек имеют \n"
"ограниченную память (как и мы с вами), и они склонны называть связанные \n"
"объекты похожими именами. Таким образом, большинство функций  (см. \n"
"<a href=\"chapter12.html\">Главу 12</a>) будут иметь <code>MAP</code> \n"
"в своих именах, библиотека графического интерфейса, вероятно,\n"
"будет иметь <code>WINDOW</code> в именах всех функций, макросов и \n"
"переменных, имеющих какое-то отношение к windows, и так далее."

#: in/chapter10.html:37
msgid ""
"<p>Once you have a good guess at a part of a name, you can find\n"
"<em>all</em> of the matching names by using a very handy tool named\n"
"<code>APROPOS</code>."
msgstr ""
"<p>Как только вы хорошо угадаете часть имени, вы можете найти все \n"
"совпадающие имена с помощью очень удобного инструмента \n"
"<code>APROPOS</code>."

#: in/chapter10.html:50
msgid ""
"<pre>\n"
"? (apropos \"MAP\" :cl)\n"
"MAP, Def: FUNCTION\n"
"MAP-INTO, Def: FUNCTION\n"
"MAPC, Def: FUNCTION\n"
"MAPCAN, Def: FUNCTION\n"
"MAPCAR, Def: FUNCTION\n"
"MAPCON, Def: FUNCTION\n"
"MAPHASH, Def: FUNCTION\n"
"MAPL, Def: FUNCTION\n"
"MAPLIST, Def: FUNCTION\n"
"</pre> "
msgstr ""

#: in/chapter10.html:60
msgid ""
"<p><code>APROPOS</code> expects a string or a symbol -- this\n"
"provides the fragment of the name that you'd like to find. An\n"
"optional second argument designates a package; use it if you'd like\n"
"to limit your search to the symbols in a particular package. The\n"
"package designator can be a string or symbol matching the name or\n"
"nickname of a package (see <a href=\"chapter03-10.html\">Chapter 3,\n"
"Lesson 10</a>), or it can be the package object itself. If you omit\n"
"the package designator, then <code>APROPOS</code> will search for\n"
"symbols in <em>all</em> packages."
msgstr ""
"<p>\n"
"<code>APROPOS</code> ожидает строку или символ - это фрагмент имени, \n"
"который вы хотели бы найти. Необязательный второй аргумент обозначает \n"
"пакет; используйте его, если вы хотите ограничить поиск символами в\n"
"определенном пакете. Обозначение пакета может быть строкой или символом,\n"
"соответствующим имени или псевдониму пакета (см. \n"
"<a href=\"chapter03-10.html\">Главу 3, Урок 10</a>)), или же это может "
"быть \n"
"сам объект пакета. Если вы опустите обозначение пакета, то \n"
"<code>APROPOS</code> будет искать символы во всех пакетах.\n"

#: in/chapter10.html:65
msgid ""
"<p>Your Lisp implementation may produce output that looks somewhat\n"
"different from that shown here. Generally, you'll see the symbol\n"
"names listed with a very brief description of the global object\n"
"named by the symbol."
msgstr ""
"<p>Ваша реализация Lisp может выдавать выходные данные, которые выглядят\n"
"несколько иначе, чем показано здесь. Как правило, вы увидите имена "
"символов,\n"
"перечисленные с очень кратким описанием глобального объекта, \n"
"именуемого символом."

#: in/chapter10.html:68
msgid ""
"<p>Here's an example of the output from <code>APROPOS</code> on my\n"
"Lisp system when I search without a package designator:"
msgstr ""
"<p>Вот пример вывода из <code>APROPOS</code> в моей системе Lisp, \n"
"когда я выполняю поиск без обозначения пакета:"

#: in/chapter10.html:88
msgid ""
"<pre>\n"
"? (apropos \"SEQUENCE\")\n"
"       TOOLS::BROWSER-SEQUENCE-TABLE\n"
"         CCL::CHECK-SEQUENCE-BOUNDS, Def: FUNCTION\n"
"     ITERATE::CHECK-SEQUENCE-KEYWORDS, Def: FUNCTION\n"
"       TOOLS::CLASS-BROWSER-SEQUENCE-TABLE\n"
"     ITERATE::CLAUSE-FOR-IN-SEQUENCE-0, Def: FUNCTION\n"
"     ITERATE::CLAUSE-FOR-INDEX-OF-SEQUENCE-0, Def: FUNCTION\n"
"         CCL::CONSED-SEQUENCE\n"
"<i>; many lines omitted</i> \n"
"              STREAM-READ-SEQUENCE, Def: STANDARD-GENERIC-FUNCTION\n"
"              STREAM-WRITE-SEQUENCE, Def: STANDARD-GENERIC-FUNCTION\n"
"   DEFSYSTEM::SYSTEMS-SEQUENCE-DIALOG-ITEM\n"
"              TAB-SEQUENCE-ITEM\n"
"              TABLE-SEQUENCE, Def: STANDARD-GENERIC-FUNCTION\n"
"             :TABLE-SEQUENCE,  Value: :TABLE-SEQUENCE\n"
"  SETF::|CCL::TABLE-SEQUENCE|, Def: STANDARD-GENERIC-FUNCTION\n"
"              WRITE-SEQUENCE, Def: FUNCTION\n"
"</pre> "
msgstr ""

#: in/chapter10.html:95
msgid ""
"<p>Notice that most of the symbols are prefixed with a package name,\n"
"since they are not imported into the current (COMMON-LISP-USER)\n"
"package. Again, your Lisp implementation may produce somewhat\n"
"different results, but it should show you a list of symbols with\n"
"package prefixes, plus whatever other information the designers of\n"
"your implementation thought would be helpful yet concise."
msgstr ""
"<p>Обратите внимание, что большинство символов имеют префикс \n"
"с именем пакета, так как они не импортируются в текущий пакет \n"
"(COMMON-LISP-USER). Опять же, ваша реализация Lisp может дать \n"
"несколько иные результаты, но она должна показать вам список \n"
"символов с префиксами пакетов, а также любую другую информацию, \n"
"которую разработчики вашей реализации посчитали бы полезной, \n"
"но краткой."

#: in/chapter10.html:105
msgid ""
"<p>In these examples, I've used uppercase strings as arguments to\n"
"<code>APROPOS</code>. Some implementations perform a case-sensitive\n"
"match, while others ignore case. Symbol names are case sensitive in\n"
"Lisp, but the Lisp reader translates symbols to uppercase by\n"
"default. So if you specify an uppercase name to <code>APROPOS</code>\n"
"you'll find most -- perhaps all -- of the matching names; you'll\n"
"miss only those that were intentionally interned using lower case\n"
"letters. And if your <code>APROPOS</code> ignores case, you'll get\n"
"all of the matches, regardless of case."
msgstr ""
"<p>В этих примерах я использовал прописные строки в качестве аргументов \n"
"для <code>APROPOS</code>. Некоторые реализации выполняют сопоставление \n"
"с учетом регистра, в то время как другие игнорируют регистр. Имена "
"символов \n"
"в Lisp чувствительны к регистру, но программа чтения Lisp по умолчанию \n"
"переводит символы в верхний регистр. Поэтому, если вы укажете \n"
"<code>APROPOS</code> имя в верхнем регистре, вы найдете большинство,\n"
"а возможно и все-совпадающие имена; вы пропустите только те, которые были\n"
"намеренно интернированы с использованием строчных букв. А если ваш\n"
"<code>APROPOS</code> игнорирует регистр, то получите все совпадения, \n"
"независимо от регистра."

#: in/chapter10.html:112
msgid ""
"<p>You could also supply a symbol to <code>APROPOS</code>. The only\n"
"disadvantage of this is that these partial symbols pollute the\n"
"namespace of the current package. The storage requirement is\n"
"trivial, but you'll have to be aware that <code>APROPOS</code> may\n"
"find these partial symbols in future matches, and you'll have to\n"
"ignore these to find the symbols you'd really like to see."
msgstr ""
"<p>Вы можете также предоставить символ для <code>APROPOS</code>. \n"
"Единственным недостатком этого является то, что эти частные символы \n"
"загрязняют пространство имен текущего пакета. Требование к хранилищу \n"
"является тривиальным, но вы должны знать, что <code>APROPOS</code> \n"
"может найти эти частные символы в будущих поисках, и вам придется \n"
"игнорировать их, чтобы найти символы, которые вы действительно \n"
"хотели бы видеть."

#: in/chapter10.html:114
msgid "<h2>DESCRIBE: Tell me more about yourself</h2>"
msgstr "<h2>DESCRIBE: Расскажи мне больше о себе</h2>"

#: in/chapter10.html:119
msgid ""
"<p>Once you know the name of a symbol, you can get additional information\n"
"by using the <code>DESCRIBE</code> function.  As with <code>APROPOS</code>,\n"
"the output of <code>DESCRIBE</code> varies among Lisp implementations.\n"
"Here's an example generated using my Lisp system:"
msgstr ""
"<p>Как только вы узнаете имя символа, вы можете получить дополнительную\n"
"информацию, используя функцию <code>DESCRIBE</code>. Как и в случае с \n"
"<code>APROPOS</code>, выходные данные описания варьируются в зависимости \n"
"от реализаций Lisp. Вот пример, созданный с помощью моей системы Lisp:"

#: in/chapter10.html:149
msgid ""
"<pre>\n"
"<i>; Describe a symbol</i> \n"
"? (describe 'length)\n"
"Symbol: LENGTH\n"
"Function\n"
"EXTERNAL in package: #&lt;Package \"COMMON-LISP\"&gt;\n"
"Print name: \"LENGTH\"\n"
"Value: #&lt;Unbound&gt;\n"
"Function: #&lt;Compiled-function LENGTH #x34C39B6&gt;\n"
"Arglist: (SEQUENCE)\n"
"Plist: (:ANSI-CL-URL \"fun_length.html\")\n"
"<i>; Describe a string</i> \n"
"? (describe \"LENGTH\")\n"
"\"LENGTH\"\n"
"Type: (SIMPLE-BASE-STRING 6)\n"
"Class: #&lt;BUILT-IN-CLASS SIMPLE-BASE-STRING&gt;\n"
"Length: 6\n"
"0: #\\L\n"
"1: #\\E\n"
"2: #\\N\n"
"3: #\\G\n"
"4: #\\T\n"
"5: #\\H\n"
"<i>; Describe a function</i> \n"
"? (describe #'length)\n"
"#&lt;Compiled-function LENGTH #x34C39B6&gt;\n"
"Name: LENGTH\n"
"Arglist (declaration): (SEQUENCE)\n"
"</pre> "
msgstr ""

#: in/chapter10.html:155
msgid ""
"<p>This example used three different argument types: a symbol, a\n"
"string, and a function. These are all correct, but you get what you\n"
"ask for. These all have their uses, but you will generally want to\n"
"supply a symbol argument to <code>DESCRIBE</code>, because it tends\n"
"to produce the most information."
msgstr ""
"<p>В этом примере использовались три различных типа аргументов: \n"
"символ, строка и функция. Все это верно, но вы получаете то, \n"
"о чем просите. Все они имеют свое применение, но вы, как правило, \n"
"хотите предоставить аргумент символа для <code>DESCRIBE</code>, \n"
"потому что он, как правило, производит больше всего информации."

#: in/chapter10.html:157
msgid "<h2>INSPECT: Open wide and say \"Ah...\"</h2>"
msgstr "<h2>INSPECT: Откройте шире(рот) и скажите \"Ah...\"</h2>"

#: in/chapter10.html:164
msgid ""
"<p><code>INSPECT</code> is like <code>DESCRIBE</code>, but instead\n"
"of printing the information it presents the information in some kind\n"
"of interactive display; typically either a command loop in the\n"
"current listener or a new window with its own user interface.  You\n"
"should experiment with <code>INSPECT</code> on your own Lisp system\n"
"to learn how it behaves."
msgstr ""
"<p><code>INSPECT</code> подобен <code>DESCRIBE</code>,  \n"
"но вместо печати информации он представляет ее в виде \n"
"некоторого интерактивного дисплея; обычно это либо командный цикл \n"
"в текущем прослушивателе(listener), либо новое окно с собственным\n"
"пользовательским интерфейсом. Вы должны поэкспериментировать с\n"
"<code>INSPECT</code> на вашей собственной системе Lisp, \n"
"чтобы узнать, как она себя ведет."

#: in/chapter10.html:171
msgid ""
"<p><code>INSPECT</code> is very handy for exploring complex nested\n"
"data structures, since you can \"drill down\" to just the information\n"
"that interests you at the moment. Most <code>INSPECT</code>s offer\n"
"specialized viewers for certain types of data, such as functions and\n"
"CLOS objects. Many implementations of <code>INSPECT</code> also\n"
"allow you to edit the data being inspected."
msgstr ""
"<p><code>INSPECT</code> очень удобен для изучения сложных вложенных \n"
"структур данных, так как вы можете \"детализировать\" только ту "
"информацию, \n"
"которая вас интересует в данный момент. Большинство <code>INSPECT</code>-ов\n"
"предлагают специализированные средства просмотра для определенных типов \n"
"данных, таких как функции и объекты CLOS. Многие реализации <code>INSPECT</"
"code>\n"
"позволяют вам редактировать проверяемые данные."

#: in/chapter10.html:173
msgid "<h2>DOCUMENTATION: I know I wrote that down somewhere</h2>"
msgstr "<h2>DOCUMENTATION: Я знаю, что где-то это записал</h2>"

#: in/chapter10.html:181
msgid ""
"<p>Sometimes, you need to know more about a variable than you\n"
"can discover with <code>INSPECT</code>. And for functions, you\n"
"really need the programmer's description (unless you're willing to\n"
"read assembly language code, see <a href=\"chapter16.html\">Chapter\n"
"16</a> if you have these urges). The <code>DOCUMENTATION</code>\n"
"function gives you access to the programmer's innermost thoughts (or\n"
"at least what she was willing to write in a documentation string)."
msgstr ""
"<p>Иногда вам нужно знать о переменной больше, чем вы можете обнаружить с \n"
"помощью <code>INSPECT</code>. А для функций вам действительно нужно \n"
"описание программиста (Если вы не хотите читать код на ассемблере, \n"
"см. <a href=\"chapter16.html\">Главу 16</a>, Если у вас есть такие "
"потребности).\n"
"Функция <code>DOCUMENTATION</code> дает вам доступ к самым сокровенным "
"мыслям\n"
"программиста (или, по крайней мере, к тому, что он хотел написать в строке\n"
"документации)."

#: in/chapter10.html:186
msgid ""
"<p>The <code>DOCUMENTATION</code> function expects two arguments.\n"
"The first is an object for which you wish to retrieve documentation,\n"
"or a symbol naming that object. The second is a symbol designating\n"
"the kind of documentation (there are several) you wish to retrieve."
msgstr ""
"<p>Функция <code>DOCUMENTATION</code> ожидает два аргумента. \n"
"Первый-это объект, для которого вы хотите получить документацию, \n"
"или символ, обозначающий этот объект. Второй-это символ, \n"
"обозначающий вид документации (их несколько), которую вы \n"
"хотите получить."

#: in/chapter10.html:193
msgid ""
"<blockquote> The interface described above is the one required by\n"
"the ANSI Common Lisp specification. Some implementations still\n"
"support an interface which predates the ANSI specification -- these\n"
"expect a symbol for both arguments. We'll use that convention in our\n"
"examples, since it works in both ANSI and pre-ANSI implementations.\n"
"</blockquote> "
msgstr ""
"<blockquote> \n"
"Интерфейс, описанный выше, является тем, который требуется \n"
"спецификацией ANSI Common Lisp. Некоторые реализации все еще \n"
"поддерживают интерфейс, который предшествует спецификации ANSI\n"
"- они ожидают символ для обоих аргументов. Мы будем использовать \n"
"это соглашение в наших примерах, так как оно работает как в ANSI, \n"
"так и в предыдущих реализациях ANSI.\n"
"</blockquote> "

#: in/chapter10.html:199
msgid ""
"<p>Several Lisp constructs let you provide an optional documentation\n"
"string. The following table shows the second\n"
"<code>DOCUMENTATION</code> argument (first line of each pair)\n"
"together with the Lisp constructs for which documentation strings\n"
"are retrieved. "
msgstr ""
"<p>Несколько конструкций Lisp позволяют предоставить дополнительную \n"
"строку документации. В следующей таблице показан второй аргумент \n"
"<code>DOCUMENTATION</code> (первая строка каждой пары) вместе с \n"
"конструкциями Lisp, для которых извлекаются строки документации."

#: in/chapter10.html:212
msgid ""
"<dl>\n"
"<dt><code>'variable</code> \n"
"<dd><code>defvar</code>, <code>defparameter</code>, <code>defconstant</"
"code> \n"
"<dt><code>'function</code> \n"
"<dd><code>defun</code>, <code>defmacro</code>, special forms\n"
"<dt><code>'structure</code> \n"
"<dd><code>defstruct</code> \n"
"<dt><code>'type</code> \n"
"<dd><code>deftype</code> \n"
"<dt><code>'setf</code> \n"
"<dd><code>defsetf</code> \n"
"</dl> "
msgstr ""

#: in/chapter10.html:216
msgid ""
"<p>The list above works in both ANSI and pre-ANSI Lisp\n"
"implementations. The following list shows the documentation types\n"
"which have been added for ANSI implementations."
msgstr ""
"<p>Приведенный выше перечень работ в ANSI и пред-ANSI реализаций Лиспа. \n"
"В следующем списке показаны типы документации, которые были добавлены \n"
"для реализаций ANSI."

#: in/chapter10.html:225
msgid ""
"<dl>\n"
"<dt><code>'compiler-macro</code> \n"
"<dd><code>define-compiler-macro</code> \n"
"<dt><code>'method-combination</code> \n"
"<dd><code>define-method-combination</code> \n"
"<dt><code>t</code> \n"
"<dd>Documentation returned depends upon type of first argument.\n"
"</dl> "
msgstr ""
"<dl>\n"
"<dt><code>'compiler-macro</code> \n"
"<dd><code>define-compiler-macro</code> \n"
"<dt><code>'method-combination</code> \n"
"<dd><code>define-method-combination</code> \n"
"<dt><code>t</code> \n"
"<dd>Возвращаемая документация зависит от типа первого аргумента.\n"
"</dl> "

#: in/chapter10.html:227
msgid "<p>Here are some examples:"
msgstr "<p>Вот несколько примеров:"

#: in/chapter10.html:238
msgid ""
"<pre>\n"
"? (documentation 'length 'function)\n"
"\"returns the number of elements in sequence.\"\n"
"? (defun a-function-with-docstring ()\n"
"    \"This function always returns T.\"\n"
"    t)\n"
"A-FUNCTION-WITH-DOCSTRING\n"
"? (documentation 'a-function-with-docstring 'function)\n"
"\"This function always returns T.\"\n"
"</pre> "
msgstr ""

#: in/chapter10.html:243
msgid ""
"<p>If you specify a symbol for which there is no documentation, or a\n"
"documentation type which does not select documentation defined for\n"
"the symbol, then <code>DOCUMENTATION</code> will return\n"
"<code>NIL</code>."
msgstr ""
"<p>Если вы укажете символ, для которого нет документации, \n"
"или тип документации, которая не определенна для символа, \n"
"то <code>DOCUMENTATION</code> вернет <code>NIL</code>."

#: in/chapter10.html:251
msgid ""
"<p>A Lisp implementation is permitted to discard documentation\n"
"strings. If documentation strings from your own program are not\n"
"accessible via the <code>DOCUMENTATION</code> function, consult your\n"
"implementation's manual to find out whether there's a way to retain\n"
"documentation strings (there usually is). If documentation strings\n"
"are missing from Common Lisp functions or from vendor supplied\n"
"libraries, consult your vendor."
msgstr ""
"<p>Реализация Lisp позволяет отбрасывать строки документации. \n"
"Если строки документации из вашей собственной программы недоступны \n"
"через функцию <code>DOCUMENTATION</code>, обратитесь к руководству \n"
"по реализации, чтобы узнать, есть ли способ сохранить строки документации \n"
"(обычно есть). Если строки документации отсутствуют в функциях \n"
"Common Lisp или в библиотеках, поставляемых поставщиком, \n"
"обратитесь к своему поставщику."

#: in/chapter10.html:264
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter09.html\">Chapter 9</a> | Chapter 10 | <a href=\"chapter11."
"html\">Chapter 11</a> \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its author.  "
"Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
