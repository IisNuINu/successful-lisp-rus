#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter03-11.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:46+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter03-11.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 3, Lesson 11</title> \n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 3, Lesson 11</title> \n"
"</head> "

#: in/chapter03-11.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 3 - Essential Lisp in Twelve Lessons</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 3 - Основы Лисп в 12 уроках</h1> "

#: in/chapter03-11.html:10
msgid ""
"<h2><A NAME=\"lesson-11\">Lesson 11 - Essential Input and Output</A></h2> "
msgstr "<h2><A NAME=\"lesson-11\">Урок 11 - Основы Ввода и Вывода</A></h2> "

#: in/chapter03-11.html:12
msgid "<h3>READ accepts Lisp data</h3> "
msgstr "<h3>READ позволяет получать Лиспу данные</h3> "

#: in/chapter03-11.html:16
msgid ""
"<P>As we saw in <A HREF=\"chapter03-10.html#characters\">Lesson 10</A>, \n"
"<CODE>READ</CODE> turns characters into Lisp data.  So far, you've seen \n"
"a printed representation of several kinds of Lisp data:</P>"
msgstr ""
"<P>\n"
"Как мы видели в <A HREF=\"chapter03-10.html#characters\">Уроке 10</A>, \n"
"<CODE>READ</CODE> превращает символьные знаки в данные Lisp. До сих пор вы\n"
"видели печатное представление нескольких видов данных Lisp:\n"
"</P>"

#: in/chapter03-11.html:22
msgid ""
"<UL>\n"
"<LI>symbols and numbers,</LI>\n"
"<LI>strings, characters, lists, arrays, vectors, and structures,</LI>\n"
"<LI>and hash tables.</LI>\n"
"</UL>"
msgstr ""
"<UL>\n"
"<LI>символов и чисел,</LI>\n"
"<LI>строк, символьных знаков(characters), списков, массивов, векторов\n"
"и структур,</LI>\n"
"<LI>и хэш-таблиц.</LI>\n"
"</UL>"

#: in/chapter03-11.html:27
msgid ""
"<P>The Lisp reader does its job according to a classification of \n"
"characters.  The standard classifications are shown below.  As we'll see "
"in \n"
"<A HREF=\"chapter03-12.html\">Lesson 12</A>, you can alter these \n"
"classifications for your own needs.</P>"
msgstr ""
"<P>Читатель Lisp выполняет свою работу в соответствии с классификацией \n"
"символьных знаков. Ниже приведены стандартные классификации. Как мы увидим "
"в\n"
"<A HREF=\"chapter03-12.html\">Уроке 12</A>, вы можете изменить эти "
"классификации\n"
"для своих собственных нужд.</P>"

#: in/chapter03-11.html:37
msgid ""
"<PRE WIDTH=80>\n"
"Standard Constituent Characters\n"
"-------------------------------\n"
" a b c d e f g h i j k l m n o p q r s t u v w x y z\n"
" A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n"
" 0 1 2 3 4 5 6 7 8 9\n"
" ! $ % & * + - . / : &lt; = &gt; ? @ [ ] ^ _ { } ~\n"
" &lt;backspace&gt; &lt;rubout&gt;\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:43
msgid ""
"<PRE WIDTH=80>\n"
"Standard Terminating Macro Characters\n"
"-------------------------------------\n"
" \" ' ( ) , ; `\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:49
msgid ""
"<PRE WIDTH=80>\n"
"Standard Non-Terminating Macro Characters\n"
"-----------------------------------------\n"
" #\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:55
msgid ""
"<PRE WIDTH=80>\n"
"Standard Single Escape Characters\n"
"---------------------------------\n"
" \\\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:61
msgid ""
"<PRE WIDTH=80>\n"
"Standard Multiple Escape Characters\n"
"-----------------------------------\n"
" |\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:67
msgid ""
"<PRE WIDTH=80>\n"
"Standard Whitespace Characters\n"
"------------------------------\n"
" &lt;tab&gt; &lt;space&gt; &lt;page&gt; &lt;newline&gt; &lt;return&gt; &lt;"
"linefeed&gt;\n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:76
msgid ""
"<P>If <CODE>READ</CODE> starts with a <EM>constituent</EM> character, it \n"
"begins accumulating a symbol or number.  When <CODE>READ</CODE> encounters \n"
"a terminating macro character or a whitespace character, it tries to \n"
"interpret the collected constituent characters first as a number, then as "
"a \n"
"symbol.  If a numeric interpretation is possible, <CODE>READ</CODE> \n"
"returns the number.  Otherwise, <CODE>READ</CODE> changes the alphabetical \n"
"characters to a standard case (normally upper case), interns the name as a \n"
"symbol, and returns the symbol.</P>"
msgstr ""
"<P>Если <CODE>READ</CODE> начинает работу с составного(<EM>constituent</"
"EM>)\n"
"символьного знака, он начинает накапливать символ или число. Когда\n"
"<CODE>READ</CODE> сталкивается с завершающим макрознаком или пробельным\n"
"символьным знаком, он пытается интерпретировать собранные составляющие\n"
"символьные знаки сначала как число, а затем как символ. Если возможна "
"числовая интерпретация, <CODE>READ</CODE> возвращает число. В противном "
"случае\n"
"<CODE>READ</CODE> изменяет алфавитные знаки на стандартный регистр (обычно "
"верхний регистр), вводит/интернирует(interns) имя в качестве символа и\n"
"возвращает символ.\n"
"</P>"

#: in/chapter03-11.html:84
msgid ""
"<P>Escape characters play a special role.  A single escape character \n"
"forces the following character to be treated exactly as a constituent \n"
"character.  In this way characters that are normally treated as whitespace \n"
"or terminating macro characters can be part of a symbol.  If \n"
"<CODE>READ</CODE> encounters an escape character, it <EM>never</EM> \n"
"attempts to interpret the resulting constituents as a number, even if only \n"
"digits were escaped.</P>"
msgstr ""
"<P>\n"
"Особую роль играют Escape знаки. Единственный escape-знак заставляет\n"
"следующий символьный знак рассматриваться точно как составной символьный\n"
"знак. Таким образом, знаки, которые обычно рассматриваются как пробелы \n"
"или завершающие макрознаки, могут быть частью символа. Если <CODE>READ</"
"CODE>\n"
"сталкивается с экранирующим знаком, он никогда не пытается \n"
"интерпретировать результирующие составляющие как число, даже если были "
"экранированы только цифры.\n"
"</P>"

#: in/chapter03-11.html:87
msgid ""
"<P>If <CODE>READ</CODE> starts with a macro character, the character \n"
"determines the next step:</P>"
msgstr ""
"<P>Если <CODE>READ</CODE> начинается с макрознака, то этот знак\n"
"определяет следующий шаг:</P>"

#: in/chapter03-11.html:95
msgid ""
"<DL>\n"
"<DT>\"</DT>\t<DD>Read a string.</DD>\n"
"<DT>'</DT>\t<DD>Read a form.</DD>\n"
"<DT>(</DT>\t<DD>Read a list.</DD>\n"
"<DT>;</DT>\t<DD>Ignore everything up to newline.</DD>\n"
"<DT>#</DT>\t<DD>Decide what to do based on the next character.</DD>\n"
"</DL>"
msgstr ""
"<DL>\n"
"<DT>\"</DT>\t<DD>Читается строка.</DD>\n"
"<DT>'</DT>\t<DD>Читается форма.</DD>\n"
"<DT>(</DT>\t<DD>Читается список.</DD>\n"
"<DT>;</DT>\t<DD>Игнорируется все последующие знаки, вплоть до новой строки</"
"DD>\n"
"<DT>#</DT>\t<DD>Решается, что делать, основываясь на следующем знаке.</DD>\n"
"</DL>"

#: in/chapter03-11.html:100
msgid ""
"<P>Finally, some Lisp data is not meant to be read.  For example, the \n"
"printed representation of a hash table looks something like \n"
"<CODE>#&lt;HASH-TABLE&gt;</CODE>.  It is an error for <CODE>READ</CODE> to \n"
"attempt to read anything beginning with the characters <CODE>#&lt;</CODE>.</"
"P>"
msgstr ""
"<P>Наконец, некоторые данные Lisp не предназначены для чтения. Например\n"
"печатное представление хэш-таблицы выглядит примерно так: \n"
"<CODE>#&lt;HASH-TABLE&gt;</CODE>. Будет ошибкой для <CODE>READ</CODE>, \n"
"если попытаться прочитать что-либо, начинающееся с символов \n"
"<CODE>#&lt;</CODE>.\n"
"</P>"

#: in/chapter03-11.html:102
msgid "<h3>PRINT writes Lisp data for you and for READ</h3> "
msgstr "<h3>PRINT записывает данные Lisp для вас и для READ</h3> "

#: in/chapter03-11.html:105
msgid ""
"<P>The <CODE>PRINT</CODE> function changes a Lisp object into the sequence \n"
"of characters that <CODE>READ</CODE> would need to reconstruct it:</P>"
msgstr ""
"<P>\n"
"Функция <CODE>PRINT</CODE> превращает объект Lisp в последовательность "
"знаков, по которым <CODE>READ</CODE>, может его восстановить:\n"
"</P>"

#: in/chapter03-11.html:107
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(print 'abc)<br><IMG SRC=\"gifs/double-right-arrow.gif\" ALT=\"=&gt;\" ALIGN="
"\"BOTTOM\"> <IMG SRC=\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM\">ABC<IMG "
"SRC=\"gifs/blank.gif\" ALT=\"SPC\" ALIGN=\"BOTTOM\"><br><IMG SRC=\"gifs/"
"right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> ABC<br><br><IMG SRC=\"gifs/"
"circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (print (list 1 2 3))<br><IMG "
"SRC=\"gifs/double-right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> <IMG SRC="
"\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM\">(1 2 3)<IMG SRC=\"gifs/blank."
"gif\" ALT=\"SPC\" ALIGN=\"BOTTOM\"><br><IMG SRC=\"gifs/right-arrow.gif\" ALT="
"\"=&gt;\" ALIGN=\"BOTTOM\"> (1 2 3)<br><br><IMG SRC=\"gifs/circle-dot.gif\" "
"ALT=\"?\" ALIGN=\"BOTTOM\"> (print \"A String\")<br><IMG SRC=\"gifs/double-"
"right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> <IMG SRC=\"gifs/return.gif"
"\" ALT=\"CR\" ALIGN=\"BOTTOM\">\"A string\"<IMG SRC=\"gifs/blank.gif\" ALT="
"\"SPC\" ALIGN=\"BOTTOM\"><br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"=&gt;\" "
"ALIGN=\"BOTTOM\"> \"A string\"<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT="
"\"?\" ALIGN=\"BOTTOM\"> (print 387.9532)<br><IMG SRC=\"gifs/double-right-"
"arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> <IMG SRC=\"gifs/return.gif\" ALT="
"\"CR\" ALIGN=\"BOTTOM\">387.9532<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC\" "
"ALIGN=\"BOTTOM\"><br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"=&gt;\" ALIGN="
"\"BOTTOM\"> 387.9532<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN="
"\"BOTTOM\"> (print (make-hash-table))<br><IMG SRC=\"gifs/double-right-arrow."
"gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> <IMG SRC=\"gifs/return.gif\" ALT=\"CR"
"\" ALIGN=\"BOTTOM\">#&lt;HASH-TABLE&gt;<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC"
"\" ALIGN=\"BOTTOM\"><br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"=&gt;\" "
"ALIGN=\"BOTTOM\"> #&lt;HASH-TABLE&gt;</PRE>"
msgstr ""

#: in/chapter03-11.html:115
msgid ""
"<P><CODE>PRINT</CODE> always begins its output with a newline character \n"
"(<IMG SRC=\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM\">), and follows "
"its \n"
"output with a space (<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC\" ALIGN=\"BOTTOM"
"\">).  \n"
"This ensures that the <CODE>PRINT</CODE> output stands apart from any \n"
"surrounding output, since newline and space are both treated as "
"whitespace, \n"
"and cannot be part of the printed representation of a Lisp object (unless \n"
"escaped).</P>"
msgstr ""
"<P><CODE>PRINT</CODE> всегда начинает свой вывод со знака новой строки\n"
"(<IMG SRC=\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM\">) и последующим за "
"ним\n"
"пробелом (<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC\" ALIGN=\"BOTTOM\">). \n"
"Это гарантирует, что вывод <CODE>PRINT</CODE> станет отдельно от любого\n"
"окружающего вывода, так как новая строка и Пробел рассматриваются как "
"пробелы \n"
"и не могут быть частью печатного представления объекта Lisp (если только они "
"не\n"
"экранированы/им не предшествует символ escape).\n"
"</P>"

#: in/chapter03-11.html:123
msgid ""
"<P>Other variations of <CODE>PRINT</CODE> have different uses.  \n"
"<CODE>PRIN1</CODE> behaves as <CODE>PRINT</CODE>, but does not surround \n"
"its output with whitespace.  This might be useful if you are building up a \n"
"name from successive pieces, for example.  <CODE>PRINC</CODE> behaves as \n"
"<CODE>PRIN1</CODE>, but generates output intended for display, rather than \n"
"<CODE>READ</CODE>; for example, <CODE>PRINC</CODE> omits the quotes around \n"
"a string, and does not print escape characters.</P>"
msgstr ""
"<P>\n"
"Другие варианты <CODE>PRINT</CODE> имеют различное применение. \n"
"<CODE>PRIN1</CODE> ведет себя как <CODE>PRINT</CODE>, но не окружает \n"
"свой вывод пробельными знаками. Например, это может быть полезно, если \n"
"вы создаете имя из последовательных частей, например. \n"
"<CODE>PRINC</CODE> ведет себя как <CODE>PRIN1</CODE>, но генерирует \n"
"выходные данные, предназначенные для отображения, а не для <CODE>READ</"
"CODE>;\n"
"например,<CODE>PRINC</CODE> опускает кавычки вокруг строки и не печатает \n"
"escape-знаки.\n"
"</P>"

#: in/chapter03-11.html:125
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(print 'a\\ bc)<br><IMG SRC=\"gifs/double-right-arrow.gif\" ALT=\"=&gt;\" "
"ALIGN=\"BOTTOM\"> <IMG SRC=\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM\">|"
"A BC|<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC\" ALIGN=\"BOTTOM\"><br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> |A BC|<br><br><IMG "
"SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (prin1 'a\\ "
"bc)<br><IMG SRC=\"gifs/double-right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM"
"\"> |A BC|<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM"
"\"> |A BC|<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM"
"\"> (princ '|A BC|)<br><IMG SRC=\"gifs/double-right-arrow.gif\" ALT=\"=&gt;"
"\" ALIGN=\"BOTTOM\"> <IMG SRC=\"gifs/return.gif\" ALT=\"CR\" ALIGN=\"BOTTOM"
"\">A BC<IMG SRC=\"gifs/blank.gif\" ALT=\"SPC\" ALIGN=\"BOTTOM\"><br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"=&gt;\" ALIGN=\"BOTTOM\"> |A BC|</PRE>"
msgstr ""

#: in/chapter03-11.html:127
msgid "<h3>OPEN and CLOSE let you work with files</h3> "
msgstr "<h3>OPEN и CLOSE позволяют вам работать с файлами</h3> "

#: in/chapter03-11.html:136
msgid ""
"<P>Normally, <CODE>READ</CODE> reads from the keyboard and <CODE>PRINT</"
"CODE> \n"
"prints to the screen.  Both of these functions take an optional argument; \n"
"the argument specifies an input stream for <CODE>READ</CODE>, and an "
"output \n"
"stream for <CODE>PRINT</CODE>.  What's a stream?  A stream is a source or \n"
"sink of data, typically -- but not necessarily -- characters.  For now, \n"
"we'll look at how text files can be the source or sink of a character \n"
"stream.  In <A HREF=\"chapter19.html\">Chapter 19</A> we'll look at some "
"of \n"
"the other possibilities.</P>"
msgstr ""
"<P>\n"
"Как правило, <CODE>READ</CODE> считывает данные с клавиатуры, а \n"
"<CODE>PRINT</CODE> выводит их на экран. Обе эти функции принимают\n"
"необязательный аргумент; аргумент определяет входной поток для\n"
"<CODE>READ</CODE> и выходной поток для <CODE>PRINT</CODE>. \n"
"А что такое поток(stream)? Поток - это источник или приемник данных, \n"
"обычно(но не обязательно) символьных знаков. Сейчас мы рассмотрим, \n"
"как текстовые файлы могут быть источником или приемником потока символьных\n"
"знаков. В <A HREF=\"chapter19.html\">Глава 19</A> мы рассмотрим некоторые \n"
"другие возможности.\n"
"</P>"

#: in/chapter03-11.html:141
msgid ""
"<P>You can attach a stream to a file using the <CODE>OPEN</CODE> function, \n"
"which takes as parameters a file name and a keyword argument to specify \n"
"the direction (input or output) of the stream.  To finish operations on "
"the \n"
"stream and close the associated file, use the <CODE>CLOSE</CODE> function.</"
"P>"
msgstr ""
"<P>\n"
"Вы можете присоединить поток к файлу с помощью функции <CODE>OPEN</CODE>,\n"
"которая принимает в качестве параметров имя файла и аргумент ключевое слово, "
"который указывает направление (ввод или вывод) потока. Чтобы завершить \n"
"операции над потоком и закрыть связанный файл, используйте функцию\n"
"<CODE>CLOSE</CODE>.\n"
"</P>"

#: in/chapter03-11.html:143
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(setq out-stream (open \"my-temp-file\" :direction :output))<br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> #&lt;OUTPUT-STREAM "
"\"my-temp-file\"&gt;<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN="
"\"BOTTOM\"> (print 'abc out-stream)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT="
"\"-&gt;\" ALIGN=\"BOTTOM\"> ABC<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT="
"\"?\" ALIGN=\"BOTTOM\"> (close out-stream)<br><IMG SRC=\"gifs/right-arrow.gif"
"\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> T<br><br><IMG SRC=\"gifs/circle-dot.gif\" "
"ALT=\"?\" ALIGN=\"BOTTOM\"> (setq in-stream (open \"my-temp-file\" :"
"direction :input))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN="
"\"BOTTOM\"> #&lt;INPUT-STREAM \"my-temp-file\"&gt;<br><br><IMG SRC=\"gifs/"
"circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (read in-stream)<br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> ABC<br><br><IMG SRC="
"\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (close in-"
"stream)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> "
"T</PRE>"
msgstr ""

#: in/chapter03-11.html:148
msgid ""
"<P>In the example, we create an output stream to the file named \n"
"<CODE>my-temp-file</CODE>, and print the symbol <CODE>ABC</CODE> to that \n"
"stream.  Notice how <CODE>PRINT</CODE> returns its argument as usual, but \n"
"doesn't print it -- the printed result has gone to the file, instead.</P>"
msgstr ""
"<P>\n"
"В этом примере мы создаем выходной поток для файла с именем \n"
"<CODE>my-temp-file</CODE> и печатаем символ <CODE>ABC</CODE> в этот\n"
"поток. Обратите внимание, что <CODE>PRINT</CODE> возвращает свой аргумент\n"
"как обычно, но не печатает его, а вместо этого напечатанный результат "
"отправляется в файл.\n"
"</P>"

#: in/chapter03-11.html:152
msgid ""
"<P>Next, we close the output stream and open an input stream on the same \n"
"file.  We then read the symbol that we printed to the file, and finish by \n"
"closing the input stream.</P>"
msgstr ""
"<P>\n"
"Затем мы закрываем выходной поток и открываем входной поток в том же файле.\n"
"Затем мы читаем символ, который мы напечатали в файл, и заканчиваем, "
"закрывая входной поток.\n"
"</P>"

#: in/chapter03-11.html:154
msgid "<h3>Variations on a PRINT theme</h3> "
msgstr "<h3>Вариации на тему печати - PRINT</h3> "

#: in/chapter03-11.html:158
msgid ""
"<P>Lisp also provides a <CODE>WRITE</CODE> function to give you control \n"
"over more details of printing, using keyword arguments to control these \n"
"options:</P>"
msgstr ""
"<P>Lisp также предоставляет функцию <CODE>WRITE</CODE>, чтобы дать вам \n"
"управление над деталями печати, используя аргументы ключевые слова для\n"
"управления этими параметрами:</P>"

#: in/chapter03-11.html:177
msgid ""
"<PRE WIDTH=80>Keyword Argument   Default Value           Action\n"
"----------------   -------------           ------\n"
" :stream           t                       set output stream\n"
" :escape           *print-escape*          include escape characters\n"
" :radix            *print-radix*           include radix (base) prefix\n"
" :base             *print-base*            set number base (rationals)\n"
" :circle           *print-circle*          print circular structures\n"
" :pretty           *print-pretty*          add whitespace for readability\n"
" :level            *print-level*           limit nesting depth\n"
" :length           *print-length*          limit items per nesting level\n"
" :case             *print-case*            :upper, :lower, or :mixed\n"
" :gensym           *print-gensym*          prefix uninterned symbols\n"
" :array            *print-array*           print arrays readably\n"
" :readably         *print-readably*        force printing to be readable\n"
" :right-margin     *print-right-margin*    controls pretty-printing\n"
" :miser-width      *print-miser-width*                \"\n"
" :lines            *print-lines*                      \"\n"
" :pprint-dispatch  *print-pprint-dispatch*            \"</PRE>"
msgstr ""

#: in/chapter03-11.html:183
msgid ""
"<P>Coincidentally, the variables named above as the default values of the \n"
"keyword arguments also control the operation of <CODE>PRINT</CODE>.  You \n"
"can get the effect of <CODE>WRITE</CODE> with non-default keyword "
"arguments \n"
"by binding these variables in a <CODE>LET</CODE> form around a \n"
"<CODE>PRIN1</CODE>:</P>"
msgstr ""
"<P>Так совпало, что переменные, названные выше в качестве значений по "
"умолчанию\n"
"аргументов ключевых слов, также управляют операцией <CODE>PRINT</CODE>. \n"
"Вы можете получить эффект <CODE>WRITE</CODE> с аргументами ключевых слов "
"не \n"
"по умолчанию, связав эти переменные в форме <CODE>LET</CODE> вокруг \n"
"<CODE>PRIN1</CODE>:\n"
"</P>"

#: in/chapter03-11.html:190
msgid ""
"<PRE WIDTH=80>\n"
"(write foo                    (let ((*print-pretty* t)\n"
"   :pretty t                        (*print-right-margin* 60)\n"
"   :right-margin 60                 (*print-case* :downcase))\n"
"   :case :downcase)      <IMG SRC=\"gifs/equivalent.gif\" ALT=\"EQV\" ALIGN="
"\"BOTTOM\">      (prin1 foo)) \n"
"</PRE>"
msgstr ""

#: in/chapter03-11.html:194
msgid ""
"<P>We used <CODE>PRIN1</CODE> rather than <CODE>PRINT</CODE> because we \n"
"don't want the preceding newline and following blank that <CODE>PRINT</"
"CODE> \n"
"adds.</P>"
msgstr ""
"<P>Мы использовали <CODE>PRIN1</CODE>, а не <CODE>PRINT</CODE>, \n"
"потому что нам не нужна предшествующая новая строка и последующий пробел,\n"
"который добавляет <CODE>PRINT</CODE>\n"
"</P>"

#: in/chapter03-11.html:199
msgid ""
"<P>If your program changes the <CODE>*PRINT-...*</CODE> variables, but you \n"
"need to ensure the default values at some point in your program, you can \n"
"wrap that part of the program inside a \n"
"<CODE>WITH-STANDARD-IO-SYNTAX</CODE> form:</P>"
msgstr ""
"<P>Если ваша программа изменяет переменные печати <CODE>*PRINT-...*</CODE>,\n"
"но вам нужно обеспечить значения по умолчанию в какой-то момент в вашей\n"
"программе, вы можете обернуть эту часть программы в форму \n"
"<CODE>WITH-STANDARD-IO-SYNTAX</CODE>(обеспечивающую стандартный \n"
"синтакс ввода-вывода):</P>"

#: in/chapter03-11.html:219
msgid ""
"<PRE WIDTH=80>\n"
"<I>;Define printer control for the program.</I>\n"
"(setq *print-circle* t)\n"
"(setq *print-array* nil)\n"
"(setq *print-escape* nil)\n"
"...\n"
"<I>;Print with the settings established above.</I>\n"
"(print ...)\n"
"...\n"
"<I>;Change back to default printer control settings</I>\n"
"(with-standard-io-syntax\n"
"   ...\n"
"   <I>;Print with the standard settings,\n"
"   ;overriding those established above.</I>\n"
"   (print ...)\n"
"   ...)\n"
"<I>;Outside the</I> WITH-STANDARD-IO-SYNTAX <I>form,\n"
";we once again have the print settings established\n"
";by the</I> SETQ <I>forms at the top of the example.</I></PRE>"
msgstr ""

#: in/chapter03-11.html:234
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter02.html\">Chapter 2</a> | <A HREF=\"chapter03.html"
"\">Chapter 3, Introduction</A> | <A HREF=\"chapter03-10.html\">Chapter 3, "
"Lesson 10</A> | Chapter 3, Lesson 11 | <A HREF=\"chapter03-12.html\">Chapter "
"3, Lesson 12</A> | <a href=\"chapter04.html\">Chapter 4</a> | \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its \n"
"author.  Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
