#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter07.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:52+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter07.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 7</title> \n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 7</title> \n"
"</head> "

#: in/chapter07.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 7 - A First Look at Objects as Fancy Structures</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 7 - Первый взгляд на объекты как на причудливые структуры.</h1> "

#: in/chapter07.html:17
msgid ""
"<p>We first encountered structures in <a\n"
"href=\"chapter03-10.html#structures\"> Chapter 3</a>, then learned\n"
"about some of their optional behavior in <a\n"
"href=\"chapter06.html\">Chapter 6</a>. In this chapter we'll start to\n"
"learn about objects in the Common Lisp Object System (CLOS). For\n"
"now, we'll look at just the ways objects can be used to structure\n"
"data. Later, in <a href=\"chapter14.html\">Chapter 14</a>, we'll learn\n"
"more about CLOS."
msgstr ""
"<p>Мы впервые столкнулись со структурами в \n"
"<a href=\"chapter03-10.html#structures\"> Главе 3</a>, а затем узнали об их\n"
"некотором необязательных поведении в \n"
"<a href=\"chapter06.html\">Главе 6</a>. В этой главе мы начнем изучать "
"объекты \n"
"в системе Common Lisp Object System (CLOS). А пока мы рассмотрим только "
"способы\n"
"использования объектов для структурирования данных. Позже, в \n"
"<a href=\"chapter14.html\">Главе 14</a>, мы узнаем больше о CLOS."

#: in/chapter07.html:19
msgid "<h2>Hierarchies: Classification vs. containment</h2>"
msgstr "<h2>Иерархии: классификация и содержание</h2>"

#: in/chapter07.html:38
msgid ""
"<p>When you program with objects you will attempt, in some way, to\n"
"create a model of some portion of the real world. When you do this,\n"
"you'll probably notice that some objects are made up of smaller\n"
"parts. Each part has its own identity; the part is identifiable by\n"
"itself, separate from any object that it may be a part of.\n"
"Furthermore, a part may be made from smaller parts. If you drew a\n"
"picture of the component relationships among all the parts of some\n"
"complex object, you'd find that they formed a hierarchy. The\n"
"fully-assembled object will be at the top of the hierarchy (the\n"
"first level), all of its pieces will be at the second level, all of\n"
"the pieces that make up the second-level parts will be at the third\n"
"level, and so on. This hierarchy is a <em>containment\n"
"hierarchy</em>; each level represents an object, and the next lowest\n"
"level represents the objects that are parts of the object at the\n"
"higher level.  An object at a higher level contains (or has as parts)\n"
"some objects at a lower level in the hierarchy, and an object at a\n"
"lower level is contained by (or is part of) some object at a higher\n"
"level."
msgstr ""
"<p>\n"
"Когда вы программируете с объектами, вы будете пытаться каким-то образом\n"
"создать модель некоторой части реального мира. Когда вы сделаете это, вы,\n"
"вероятно, заметите, что некоторые объекты состоят из более мелких частей.\n"
"Каждая часть имеет свою собственную идентичность; часть идентифицируется \n"
"сама по себе, отдельно от любого объекта, частью которого она может быть. \n"
"Кроме того, часть может быть сделана из более мелких деталей. Если вы \n"
"нарисуете картину отношений компонентов между всеми частями какого-либо\n"
"сложного объекта, вы обнаружите, что они образуют иерархию. Полностью \n"
"собранный объект будет находиться на вершине иерархии (первый уровень), \n"
"все его части будут находиться на втором уровне, все части, составляющие \n"
"части второго уровня, будут находиться на третьем уровне и так далее. Эта\n"
"иерархия является иерархией содержания; каждый уровень представляет "
"объект, \n"
"а следующий самый низкий уровень представляет объекты, которые являются \n"
"частями объекта на более высоком уровне. Объект на более высоком уровне \n"
"содержит (или имеет в качестве частей) некоторые объекты на более низком "
"уровне\n"
"иерархии, а объект на более низком уровне содержится (или является частью)\n"
"некоторого объекта на более высоком уровне."

#: in/chapter07.html:46
msgid ""
"<p>Containment hierarchies are important because they model \"has-a\"\n"
"and \"is-a-part-of\" relationships among objects. These relationships\n"
"simplify your program's model of the real world by letting you think\n"
"in terms of relatively small component parts, rather than having to \n"
"model a single, highly complex object.  Modeling by containment also\n"
"pays off when you can model a similar object in terms of a different\n"
"combination of components."
msgstr ""
"<p>Иерархии содержания важны, поскольку они моделируют отношения \"имеет\"\n"
" и \"является-частью\" между объектами. Эти отношения упрощают модель "
"реального\n"
"мира вашей программы, позволяя вам мыслить в терминах относительно "
"небольших\n"
"составных частей, а не моделировать один очень сложный объект. Моделирование "
"с\n"
"помощью содержания также окупается, когда вы можете смоделировать "
"аналогичный\n"
"объект в терминах  комбинации других компонентов."

#: in/chapter07.html:54
msgid ""
"<blockquote> An object may have certain characteristics which can\n"
"not be separated from the object. For example, an object may have\n"
"color, size, mass, velocity, and temperature. These characteristics\n"
"are <em>not</em> component parts of the object; they can not be\n"
"separated from the object, nor can they be combined to create new\n"
"objects. These characteristics are <em>attributes</em> of the\n"
"object. </blockquote> "
msgstr ""
"<blockquote> Объект может обладать определенными характеристиками, \n"
"которые не могут быть отделены от объекта. Например, объект может \n"
"иметь цвет, размер, массу, скорость и температуру. Эти характеристики\n"
" не являются составными частями объекта; они не могут быть отделены\n"
"от объекта и не могут быть объединены для создания новых объектов. \n"
"Эти характеристики являются (<em>attributes</em>)атрибутами объекта.\n"
"</blockquote> "

#: in/chapter07.html:62
msgid ""
"<p>The other kind of hierarchy you'll work with as an object\n"
"programmer is a <em>classification hierarchy</em>. In a\n"
"classification hierarchy, objects are connected by \"is-a-kind-of\"\n"
"(or more concisely, \"is-a\" or \"a-k-o\") relationships. These\n"
"relationships also have different names depending upon our point of\n"
"view: if A is a kind of B then A is a specialization of B, while B\n"
"is a generalization of A."
msgstr ""
"<p>Другой тип иерархии, с которым вы будете работать как программист\n"
"объектов - это иерархия классификации. В <em>классификационной иерархии</"
"em> \n"
"объекты связаны отношениями типа \"is-a-kind-of\" (или, более кратко,\"is-a"
"\"\n"
"или\"a-k-o\"). Эти отношения также имеют различные названия в зависимости "
"от \n"
"нашей точки зрения: если А является разновидностью B, то А является\n"
"специализацией B, а B - обобщением А."

#: in/chapter07.html:72
msgid ""
"<blockquote> With the explosion of interest in object programming,\n"
"many specialized lexicons have grown up to support specific methods\n"
"and languages. After you eliminate the terms that describe special\n"
"features of a particular methodology or language implementation,\n"
"what's left is usually a renaming of containment and classification\n"
"hierarchies (and the relationships supported by each) and some way\n"
"to specify object attributes. In fact, the most common renaming is\n"
"to refer to a classification hierarchy as a \"class\" hierarchy.\n"
"</blockquote> "
msgstr ""
"<blockquote> \n"
"С ростом интереса к объектному программированию, многие специализированные\n"
"лексиконы выросли для поддержки конкретных методов и языков. \n"
"После исключения терминов, описывающих особенности конкретной методологии\n"
"или языковой реализации, обычно остается переименование локальных иерархий\n"
"и классификации (и отношений, поддерживаемых каждой из них) и некоторый \n"
"способ указания атрибутов объекта. На самом деле, наиболее распространенным\n"
"переименованием ссылаться на классификационную иерархию как на\n"
"иерархию \"класса\".\n"
"</blockquote> "

#: in/chapter07.html:74
msgid "<h2>Use DEFCLASS to define new objects</h2>"
msgstr "<h2>Используйте DEFCLASS для определения новых объектов</h2>"

#: in/chapter07.html:79
msgid ""
"<p>A CLOS object is defined by a <code>DEFCLASS</code> form.\n"
"<code>DEFCLASS</code> only <em>describes</em> an object. To create\n"
"an instance of an object, you can use a <code>MAKE-INSTANCE</code>\n"
"form."
msgstr ""
"<p>Объект CLOS определяется формой <code>DEFCLASS</code>. \n"
"<code>DEFCLASS</code> описывает только объект. Для создания \n"
"экземпляра объекта можно использовать форму <code>MAKE-INSTANCE</code>.\n"

#: in/chapter07.html:81
msgid "<p>Here's how you would define a trivial object:"
msgstr "<p>Вот как бы вы определили тривиальный объект:"

#: in/chapter07.html:86
msgid ""
"<pre>\n"
"? (defclass empty-object () ())\n"
"#&lt;STANDARD-CLASS EMPTY-OBJECT&gt;\n"
"</pre> "
msgstr ""

#: in/chapter07.html:94
msgid ""
"<p>This class is not very interesting; the <code>()</code> are\n"
"placeholders for things to come. Also, note that this particular\n"
"Lisp system prints <code>#&lt;STANDARD-CLASS EMPTY-OBJECT&gt;</code> in\n"
"response to the <code>DEFCLASS</code> form.  This is unreadable --\n"
"the reader signals an error whenever it reads a form that begins\n"
"with <code>#&lt;</code> -- but it lets you know that something useful\n"
"happened."
msgstr ""
"<p>Этот класс не очень интересен; <code>()</code> - это заполнители для \n"
"будущих вещей. Кроме того, обратите внимание, что эта конкретная система \n"
"Lisp печатает <code>#&lt;STANDARD-CLASS EMPTY-OBJECT&gt;</code> в ответ \n"
"на форму <code>DEFCLASS</code>. Это нечитабельно - Reader(читатель)\n"
"сигнализирует об ошибке всякий раз, когда он читает форму, начинающуюся с\n"
"<code>#&lt;</code>, но это дает вам знать, что произошло что-то полезное."

#: in/chapter07.html:100
msgid ""
"<p>Once you've defined a class, you can use it to make objects.  Most forms\n"
"that require a class will accept the name of the class, or you can use\n"
"<code>FIND-CLASS</code> to retrieve the actual class, given its name.\n"
"<code>MAKE-INSTANCE</code> creates a new object, given a class name or a\n"
"class:"
msgstr ""
"<p>\n"
"Как только вы определили класс, вы можете использовать его для создания "
"объектов.\n"
"Большинство форм, которым требуется класс, принимают имя класса, или вы "
"можете\n"
"использовать <code>FIND-CLASS</code> для получения фактического класса, \n"
"учитывая его имя. <code>MAKE-INSTANCE</code> создает новый объект, заданный "
"именем класса или классом:"

#: in/chapter07.html:111
msgid ""
"<pre>\n"
"? (make-instance 'empty-object)\n"
"#&lt;EMPTY-OBJECT #x3CA1206&gt;\n"
"? (make-instance 'empty-object)\n"
"#&lt;EMPTY-OBJECT #x3CA1DFE&gt;\n"
"? (find-class 'empty-object)\n"
"#&lt;STANDARD-CLASS EMPTY-OBJECT&gt;\n"
"? (make-instance (find-class 'empty-object))\n"
"#&lt;EMPTY-OBJECT #x3CB397E&gt;\n"
"</pre> "
msgstr ""

#: in/chapter07.html:118
msgid ""
"<p>Again, the Lisp system responds with an unreadable object. This\n"
"time, the response includes the storage address of the object. Most\n"
"Lisp systems have a default printer for CLOS objects that works like\n"
"this, even though the details may differ slightly. The important\n"
"thing to note is that <code>MAKE-INSTANCE</code> creates a new\n"
"object each time it is called."
msgstr ""
"<p>Опять же, система Lisp отвечает нечитаемым объектом. На этот раз ответ\n"
"включает в себя адрес хранения объекта. Большинство систем Lisp имеют \n"
"принтер(функцию вывода) по умолчанию для объектов CLOS, который работает \n"
"также, хотя детали могут немного отличаться. Важно отметить, что \n"
"<code>MAKE-INSTANCE</code> создает новый объект каждый раз, когда \n"
"она вызывается.\n"

#: in/chapter07.html:126
msgid ""
"<blockquote> Even though the object printer shows a different\n"
"address for each object, you should <em>not</em> depend upon the\n"
"printed representation to identify an object. Lisp systems can (and\n"
"do) change the address of objects at runtime. The only way to\n"
"reliably compare the identity of an object is with an identity test\n"
"such as <code>EQ</code> (see <a href=\"chapter17.html\">Chapter\n"
"17</a>). </blockquote> "
msgstr ""
"<blockquote> Даже если принтер объектов показывает разные адреса для \n"
"каждого объекта, вы не должны зависеть от печатного представления для\n"
"идентификации объекта. Системы Lisp могут (и делают) изменять адрес \n"
"объектов во время выполнения. Единственный способ достоверно сравнить\n"
"идентичность объекта - это использовать проверку идентичности, например \n"
"<code>EQ</code> (см. <a href=\"chapter17.html\">Главу 17</a>). \n"
"</blockquote> "

#: in/chapter07.html:128
msgid "<h2>Objects have slots, with more options than structures</h2>"
msgstr ""
"<h2>Объекты имеют слоты, с большим количеством опций чем у\n"
"структур</h2>"

#: in/chapter07.html:136
msgid ""
"<p>Our first <code>DEFCLASS</code> form defined an object that\n"
"wasn't good for much of anything. Now we'll see how to expand a\n"
"class definition so that our objects will have named slots. These\n"
"serve the same purpose as slots in structures (<a\n"
"href=\"chapter03-10.html#structures\">Chapter 3</a>), they simply\n"
"store data.  The data could be attributes of the object, or\n"
"contained objects, or references to related objects."
msgstr ""
"<p>\n"
"Наша первая форма <code>DEFCLASS</code> определила объект, который \n"
"не был хорош ни для чего. Теперь мы увидим, как расширить определение \n"
"класса, чтобы наши объекты имели именованные слоты. Они служат той \n"
"же цели, что и слоты в структурах \n"
"(<a href=\"chapter03-10.html#structures\">Глава 3</a>), они просто хранят "
"данные.\n"
"Эти данные могут быть атрибутами объекта, содержащимися в нем объектами или\n"
"ссылками на связанные объекты.\n"

#: in/chapter07.html:139
msgid ""
"<p>To define a class for an object with slots, we start with a \n"
"<code>DEFCLASS</code> form and add slot definitions, like this:"
msgstr ""
"<p>Чтобы определить класс для объекта со слотами, мы начинаем с \n"
"формы <code>DEFCLASS</code> и добавляем определения слотов, \n"
"например:"

#: in/chapter07.html:144
msgid ""
"<pre>\n"
"? (defclass 3d-point () (x y x))\n"
"#&lt;STANDARD-CLASS 3D-POINT&gt;\n"
"</pre> "
msgstr ""

#: in/chapter07.html:149
msgid ""
"<p>Here, we've defined a class <code>3D-POINT</code> whose objects\n"
"will have three slots, named <code>X</code>, <code>Y</code>, and \n"
"<code>Z</code>.  This looks like it might be similar to a structure\n"
"definition, such as"
msgstr ""
"<p>\n"
"Здесь мы определили класс <code>3D-POINT</code>, объекты которого \n"
"будут иметь три слота с именами <code>X</code>, <code>Y</code>, и \n"
"<code>Z</code>. Это может быть похоже на определение структуры, \n"
"например"

#: in/chapter07.html:153
msgid ""
"<pre>\n"
"(defstruct 3d-point-struct x y z)\n"
"</pre> "
msgstr ""

#: in/chapter07.html:158
msgid ""
"<p>but the class actually has <b>less</b> functionality than the\n"
"structure.  The class does not define default accessors for slots.\n"
"To access the slots, you would have to use <code>SLOT-VALUE</code> \n"
"as in this example:"
msgstr ""
"<p>но на самом деле класс обладает <b>меньшей</b> функциональностью, \n"
"чем структура. Класс не определяет методы доступа по умолчанию \n"
"для слотов. Чтобы получить доступ к слотам, вам нужно будет \n"
"использовать <code>SLOT-VALUE</code>, как в этом примере:"

#: in/chapter07.html:165
msgid ""
"<pre>\n"
"? (let ((a-point (make-instance '3d-point)))\n"
"    (setf (slot-value a-point 'x) 0)  <i>; set the X slot</i> \n"
"    (slot-value a-point 'x))          <i>; get the X slot</i> \n"
"0\n"
"</pre> "
msgstr ""

#: in/chapter07.html:169
msgid ""
"<p>If you try to get the value of a slot before setting it, Lisp will\n"
"signal an error because the slot is unbound (i.e. it has <em>no</em> \n"
"value)."
msgstr ""
"<p>Если вы попытаетесь получить значение слота до его установки, \n"
"Lisp будет сигнализировать об ошибке, потому что слот не привязан \n"
"(т. е. у него <em>нет</em> значения)."

#: in/chapter07.html:175
msgid ""
"<pre>\n"
"? (let ((a-point (make-instance '3d-point)))\n"
"    (slot-value a-point 'y))\n"
"&gt; Error: Slot Y is unbound in #&lt;3D-POINT #x3CD3216&gt;\n"
"</pre> "
msgstr ""

#: in/chapter07.html:177
msgid "<h2>Controlling access to a slot helps keep clients honest</h2>"
msgstr ""
"<h2>Контроль доступа к слоту помогает сохранить честность клиентов</h2>"

#: in/chapter07.html:182
msgid ""
"<p>Getting and setting slots with <code>SLOT-VALUE</code> forms is\n"
"slightly cumbersome when compared to the accessors created\n"
"automatically for slots in a structure.  Fortunately, you can specify\n"
"accessors for each slot when you define a class."
msgstr ""
"<p>\n"
"Получение и установка слотов с формами <code>SLOT-VALUE</code> немного \n"
"громоздко по сравнению с аксессорами, созданными автоматически для слотов в\n"
"структуре. К счастью, вы можете указать методы доступа(аксессоры) для "
"каждого\n"
"слота при определении класса."

#: in/chapter07.html:189
msgid ""
"<pre>\n"
"(defclass 3d-point ()\n"
"  ((x :accessor point-x)\n"
"   (y :accessor point-y)\n"
"   (z :accessor point-z)))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:191
msgid "<p>Then, object slot access looks just like structure slot access."
msgstr ""
"<p>Тогда доступ к слоту объекта выглядит так же, как и доступ \n"
"к слоту структуры."

#: in/chapter07.html:198
msgid ""
"<pre>\n"
"? (let ((a-point (make-instance '3d-point)))\n"
"    (setf (point-x a-point) 0)\n"
"    (point-x a-point))\n"
"0\n"
"</pre> "
msgstr ""

#: in/chapter07.html:201
msgid ""
"<p>You can also specify separate accessor names for reading and writing\n"
"a slot."
msgstr ""
"<p>Вы также можете указать отдельные имена доступа для чтения \n"
"и записи слота."

#: in/chapter07.html:213
msgid ""
"<pre>\n"
"? (defclass 3d-point ()\n"
"    ((x :reader get-x :writer set-x)\n"
"     (y :reader get-y :writer set-y)\n"
"     (z :reader get-z :writer set-z)))\n"
"#&lt;STANDARD-CLASS 3D-POINT&gt;\n"
"? (let ((a-point (make-instance '3d-point)))\n"
"    (set-z 3 a-point)\n"
"    (get-z a-point))\n"
"3\n"
"</pre> "
msgstr ""

#: in/chapter07.html:219
msgid ""
"<p>Do you see the difference between specifying\n"
"<code>:accessor</code> and <code>:writer</code>? Notice that the\n"
"slot writer is <em>not</em> used with <code>SETF</code>. Also note\n"
"the order of arguments to the slot writer: first the value, then the\n"
"object."
msgstr ""
"<p>Видите ли вы разницу между указанием: <code>:accessor</code> и\n"
"<code>:writer</code>? Обратите внимание, что слот writer(записи)\n"
"<em>не</em> используется с <code>SETF</code>. Также обратите внимание \n"
"на порядок аргументов для слота (writer)записи слота: сначала значение, \n"
"затем объект."

#: in/chapter07.html:232
msgid ""
"<p>It's useful to have all of these options for slot access when\n"
"you're writing a complex program. Through various combinations of\n"
"slot accessor definitions, you can give a slot read/write,\n"
"read-only, write-only, or no access. You might think that the last\n"
"two cases wouldn't be useful, but they are. A write-only slot might\n"
"provide information that is only useful to establish a state within\n"
"the object in response to a request from the object's client -- a\n"
"seed for a random number generator, for example. A no-access slot\n"
"can maintain information that should be known only by the internal\n"
"workings of the object; functions that manipulate the object's\n"
"internal state can still access the slot using\n"
"<code>SLOT-VALUE</code>."
msgstr ""
"<p>\n"
"Когда вы пишете сложную программу, полезно иметь все эти опции для доступа\n"
"к слоту. С помощью различных комбинаций определений доступа к слоту вы \n"
"можете предоставить доступ к слоту для чтения/записи, только для чтения,\n"
"только для записи или вообще без доступа. Вы можете подумать, что "
"последние \n"
"два случая будут бесполезны, но это не так. Слот только для записи может\n"
"предоставлять информацию, которая полезна только для установления состояния\n"
"внутри объекта в ответ на запрос клиента объекта - например, семя(seed) для\n"
"генератора случайных чисел. Слот без доступа может содержать информацию,\n"
"которая должна быть известна только по внутренней работе объекта; функции,\n"
"которые управляют внутренним состоянием объекта, все еще могут получить\n"
"доступ к слоту с помощью <code>SLOT-VALUE</code>."

#: in/chapter07.html:243
msgid ""
"<p>The existence of <code>SLOT-VALUE</code> is anathema to some\n"
"object designers, who believe that the privacy of an object's\n"
"internal information should be <em>absolutely</em> protected against\n"
"client access. Lisp requires the exercise of programmer discipline\n"
"to protect an object's private information. As a rule of thumb, you\n"
"should use <code>SLOT-VALUE</code> to manipulate private slots, and\n"
"provide appropriate named accessors for all other slots. Having done\n"
"so, any appearance of a <code>SLOT-VALUE</code> form in a client\n"
"program signals a violation of your intent to hide some object's\n"
"private state."
msgstr ""
"<p>\n"
"Существование <code>SLOT-VALUE</code> является анафемой для некоторых\n"
"проектировщиков объектов, которые считают, что конфиденциальность \n"
"внутренней информации объекта должна быть <em>абсолютно</em> защищена от\n"
"клиентского доступа. Lisp требует применения дисциплины программиста \n"
"для защиты внутренней информации объекта. Как правило, вы должны "
"использовать\n"
"<code>SLOT-VALUE</code> для управления частными слотами и предоставлять\n"
"соответствующие именованные средства доступа для всех других слотов. \n"
"Сделав это, любое появление формы с <code>SLOT-VALUE</code> в клиентской\n"
"программе сигнализирует о нарушении вашего намерения скрыть внутреннее\n"
"состояние какого-либо объекта."

#: in/chapter07.html:245
msgid "<h2>Override a slot accessor to do things that the client can't</h2>"
msgstr ""
"<h2>Переопределение метода доступа к слоту, чтобы сделать то, что клиент\n"
"не может</h2>"

#: in/chapter07.html:249
msgid ""
"<p>In this section we'll see how to define special-purpose accessors\n"
"that do more than just read and write slot values.  Think of this as\n"
"a sneak preview of <a href=\"chapter14.html\">Chapter 14</a>."
msgstr ""
"<p>В этом разделе мы рассмотрим, как определить специальные средства "
"доступа,\n"
"которые делают больше, чем просто чтение и запись значений слотов. Думайте "
"об\n"
"этом как о тайном просмотре <a href=\"chapter14.html\">Главы 14</a>."

#: in/chapter07.html:256
msgid ""
"<p>Let's define a sphere.  A sphere is defined by its position in \n"
"3-space and by its radius.  We'd like to query the sphere for its \n"
"volume.  Finally, we'd like to be able to move -- or translate -- \n"
"the sphere's position by a specified amount without having to \n"
"explicitly calculate its new coordinates.  We start with this\n"
"class definition:"
msgstr ""
"<p>Давайте определим сферу. Сфера определяется своим положением в \n"
"3-м пространстве и своим радиусом. Мы хотели бы запрашивать сферу о \n"
"ее объеме. Наконец, мы хотели бы иметь возможность перемещать-или \n"
"переводить-положение сферы на определенную величину без необходимости \n"
"явно вычислять ее новые координаты. Мы начнем с этого определения \n"
"класса:"

#: in/chapter07.html:267
msgid ""
"<pre>\n"
"? (defclass sphere ()\n"
"    ((x :accessor x)\n"
"     (y :accessor y)\n"
"     (z :accessor z)\n"
"     (radius :accessor radius)\n"
"     (volume :reader volume)\n"
"     (translate :writer translate)))\n"
"#&lt;STANDARD-CLASS SPHERE&gt;\n"
"</pre> "
msgstr ""

#: in/chapter07.html:274
msgid ""
"<p>The accessors for <code>X</code>, <code>Y</code>, <code>Z</code>,\n"
"and <code>RADIUS</code> need no further explanation, but the accessors\n"
"for <code>VOLUME</code> and <code>TRANSLATE</code> aren't yet useful;\n"
"the <code>VOLUME</code> reader will fail because its slot is unbound\n"
"and the <code>TRANSLATE</code> writer won't do anything except to set\n"
"its slot."
msgstr ""
"<p>\n"
"Методы доступа для <code>X</code>, <code>Y</code>, <code>Z</code>,\n"
"и <code>RADIUS</code> не нуждаются в дальнейшем объяснении, но методы \n"
"доступа для <code>VOLUME</code> и <code>TRANSLATE</code> еще бесполезны;\n"
"метод чтения <code>VOLUME</code> потерпит неудачу, потому что его слот не "
"связан,\n"
"и метод записи <code>TRANSLATE</code> не будет делать ничего, кроме  \n"
"установки своего слота.\n"

#: in/chapter07.html:282
msgid ""
"<p>We'll finish the definition of our sphere by first having\n"
"<code>VOLUME</code> return a value calculated from the sphere's radius.\n"
"There are two ways to do this: have <code>VOLUME</code> read the sphere's\n"
"radius and calculate the corresponding volume, or have <code>RADIUS</code> \n"
"calculate the volume and set the volume slot for later use by the \n"
"<code>VOLUME</code> accessor.  Here are both solutions -- if you try this\n"
"out, pick just one:"
msgstr ""
"<p>\n"
"Мы закончим определение нашей сферы, сначала заставив <code>VOLUME</code>\n"
"возвращать значение, вычисленное по радиусу сферы. Есть два способа "
"сделать \n"
"это: заставить <code>VOLUME</code> прочитать радиус сферы и вычислить\n"
"соответствующий объем или заставить <code>RADIUS</code> вычислить объем \n"
"и установить слот объема для последующего использования средством доступа \n"
"к <code>VOLUME</code>. Вот оба решения - если вы попробуете его сделать, \n"
"выберите только одно:"

#: in/chapter07.html:287
msgid ""
"<pre>\n"
"<i>; Volume from Radius</i> \n"
"(defmethod volume ((object sphere))\n"
"  (* 4/3 pi (expt (radius object) 3)))"
msgstr ""

#: in/chapter07.html:294
msgid ""
"<i>; Radius to Volume</i> \n"
"(defmethod radius ((new-radius number) (object sphere))\n"
"  (setf (slot-value object 'radius) new-radius)\n"
"  (setf (slot-value object 'volume)\n"
"        (* 4/3 pi (expt new-radius 3))))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:301
msgid ""
"<blockquote>\n"
"This is not the best example of Lisp style.  You're defining a \n"
"default reader or writer method in the <code>DEFCLASS</code> form, \n"
"then redefining the method to add special behavior.  Your Lisp \n"
"system may warn you about the attempted redefinition; it's OK to\n"
"continue from the warning and redefine the method."
msgstr ""
"<blockquote>\n"
"Это не самый лучший пример стиля Lisp. Вы определяете метод чтения или \n"
"записи по умолчанию в форме DEFCLASS, а затем переопределяете метод, чтобы\n"
"добавить специальное поведение. Ваша система Lisp может предупредить вас о\n"
"попытке переопределения; это нормально, продолжить с предупреждением и\n"
"переопределить метод.\n"

#: in/chapter07.html:309
msgid ""
"<p>One way to avoid the problem is to omit the slot option that\n"
"defines the default <code>:READER</code> (for <code>VOLUME</code>)\n"
"or <code>:WRITER</code> (for <code>TRANSLATE</code>) in the\n"
"<code>DEFCLASS</code> form, but then you lose the documentation\n"
"provided by these declarations. We'll see some other declarations in\n"
"<a href=\"chapter14.html\">Chapter 14</a> that can help to improve\n"
"readability. </blockquote> "
msgstr ""
"<p>\n"
"Один из способов избежать этой проблемы - опустить параметр slot, \n"
"который определяет значение по умолчанию: <code>:READER</code> \n"
"(для <code>VOLUME</code>) или <code>:WRITER</code> \n"
"(для <code>TRANSLATE</code>) в форме <code>DEFCLASS</code>, но \n"
"тогда вы потеряете документирование, предоставляемое этими объявлениями. \n"
"В <a href=\"chapter14.html\">Главе 14</a> мы увидим некоторые другие \n"
"объявления, которые могут помочь улучшить читаемость кода.\n"
" </blockquote> "

#: in/chapter07.html:319
msgid ""
"<p>The <code>DEFMETHOD</code> form defines a function which applies only\n"
"to certain argument types.  In this case, the <code>VOLUME</code> method\n"
"applies only to <code>SPHERE</code> objects, and the <code>RADIUS</code> \n"
"method applies only to a <code>NUMBER</code> (the new radius) and a\n"
"<code>SPHERE</code>.  The <code>VOLUME</code> method computes the volume\n"
"from the sphere's radius each time it is called.  The <code>RADIUS</code> \n"
"method computes the sphere's volume each time the radius is set; the values\n"
"of both radius and volume are stored in the sphere's slots by the\n"
"<code>SLOT-VALUE</code> forms."
msgstr ""
"<p>Форма <code>DEFMETHOD</code> определяет функцию, которая применяется \n"
"только к определенным типам аргументов. В этом случае метод \n"
"<code>VOLUME</code> применяется только к объектам <code>SPHERE</code>, \n"
"а метод <code>RADIUS</code> - только к <code>NUMBER</code> (новому "
"радиусу) \n"
"и <code>SPHERE</code>. Метод <code>VOLUME</code> вычисляет объем по "
"радиусу \n"
"сферы при каждом ее вызове. Метод <code>RADIUS</code> вычисляет объем сферы\n"
"каждый раз, когда устанавливается радиус; значения как радиуса, так и "
"объема\n"
"сохраняются в слотах сферы с помощью форм <code>SLOT-VALUE</code>."

#: in/chapter07.html:324
msgid ""
"<p>You can think of a default slot reader and writer as being defined like\n"
"this (but the compiler probably generates better code if you just use the\n"
"default accessors created automatically by the <code>:READER</code> and\n"
"<code>:WRITER</code> slot options):"
msgstr ""
"<p>Вы можете думать о том, что читатель и писатель слотов по умолчанию\n"
"определяются следующим образом (но компилятор, вероятно, генерирует \n"
"лучший код, если вы просто используете стандартные методы доступа, \n"
"созданные автоматически опциями слотов:  <code>:READER</code> и\n"
"<code>:WRITER</code>):"

#: in/chapter07.html:329
msgid ""
"<pre>\n"
"<i>; Default slot reader (illustration only)</i> \n"
"(defmethod slot-reader ((object object-class))\n"
"  (slot-value object 'slot-name))"
msgstr ""

#: in/chapter07.html:334
msgid ""
"<i>; Default slot writer (illustration only)</i> \n"
"(defmethod slot-writer (new-value (object object-class))\n"
"  (setf (slot-value object 'slot-name) new-value))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:336
msgid "<h2>Define classes with single inheritance for specialization</h2>"
msgstr ""
"<h2>Определение классов с одиночным наследованием для специализации</h2>"

#: in/chapter07.html:342
msgid ""
"<p>Specialization is one of the most important concepts in object\n"
"programming.  Specialization allows you to define an object in terms\n"
"of another object by describing features that are new or different;\n"
"the base functionality of the object is <em>inherited</em> from the\n"
"definition of the parent."
msgstr ""
"<p>\n"
"Специализация - одно из важнейших понятий объектного программирования.\n"
"Специализация позволяет определить объект в терминах другого объекта путем\n"
"описания новых или отличающихся признаков; базовая функциональность объекта\n"
"наследуется от определения родительского объекта.\n"

#: in/chapter07.html:347
msgid ""
"<p>In the simplest kind of specialization, single inheritance, a\n"
"child inherits traits from just one parent. As an example, we'll\n"
"define some basic two dimensional objects using a single inheritance\n"
"hierarchy."
msgstr ""
"<p>\n"
"В самом простом виде специализации, одиночном наследовании, наследник\n"
"наследует черты только от одного родителя. В качестве примера мы определим\n"
"некоторые базовые двумерные объекты, используя одиночную иерархию "
"наследования."

#: in/chapter07.html:350
msgid ""
"<pre>\n"
"(defclass 2d-object () ())"
msgstr ""

#: in/chapter07.html:355
msgid ""
"(defclass 2d-centered-object (2d-object)\n"
"  (x :accessor x)\n"
"  (y :accessor y)\n"
"  (orientation :accessor orientation)"
msgstr ""

#: in/chapter07.html:359
msgid ""
"(defclass oval (2d-centered-object)\n"
"  (axis-1 :accessor axis-1)\n"
"  (axis-2 :accessor axis-2))"
msgstr ""

#: in/chapter07.html:364
msgid ""
"(defclass regular-polygon (2d-centered-object)\n"
"  (n-sides :accessor number-of-sides)\n"
"  (size :accessor size))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:366
msgid "<p>The inheritance graph for these four classes looks like this:"
msgstr ""
"<p>Граф наследования для этих четырех классов выглядит следующим образом:"

#: in/chapter07.html:368
msgid "<p><img src=\"gifs/2d-object-inheritance.gif\">"
msgstr ""

#: in/chapter07.html:378
msgid ""
"<p>The <code>2D-OBJECT</code> class is a placeholder from which we\n"
"might later derive other 2D objects, e.g. lines and points. A\n"
"<code>2D-CENTERED-OBJECT</code> has a central reference position\n"
"specified by its <code>X</code> and <code>Y</code> attributes, and\n"
"an orientation -- the amount the object is rotated about its central\n"
"position. The <code>OVAL</code> and <code>REGULAR-POLYGON</code>\n"
"classes inherit from <code>2D-CENTERED-OBJECT</code>, retaining the\n"
"position and orientation attributes of the parent class and adding\n"
"attributes appropriate to the geometry of the derived objects."
msgstr ""
"<p>Класс <code>2D-OBJECT</code> - это заполнитель, из которого \n"
"мы могли бы впоследствии вывести другие 2D-объекты, например \n"
"линии и точки. <code>2D-CENTERED-OBJECT</code> объект имеет  опорное "
"положение\n"
"по центру, заданное его атрибутами <code>X</code> и <code>Y</code>, \n"
"и ориентацию - величину поворота объекта относительно его центрального \n"
"положения. Классы  <code>OVAL</code> и <code>REGULAR-POLYGON</code> \n"
"наследуются от <code>2D-CENTERED-OBJECT</code>, сохраняя атрибуты "
"положения \n"
"и ориентации родительского класса и добавляя атрибуты, соответствующие "
"геометрии производных объектов."

#: in/chapter07.html:380
msgid "<h2>Multiple inheritance allows mix-and-match definition</h2>"
msgstr ""
"<h2>Множественное наследование позволяет определять смешивание и\n"
"соответствие</h2>"

#: in/chapter07.html:385
msgid ""
"<p>CLOS supports multiple inheritance, which lets a class inherit\n"
"traits from more than one parent.  This is useful for a programming\n"
"style that starts with common functionality and then \"mixes in\"\n"
"extensions to the basic behavior."
msgstr ""
"<p>CLOS поддерживает множественное наследование, которое позволяет \n"
"классу наследовать признаки от нескольких родителей. Это полезно для \n"
"стиля программирования, который начинается с общей функциональности, \n"
"а затем \"смешивает\" расширения с базовым поведением."

#: in/chapter07.html:396
msgid ""
"<p>As an example, let's suppose that we'd like to write code to \n"
"render the 2D objects we started to define in the previous section.\n"
"Let's say that we'd like to achieve two goals simultaneously: we'd\n"
"like to render images on either a bitmapped or a Postscript display\n"
"device, and we'd like to render the objects either on a plane surface\n"
"or as a projection in a \"2.5D\" space, where each 2D object has a Z\n"
"depth, and the system provides a choice of view positions.  These \n"
"requirements are not at all interdependent; one deals with the details\n"
"of rendering objects on a display device, while the other deals with\n"
"transformations of the objects that must occur prior to rendering."
msgstr ""
"<p>\n"
"В качестве примера предположим, что мы хотели бы написать код для \n"
"визуализации 2D-объектов, которые мы начали определять в предыдущем \n"
"разделе. Предположим, что мы хотели бы достичь двух целей одновременно: \n"
"мы хотели бы визуализировать изображения либо на растровом(bitmapped), \n"
"либо на Постскриптумном(Postscript) устройстве отображения, и мы хотели \n"
"бы визуализировать объекты либо на плоской поверхности, либо в виде \n"
"проекции в пространстве \"2.5 D\", где каждый 2D-объект имеет глубину Z, \n"
"и система обеспечивает выбор позиций просмотра. Эти требования вовсе не\n"
"являются взаимозависимыми; один из них имеет дело с деталями визуализации\n"
"объектов на устройстве отображения, в то время как другой имеет дело с\n"
"преобразованиями объектов, которые должны произойти до визуализации."

#: in/chapter07.html:403
msgid ""
"<p>One way to address these requirements is by using multiple\n"
"inheritance. One set of of mixins handles transforms, while another\n"
"set of mixins handles the details of rendering to a display device.\n"
"With a carefully designed protocol for sharing information, new\n"
"combinations of transforms and renderers can be added to our 2D\n"
"objects without rewriting any existing code."
msgstr ""
"<p>Одним из способов выполнения этих требований является использование\n"
"множественного наследования. Один подмешиваемый набор обрабатывает\n"
"преобразования, в то время как другой подмешиваемый набор обрабатывает \n"
"детали рендеринга для устройства отображения. Благодаря тщательно \n"
"разработанному протоколу обмена информацией, новые комбинации \n"
"преобразований и визуализаторов могут быть добавлены к нашим \n"
"2D-объектам без переписывания какого-либо существующего кода."

#: in/chapter07.html:411
msgid ""
"<p>We saw in the previous section how single inheritance is written\n"
"using <code>DEFCLASS</code>, by putting the parent's class name\n"
"within the first parentheses following the new class name. Classes\n"
"that inherit from multiple parents simply list all of the parents.\n"
"Thus to define all the combinations of transform and rendering for\n"
"our <code>REGULAR-POLYGON</code> class, we could do something like\n"
"this:"
msgstr ""
"<p>Мы видели в предыдущем разделе, как одиночное наследование записывается\n"
"с помощью <code>DEFCLASS</code>, помещая имя родительского класса в \n"
"первые скобки после нового имени класса. Классы, которые наследуются \n"
"от нескольких родителей, просто перечисляют всех родителей. Таким образом, \n"
"чтобы определить все комбинации преобразования и рендеринга для нашего \n"
"класса <code>REGULAR-POLYGON</code>, мы могли бы сделать что-то вроде этого:"

#: in/chapter07.html:418
msgid ""
"<pre>\n"
"(defclass renderer-mixin () (...))\n"
"(defclass bitmap-renderer-mixin (renderer-mixin) (...))\n"
"(defmethod render (description (self bitmap-renderer-mixin)) ...)\n"
"(defclass postscript-renderer-mixin (renderer-mixin) (...))\n"
"(defmethod render (description (self postscript-renderer-mixin)) ...)"
msgstr ""

#: in/chapter07.html:424
msgid ""
"(defclass transform-mixin () (...))\n"
"(defclass plane-transform-mixin (transform-mixin) (...))\n"
"(defmethod transform ((self plane-transform-mixin)) ...)\n"
"(defclass z-transform-mixin (transform-mixin) (...))\n"
"(defmethod transform ((self z-transform-mixin)) ...)"
msgstr ""

#: in/chapter07.html:427
msgid ""
"(defmethod draw ((self regular-polygon))\n"
"  (render (transform self) self))"
msgstr ""

#: in/chapter07.html:432
msgid ""
"(defclass regular-polygon-bmr-pt (regular-polygon\n"
"                                  bitmap-renderer-mixin \n"
"                                  plane-transform-mixin)\n"
"  (...))"
msgstr ""

#: in/chapter07.html:437
msgid ""
"(defclass regular-polygon-psr-pt (regular-polygon\n"
"                                  postscript-renderer-mixin\n"
"                                  plane-transform-mixin)\n"
"  (...))"
msgstr ""

#: in/chapter07.html:442
msgid ""
"(defclass regular-polygon-bmr-zt (regular-polygon\n"
"                                  bitmap-renderer-mixin\n"
"                                  z-transform-mixin)\n"
"  (...))"
msgstr ""

#: in/chapter07.html:448
msgid ""
"(defclass regular-polygon-psr-zt (regular-polygon\n"
"                                  postscript-renderer-mixin\n"
"                                  z-transform-mixin)\n"
"  (...))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:450
msgid "<p>Now our class hierarchy looks like this:"
msgstr "<p>Теперь наша иерархия классов выглядит так:\n"

#: in/chapter07.html:452
msgid "<p><img src=\"gifs/2d-object-with-mixins.gif\">"
msgstr ""

#: in/chapter07.html:460
msgid ""
"<p>I've shown a few method definitions to give you an idea for how\n"
"the drawing protocol interacts with the mixin definitions to\n"
"generate the expected behavior. The <code>DRAW</code> method\n"
"specialized on the <code>REGULAR-POLYGON</code> class provides the\n"
"protocol: it calls <code>TRANSFORM</code> to apply a transform to\n"
"itself, then <code>RENDER</code> to draw itself, using some (as yet\n"
"unspecified) description generated by <code>TRANSFORM</code>."
msgstr ""
"<p>\n"
"Я показал несколько определений методов, чтобы дать вам представление \n"
"о том, как протокол рисования взаимодействует с подмешиваемыми "
"определениями\n"
"для создания ожидаемого поведения. Метод <code>DRAW</code>,\n"
"специализированный на классе <code>REGULAR-POLYGON</code> обеспечивает\n"
"следующий протокол: он вызывает <code>TRANSFORM</code>, чтобы применить\n"
"преобразование к самому себе, а затем <code>RENDER</code>, чтобы нарисовать\n"
"самого себя, используя некоторое (пока еще не определенное) описание,\n"
"сгенерированное  <code>TRANSFORM</code>."

#: in/chapter07.html:464
msgid ""
"<p>Now let's assume that we've created an instance of\n"
"<code>REGULAR-POLYGON-BMR-PT</code> and have called the\n"
"<code>DRAW</code> method:"
msgstr ""
"<p>Теперь давайте предположим, что мы создали экземпляр \n"
"<code>REGULAR-POLYGON-BMR-PT</code> и вызвали метод \n"
"<code>DRAW</code>:"

#: in/chapter07.html:469
msgid ""
"<pre>\n"
"(let ((poly (make-instance 'regular-polygon-bmr-pt ...)))\n"
"  (draw poly))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:477
msgid ""
"<p>The <code>DRAW</code> method is <em>not</em> specialized on the\n"
"<code>REGULAR-POLYGON-BMR-PT</code> class, so we invoke the more\n"
"general method specialized on <code>REGULAR-POLYGON</code>. This\n"
"<code>DRAW</code> method then attempts to invoke methods\n"
"<code>TRANSFORM</code> and <code>RENDER</code> which are specialized\n"
"on the <code>REGULAR-POLYGON-BMR-PT</code> class; these methods are\n"
"defined, so they provide the mixin behavior we'd expect."
msgstr ""
"<p>\n"
"Метод <code>DRAW</code> <em>не</em> специализируются в \n"
"классе <code>REGULAR-POLYGON-BMR-PT</code>, поэтому мы вызываем \n"
"метод более общий, специализированный в <code>REGULAR-POLYGON</code>. \n"
"Затем этот метод <code>DRAW</code> пытается вызвать методы \n"
"<code>TRANSFORM</code> и <code>RENDER</code>, которые специализируются \n"
"в классе <code>REGULAR-POLYGON-BMR-PT</code>; эти методы определены, \n"
"поэтому они обеспечивают ожидаемое подмешиваемое поведение."

#: in/chapter07.html:485
msgid ""
"<p>As you can see from this very simple example, mixins are a\n"
"powerful tool for object programming. Having predefined a very\n"
"simple protocol -- the <code>DRAW</code> method which invokes\n"
"<code>TRANSFORM</code> and <code>RENDER</code> -- we can add new\n"
"behaviors to our system by defining additional mixins. The original\n"
"code is unchanged. Because Lisp can add definitions dynamically, you\n"
"don't even have to stop your software to extend it in this manner."
msgstr ""
"<p>\n"
"Как вы можете видеть из этого очень простого примера, подмешивание \n"
"являются мощным инструментом для объектного программирования. \n"
"Предварительно определив очень простой протокол - метод <code>DRAW</code>,\n"
"который вызывает <code>TRANSFORM</code> и <code>RENDER</code>, - мы можем\n"
"добавить новое поведение в нашу систему, определив дополнительные "
"подмешивания.\n"
"Исходный код остается неизменным. Поскольку Lisp может добавлять "
"определения\n"
"динамически, вам даже не нужно останавливать свое программное обеспечение,\n"
"чтобы расширить его таким образом."

#: in/chapter07.html:487
msgid "<h2>Options control initialization and provide documentation</h2>"
msgstr ""
"<h2>Параметры управляющие инициализацией и предоставление документации</h2>"

#: in/chapter07.html:492
msgid ""
"<p>By default, an object's slots are unbound in a new object. In\n"
"many cases it would be more useful to give slots some meaningful\n"
"initial value.  For example, our <code>3D-POINT</code> could be\n"
"initialized to the origin."
msgstr ""
"<p>\n"
"По умолчанию слоты объекта не связваются в новом объекте. Во многих \n"
"случаях было бы более полезно придать слотам некоторое значимое \n"
"начальное значение. Например, наша <code>3D-POINT</code> может быть\n"
"инициализирована в начале координат."

#: in/chapter07.html:499
msgid ""
"<pre>\n"
"(defclass 3d-point ()\n"
"  ((x :accessor point-x :initform 0)\n"
"   (y :accessor point-y :initform 0)\n"
"   (z :accessor point-z :initform 0)))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:503
msgid ""
"<p>The <code>:INITFORM</code> slot option provides a value for the\n"
"slot at the time the object is created.  The initialization form is\n"
"evaluated every time it is used to initialize a slot."
msgstr ""
"<p>\n"
"Параметр <code>:INITFORM</code> слота предоставляет значение для слота \n"
"в момент создания объекта. Форма инициализации вычисляется каждый раз, \n"
"когда она используется для инициализации слота."

#: in/chapter07.html:507
msgid ""
"<p>You might also want to provide specific initialization arguments\n"
"when an object is created. To do this, use the <code>:INITARG</code>\n"
"slot option."
msgstr ""
"<p>Кроме того, при создании объекта может потребоваться указать \n"
"конкретные аргументы инициализации. Для этого используйте опцию\n"
"слота: <code>:INITARG</code>."

#: in/chapter07.html:514
msgid ""
"<pre>\n"
"(defclass 3d-point ()\n"
"  ((x :accessor point-x :initform 0 :initarg :x)\n"
"   (y :accessor point-y :initform 0 :initarg :y)\n"
"   (z :accessor point-z :initform 0 :initarg :z)))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:517
msgid ""
"<p>To create a <code>3D-POINT</code> object using explicit\n"
"initializers, you'd do something like this:"
msgstr ""
"<p>Чтобы создать <code>3D-POINT</code> объект с использованием \n"
"явных инициализаторов, вы должны сделать что-то вроде этого:"

#: in/chapter07.html:521
msgid ""
"<pre>\n"
"(make-instance '3d-point :x 32 :y 17 :z -5)\n"
"</pre> "
msgstr ""

#: in/chapter07.html:525
msgid ""
"<p>Because the class definition includes both <code>:INITFORM</code>\n"
"and <code>:INITARG</code> options, the slot will still get its\n"
"default value if you omit an explicit initializer."
msgstr ""
"<p>Поскольку определение класса включает в себя оба параметра \n"
"<code>:INITFORM</code> и <code>:INITARG</code>, слот все равно \n"
"получит значение по умолчанию, если вы опустите явный инициализатор.\n"

#: in/chapter07.html:528
msgid ""
"<p>Slot definitions also allow <code>:DOCUMENTATION</code> and\n"
"<code>:TYPE</code> options."
msgstr ""
"<p>Определения слотов также позволяют использовать параметры \n"
"<code>:DOCUMENTATION</code> и <code>:TYPE</code>."

#: in/chapter07.html:538
msgid ""
"<pre>\n"
"(defclass 3d-point ()\n"
"  ((x :accessor point-x :initform 0 :initarg :x\n"
"      :documentation \"x coordinate\" :type real)\n"
"   (y :accessor point-y :initform 0 :initarg :y\n"
"      :documentation \"y coordinate\" :type real)\n"
"   (z :accessor point-z :initform 0 :initarg :z\n"
"      :documentation \"z coordinate\" :type real)))\n"
"</pre> "
msgstr ""

#: in/chapter07.html:545
msgid ""
"<p>The <code>:TYPE</code> option may be used by the compiler to\n"
"assist in code optimization or to create runtime tests when setting\n"
"slots. However, this behavior may vary among Lisp compilers, and the\n"
"standard does not require <code>any</code> interpretation of the\n"
"option. Therefore, it is best to think of this as additional\n"
"documentation to the person reading your program."
msgstr ""
"<p>Параметр <code>:TYPE</code> может использоваться компилятором \n"
"для помощи в оптимизации кода или для создания тестов времени \n"
"выполнения при установке слотов. Однако это поведение может отличаться \n"
"у разных компиляторов Lisp, и стандарт не требует какой-либо \n"
"интерпретации этого параметра. Поэтому лучше всего думать о нем как о\n"
"дополнительной документации для человека, читающему вашу программу."

#: in/chapter07.html:547
msgid "<h2>This is only the beginning...</h2>"
msgstr "<h2>Но это только начало...</h2>"

#: in/chapter07.html:550
msgid ""
"<p>In <a href=\"chapter14.html\">Chapter 14</a> we'll examine methods\n"
"in greater depth and see how to associate behaviors with objects."
msgstr ""
"<p>\n"
"В <a href=\"chapter14.html\">Главе 14</a>  мы рассмотрим методы \n"
"более подробно и увидим, как связать поведение с объектами."

#: in/chapter07.html:563
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter06.html\">Chapter 6</a> | Chapter 7 | <a href=\"chapter08."
"html\">Chapter 8</a> \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its author.  "
"Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
