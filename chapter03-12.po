#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter03-12.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:46+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter03-12.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 3, Lesson 12</title> \n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 3, Lesson 12</title> \n"
"</head> "

#: in/chapter03-12.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 3 - Essential Lisp in Twelve Lessons</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 3 - Основы Лисп в 12 уроках</h1> "

#: in/chapter03-12.html:10
msgid "<h2><A NAME=\"lesson-12\">Lesson 12 - Essential Reader Macros</A></h2> "
msgstr "<h2><A NAME=\"lesson-12\">Урок 12 - Основы Макросов чтения</A></h2> "

#: in/chapter03-12.html:12
msgid "<h3>The reader turns characters into data</h3> "
msgstr "<h3>Читатель превращает символьные знаки в данные</h3> "

#: in/chapter03-12.html:18
msgid ""
"<P>We saw in <A HREF=\"chapter03-11.html\">Lesson 11</A> that the Lisp \n"
"reader gathers constituent characters into symbols and numbers, and that "
"macro \n"
"characters control the reader to handle lists, strings, quoted forms, and \n"
"comments.  In all of these cases, the reader turns characters into data.  \n"
"(For reasons that will become clear shortly, a comment is just \"no data."
"\")</P>"
msgstr ""
"<P>\n"
"В <A HREF=\"chapter03-11.html\">Уроке 11</A> мы видели, что Лисп читатель\n"
"(reader) собирает составляющие символьные знаки в символы и числа, \n"
"а макрознаки управляют программой чтения для обработки списков, строк, \n"
"цитируемых(квотируемых) форм и комментариев. Во всех этих случаях читатель\n"
"превращает знаки в данные. (По причинам, которые вскоре станут ясны, \n"
"комментарий - это просто \"отсутствие данных.\")\n"
"</P>"

#: in/chapter03-12.html:20
msgid "<h3>Standard reader macros handle built-in data types</h3> "
msgstr ""
"<h3>Стандартыне макросы чтения обрабатывают встроенные типы данных</h3> "

#: in/chapter03-12.html:25
msgid ""
"<P>So far, we've seen just the <EM>standard syntax</EM> for Lisp.  This is \n"
"implemented by the reader, and controlled by the <EM>readtable</EM>.  The \n"
"reader works by processing characters according to information stored in \n"
"the readtable.</P>"
msgstr ""
"<P>\n"
"До сих пор мы видели только <EM>стандартный синтаксис</EM> для Lisp. \n"
"Он реализуется считывателем(reader) и контролируется <EM>readtable</EM>\n"
"(таблицей чтения). Считыватель работает, обрабатывая знаки в соответствии\n"
"с информацией, хранящейся в таблице чтения.\n"
"</P>"

#: in/chapter03-12.html:27
msgid "<h3>User programs can define reader macros</h3> "
msgstr ""
"<h3>Пользовательские программы могут определять макросы считывателя(или\n"
"макросы чтения)</h3> "

#: in/chapter03-12.html:33
msgid ""
"<P>Lisp exposes the readtable through the <CODE>*readtable*</CODE> \n"
"variable, and provides several functions to manipulate entries in \n"
"readtables.  You can use these to alter the behavior of the Lisp reader.  \n"
"In the following example, we change the syntax so we can write quoted (i."
"e.  \n"
"unevaluated) lists using <CODE>[</CODE> and <CODE>]</CODE>.</P>"
msgstr ""
"<P>\n"
"Lisp предоставляет доступ к таблице чтения через переменную \n"
"<CODE>*readtable*</CODE> и предоставляет несколько функций для управления\n"
"записями в таблицах чтения. Вы можете использовать их, чтобы изменить \n"
"поведение считывателя Lisp. В следующем примере мы изменим синтаксис, \n"
"чтобы можно было писать списки в кавычках (т. е. не вычисленные) с помощью \n"
" <CODE>[</CODE> и <CODE>]</CODE>.\n"
"</P>"

#: in/chapter03-12.html:35
msgid ""
"<PRE WIDTH=80><I>;This is wrong:</I><br><IMG SRC=\"gifs/circle-dot.gif\" ALT="
"\"?\" ALIGN=\"BOTTOM\"> (1 2 3 4 5 6)<br><IMG SRC=\"gifs/right-arrow-bar.gif"
"\" ALT=\"-&gt;|\" ALIGN=\"BOTTOM\"> Error: 1 is not a function<br><br><I>;"
"Should have done this, instead:</I><br><IMG SRC=\"gifs/circle-dot.gif\" ALT="
"\"?\" ALIGN=\"BOTTOM\"> '(1 2 3 4 5 6)<br><IMG SRC=\"gifs/right-arrow.gif\" "
"ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> (1 2 3 4 5 6)<br><br><I>;Define new syntax "
"so we can write something like</I><br><I>; [1 2 3 4 5 6]</I><br><I>;instead "
"of</I><br><I>; '(1 2 3 4 5 6)</I><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?"
"\" ALIGN=\"BOTTOM\"> (defun open-bracket-macro-character (stream "
"char)<br>     `',(read-delimited-list #\\] stream t))<br><IMG SRC=\"gifs/"
"right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> OPEN-BRACKET-MACRO-"
"CHARACTER<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM"
"\"> (set-macro-character #\\[ #'open-bracket-macro-character)<br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> T<br><br><IMG SRC="
"\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> (set-macro-character #"
"\\] (get-macro-character #\\)))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-"
"&gt;\" ALIGN=\"BOTTOM\"> T<br><br><I>;Now try it:</I><br><IMG SRC=\"gifs/"
"circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> [1 2 3 4 5 6]<br><IMG SRC="
"\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> (1 2 3 4 5 6)</PRE>"
msgstr ""

#: in/chapter03-12.html:41
msgid ""
"<P>First we tried to evaluate <CODE>(1 2 3 4 5 6)</CODE> -- this is wrong \n"
"because <CODE>1</CODE> is not a function.  What we really meant to do was \n"
"to quote the list.  But if we're going to do this often, we'd like a more \n"
"convenient syntax.  In particular we'd like <CODE>[...]</CODE> to behave \n"
"like <CODE>'(...)</CODE>.</P>"
msgstr ""
"<P>\n"
"Сначала мы попытались вычислить <CODE>(1 2 3 4 5 6)</CODE> - это неверно, \n"
"потому что <CODE>1</CODE> - это не функция. Что мы действительно хотели \n"
"сделать, так это квотированный список. Но если мы собираемся делать это "
"часто, нам нужен более удобный синтаксис. В частности, мы хотим что бы \n"
"<CODE>[...]</CODE> вели себя как  <CODE>'(...)</CODE>.</P>"

#: in/chapter03-12.html:48
msgid ""
"<P>To make this work, we have to define a specialized list reader macro \n"
"function that doesn't evaluate its arguments.  We'll arrange for the \n"
"function to be called when the reader encounters a <CODE>[</CODE> \n"
"character; the function will return the list when it encounters a <CODE>]</"
"CODE> \n"
"character.  Every reader macro function gets called with two arguments: \n"
"the input stream and the character that caused the macro to be invoked.</P>"
msgstr ""
"<P>\n"
"Чтобы сделать эту работу, мы должны определить специализированную "
"макрофункцию\n"
"чтения списков, которая не вычисляет свои аргументы. Мы организуем вызов "
"функции,\n"
"когда читатель сталкивается со знаком <CODE>[</CODE>; функция будет "
"возвращать\n"
"список, когда он сталкивается с символом <CODE>]</CODE>. Каждая функция "
"макроса\n"
"считывателя вызывается с двумя аргументами: входной поток и символьный "
"знак,\n"
"который вызвал вызов макроса.\n"
"</P>"

#: in/chapter03-12.html:58
msgid ""
"<P>Our reader macro is very simple because Lisp has a function designed to \n"
"read delimited lists.  <CODE>READ-DELIMITED-LIST</CODE> expects one \n"
"argument -- the character which will terminate the list being read.  The \n"
"other two arguments are optional -- the input stream and a flag which is \n"
"normally set to <CODE>T</CODE> when used in reader macro functions.\n"
"<CODE>READ-DELIMITED-LIST</CODE> reads objects from the input stream until \n"
"it encounters the terminating character, then returns all of the objects \n"
"in a list.  By itself, this does everything we need <EM>except</EM> for \n"
"suppressing evaluation.</P>"
msgstr ""
"<P>Наш макрос чтения очень прост, потому что Lisp имеет функцию,\n"
"предназначенную для чтения списков с разделителями. \n"
"<CODE>READ-DELIMITED-LIST</CODE> ожидает один аргумент - знак, который \n"
"завершит чтение списка. Два других аргумента являются необязательными - \n"
"входной поток и флаг, который обычно устанавливается в значение\n"
"<CODE>T</CODE> при использовании в макро-функциях считывателя. \n"
"<CODE>READ-DELIMITED-LIST</CODE> считывает объекты из входного потока \n"
"до тех пор, пока не встретит завершающий символ, а затем возвращает \n"
"все объекты в списке. Само по себе это делает все, что нам нужно, \n"
"за исключением подавления вычисления.\n"
"</P>"

#: in/chapter03-12.html:65
msgid ""
"<P><CODE>QUOTE</CODE> (or <CODE>'</CODE>) suppresses evaluation, as we saw \n"
"in <A HREF=\"chapter03-03.html\">Lesson 3</A>.  But we can't use \n"
"<CODE>'(READ-DELIMITED-LIST ...)</CODE>; that would suppress evaluation of "
"the \n"
"form we need to evaluate to get the form we need to quote...  Instead, we \n"
"use <CODE>`</CODE> (see <A HREF=\"chapter03-08.html\">Lesson 8</A>) to \n"
"selectively require evaluation within a quoted form.</P>"
msgstr ""
"<P>\n"
"<CODE>QUOTE</CODE> (или <CODE>'</CODE>) подавляет вычисление, как мы \n"
"видели в <A HREF=\"chapter03-03.html\">Уроке 3</A>. Но мы не можем \n"
"использовать <CODE>'(READ-DELIMITED-LIST ...)</CODE>; это будет подавлять \n"
"вычисление формы, которую нам нужно выполнить, чтобы получить форму, \n"
"которую нам нужно квотировать... Вместо этого мы используем\n"
"<CODE>`</CODE> (см. <A HREF=\"chapter03-08.html\">Урок 8</A>), \n"
"чтобы требовать выборочного исполнения в цитируемой форме.\n"
"</P>"

#: in/chapter03-12.html:67
msgid "<P>Our definition of <CODE>OPEN-BRACKET-MACRO-CHARACTER</CODE> uses</P>"
msgstr ""
"<P>Наше определение  <CODE>OPEN-BRACKET-MACRO-CHARACTER</CODE> использует</P>"

#: in/chapter03-12.html:69
msgid "<PRE WIDTH=80><CODE>`',<I>form</I></CODE></PRE>"
msgstr ""

#: in/chapter03-12.html:71
msgid "<P>to evaluate <I>form</I> and return the result, quoted.</P>"
msgstr "<P>чтобы вычислить <I>form</I> вернуть квотированный результа.</P>"

#: in/chapter03-12.html:73
msgid "Lisp reserves six characters for the programmer:<p>"
msgstr "Lisp резервирует шесть символов для программиста::<p>"

#: in/chapter03-12.html:77
msgid ""
"<pre>\n"
" [ ] { } ! ?\n"
"</pre> "
msgstr ""

#: in/chapter03-12.html:81
msgid ""
"You can define any or all of these as macro characters without\n"
"interfering with Lisp. However, you should watch out for conflicts if\n"
"you share code with other programmers.<p>"
msgstr ""
"Вы можете определить любой или все из них как макросимволы, \n"
"не вмешиваясь в работу Lisp. Однако вам следует остерегаться конфликтов, \n"
"если Вы делитесь кодом с другими программистами\n"
"<p>"

#: in/chapter03-12.html:96
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter02.html\">Chapter 2</a> | <A HREF=\"chapter03.html"
"\">Chapter 3, Introduction</A> | <A HREF=\"chapter03-11.html\">Chapter 3, "
"Lesson 11</A> | Chapter 3, Lesson 12 | <a href=\"chapter04.html\">Chapter 4</"
"a> | \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its \n"
"author.  Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
