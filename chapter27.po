#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter27.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:51+0300\n"
"PO-Revision-Date: 2020-05-16 15:39+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter27.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 27</title>\n"
"</head> "
msgstr ""

#: in/chapter27.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 27 - A Good Editor is Worth a Thousand Keystrokes</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 27 - Хороший Редактор стоит тысячи\n"
"нажатий клавиш</h1> "

#: in/chapter27.html:13
msgid ""
"<P>Lisp's simple syntax combines with an integrated editor to ease\n"
"many of the common tasks of writing a Lisp program.  Anyone who tries\n"
"to tell you that \"it's hard to balance parentheses in a Lisp program\"\n"
"is using the wrong editor."
msgstr ""
"<P>\n"
"Простой синтаксис Lisp сочетается с интегрированным редактором, \n"
"чтобы облегчить многие из распространенных задач написания программы Lisp. \n"
"Любой, кто пытается сказать вам, что\" трудно сбалансировать скобки в "
"программе Lisp\",\n"
"использует неправильный редактор."

#: in/chapter27.html:15
msgid "<h2>Simple syntax; smart editors</h2>"
msgstr "<h2>Простой синтаксис; умные редакторы</h2>"

#: in/chapter27.html:21
msgid ""
"Lisp has a very simple syntax; it's just a bunch of tokens bracketed\n"
"by a pair of parentheses, recursively.  This simple syntax, combined\n"
"with the fact that the first token following a left parenthesis usually\n"
"says something about the meaning of the following tokens, lets editors\n"
"do relatively smart things with program text given only local information."
msgstr ""
"<p>\n"
"Лисп имеет очень простой синтаксис; это просто куча лексем, заключенных \n"
"в пару скобок, рекурсивно. Этот простой синтаксис в сочетании с тем "
"фактом, \n"
"что первый маркер после левой скобки обычно говорит что-то о значении \n"
"следующих маркеров, позволяет редакторам делать относительно умные вещи с \n"
"текстом программы, учитывая только локальную информацию."

#: in/chapter27.html:26
msgid ""
"<p>Virtually every Lisp environment comes with its own Lisp-aware editor.\n"
"The rare (usually free and minimalist) Lisp environment that doesn't \n"
"provide its own editor can use Emacs, which has a mode for editing Lisp\n"
"source code."
msgstr ""
"<p>\n"
"Практически каждая среда Lisp поставляется со своим собственным редактором \n"
"с поддержкой Lisp. Редкая (обычно свободная и минималистичная) среда Lisp, \n"
"которая не предоставляет своего собственного редактора, может использовать \n"
"Emacs, который имеет режим редактирования исходного кода Lisp."

#: in/chapter27.html:28
msgid "<h2>Matching and flashing</h2>"
msgstr "<h2>Соответствие и мигание(flashing)</h2>"

#: in/chapter27.html:42
msgid ""
"<p>As you type a Lisp program for the first time, it's handy to see\n"
"the matching parentheses at a glance. Most Lisp editors facilitate\n"
"this by briefly highlighting the opening parenthesis for each close\n"
"parenthesis that you type. Highlighting can take different forms,\n"
"depending upon the implementation. Sometimes, the text insertion\n"
"cursor jumps back to the opening parenthesis for a fraction of a\n"
"second (and then returns to its proper position before inserting the\n"
"next typed character.) Another common technique is to briefly\n"
"display the opening parenthesis in a bold font or a different color.\n"
"And some editors even draw an outline around the entire list. No\n"
"matter how it's done, you can see at a glance how your closing\n"
"parentheses match their opening counterparts, with not so much as a\n"
"pause in your typing of the program."
msgstr ""
"<p>\n"
"Когда вы вводите программу Lisp в первый раз, очень удобно сразу увидеть \n"
"соответствующие скобки. Большинство редакторов Lisp облегчают это, кратко \n"
"выделяя открывающую скобку для каждой вводимой вами закрывающей скобки. \n"
"Подсветка может принимать различные формы, в зависимости от реализации. \n"
"Иногда курсор вставки текста на долю секунды возвращается к открывающей \n"
"скобке (а затем возвращается в свое правильное положение перед вставкой \n"
"следующего набранного символа).) Другой распространенный метод заключается \n"
"в кратком отображении открывающей скобки жирным шрифтом или другим цветом. \n"
"А некоторые редакторы даже рисуют контур вокруг всего списка. Независимо \n"
"от того, как это делается, вы можете сразу увидеть, как ваши закрывающие \n"
"скобки совпадают с их открывающими аналогами, при небольшой паузе во время\n"
"ввода программы."

#: in/chapter27.html:47
msgid ""
"<p>Once you've entered the program, you can find matching\n"
"parentheses by positioning the cursor to either the beginning or\n"
"ending parenthesis, then typing a keystroke that will either flash\n"
"or move the cursor to the matching parenthesis."
msgstr ""
"<p>\n"
"После того как вы вошли в программу, вы можете найти соответствующие "
"скобки, \n"
"установив курсор либо в начале, либо в конце скобок, а затем введя нажатие \n"
"клавиши, которое либо мигнет, либо переместит курсор в соответствующую "
"скобку."

#: in/chapter27.html:49
msgid "<h2>Automatic indentation</h2>"
msgstr "<h2>Автоматический отступ</h2>"

#: in/chapter27.html:55
msgid ""
"<p>Parenthesis matching is important when you're entering or editing\n"
"a program.  When you're reading a Lisp program, proper indentation is\n"
"important to give you visual cues as to the program structure.  In fact,\n"
"you should be able to hide the parentheses in a properly indented Lisp\n"
"program and still understand the program."
msgstr ""
"<p>\n"
"Сопоставление скобок очень важно при вводе или редактировании программы. \n"
"Но когда вы читаете программу на Лиспе, важен правильный отступ, чтобы \n"
"дать вам визуальные подсказки относительно структуры программы. На самом \n"
"деле, вы должны быть в состоянии скрыть скобки в правильно выделенной(с "
"правильно\n"
"расставленными отступами) программе Lisp и все еще понимать программу.\n"

#: in/chapter27.html:62
msgid ""
"<p>Lisp editors typically supply proper indentation as you type a new\n"
"program; with some editors this is done automatically, while others require\n"
"that you use a different keystroke in place of the return key to end a\n"
"line.  Together with parenthesis matching, automatic indentation lets\n"
"you type a properly parenthesized and indented Lisp program without ever\n"
"having to count parentheses or spaces."
msgstr ""
"<p>\n"
"Редакторы Lisp обычно предоставляют правильный отступ при вводе новой "
"программы; \n"
"в некоторых редакторах это делается автоматически, в то время как другие "
"требуют, \n"
"чтобы вы использовали другое нажатие клавиши вместо клавиши возврата для "
"завершения \n"
"строки. Вместе с сопоставлением скобок автоматическое "
"форматирование(отступление)\n"
"позволяет вводить правильно заключенную в скобки и отформатированную "
"программу Lisp \n"
"без необходимости подсчитывать скобки или пробелы."

#: in/chapter27.html:72
msgid ""
"<p>When you edit an existing Lisp program, you'll often add or remove\n"
"portions such that the proper indentation of the rest of the program\n"
"must change.  If you had to readjust everything by hand, you'd become\n"
"quickly disenchanted with Lisp.  That's why Lisp editors give you a\n"
"way to reindent a program either a line at a time, or for an entire\n"
"Lisp form.  Lisp programmers tend to develop a habit of finishing small \n"
"changes with the keystroke to reindent the portion of the program being\n"
"edited; this gives the programmer immediate visual feedback on the \n"
"updated structure of the program, as expressed by its indentation."
msgstr ""
"<p>\n"
"При редактировании существующей программы Lisp вы часто добавляете или \n"
"удаляете какие-то части, так что правильный отступ остальной части "
"программы \n"
"должен измениться. Если бы вам пришлось все переделывать вручную, вы \n"
"бы быстро разочаровались в Лиспе. Вот почему редакторы Lisp дают вам \n"
"возможность переформатировать программу либо по одной строке за раз, \n"
"либо для всей формы Lisp. Программисты на Лиспе склонны развивать привычку \n"
"заканчивать небольшие изменения нажатием клавиши, чтобы переформатировать "
"часть\n"
"редактируемой программы; это дает программисту немедленную визуальную "
"обратную \n"
"связь по обновленной структуре программы, выраженную в ее отступах."

#: in/chapter27.html:74
msgid "<h2>Symbol completion</h2>"
msgstr "<h2>Завершение символов</h2>"

#: in/chapter27.html:80
msgid ""
"<p>Lisp programmers tend not to abbreviate names. The short,\n"
"mnemonic names in Common Lisp are there for historical reasons; the\n"
"newer additions to Lisp have fully spelled out, descriptive names.\n"
"Fortunately, a good Lisp program editor can save you a lot of typing\n"
"by providing a symbol completion facility."
msgstr ""
"<p>\n"
"Лисп-программисты обычно не сокращают имена. Короткие мнемонические имена "
"в \n"
"Common Lisp существуют по историческим причинам; более новые дополнения к "
"Lisp \n"
"имеют полностью прописанные, описательные имена. К счастью, хороший "
"редактор \n"
"программ Lisp может сэкономить вам много времени на вводе текста, "
"предоставив \n"
"средство завершения символов."

#: in/chapter27.html:95
msgid ""
"<p>Symbol completion works like this. As you type your program,\n"
"you're using names that are both built into the Lisp system and\n"
"defined anew by your program. As you type a name, you can press a\n"
"symbol-completions keystroke anytime after having typed the first\n"
"few characters. If the typed prefix <em>uniquely</em> matches some\n"
"symbol already known to the Lisp environment (either because it's\n"
"built in, or because you've previously typed the whole name), the\n"
"editor will type the rest of the symbol for you. If the typed prefix\n"
"matches more than one completion, the editor may either pick the\n"
"first and let you cycle through the rest by repeating the completion\n"
"keystroke, or it may present a list of possible completions from\n"
"which you can choose.  In any case, it's important to note that \n"
"symbol completion does <em>not</em> depend upon having compiled \n"
"your program; completion works even during initial program entry."
msgstr ""
"<p>\n"
"Завершение символа работает примерно так. Когда вы вводите свою программу, \n"
"вы используете имена, которые одновременно встроены в систему Lisp и \n"
"определены заново вашей программой. При вводе имени вы можете нажать \n"
"клавишу завершения символа в любое время после ввода первых нескольких "
"знаков. \n"
"Если набранный префикс однозначно соответствует некоторому символу, уже \n"
"известному среде Lisp (либо потому, что он встроен, либо потому, что вы \n"
"ранее ввели полное имя), редактор введет остальную часть символа за вас. \n"
"Если введенный префикс соответствует более чем одному завершению, редактор \n"
"может либо выбрать первое и позволить вам пролистать остальные, повторяя \n"
"нажатие клавиши завершения, либо представить список возможных завершений, \n"
"из которых вы можете выбрать. В любом случае важно отметить, что "
"завершение \n"
"символа не зависит от того, скомпилирована ли ваша программа; завершение \n"
"работает даже во время начального ввода программы."

#: in/chapter27.html:97
msgid "<h2>Finding definitions</h2>"
msgstr "<h2>Поиск определений</h2>"

#: in/chapter27.html:106
msgid ""
"<p>As you develop your program, you'll often find that it's helpful\n"
"to refer to a function that you've defined earlier; perhaps you need\n"
"to see the source code to confirm that it will respond appropriately\n"
"to unexpected inputs, or maybe you need to see how some vendor-supplied\n"
"function is implemented.  Lisp editors support this kind of exploration\n"
"with yet another keystroke; just position the cursor somewhere in a name,\n"
"press a key, and (if the definition is accessible in source form) you're\n"
"instantly shown a view of the defining source code."
msgstr ""
"<p>\n"
"При разработке программы вы часто обнаруживаете, что полезно обратиться к "
"функции, \n"
"которую вы определили ранее; возможно, вам нужно увидеть исходный код, "
"чтобы \n"
"убедиться, что он будет адекватно реагировать на неожиданные входные "
"данные, \n"
"или, возможно, вам нужно увидеть, как реализуется какая-то "
"функциональность, \n"
"поставляемая поставщиком. Редакторы Lisp поддерживают этот вид "
"исследования \n"
"еще одним нажатием клавиши; просто поместите курсор где-нибудь в имени, "
"нажмите \n"
"клавишу, и (если определение доступно в виде исходника) вы мгновенно "
"увидите\n"
"представление определяющего исходного кода."

#: in/chapter27.html:108
msgid "<h2>On-line documentation</h2>"
msgstr "<h2>Интерактивная документация</h2>"

#: in/chapter27.html:115
msgid ""
"<p>Despite its underlying simplicity, Lisp is a large language. The\n"
"formal ANSI specification fills some 1,500 pages of paper describing the\n"
"language and 978 predefined symbols.  On top of that, your vendor's \n"
"development environment will define hundreds of thousands of additional\n"
"symbols.  And, of course, your program will only add to the roster of\n"
"symbol names."
msgstr ""
"<p>\n"
"Несмотря на свою основную простоту, Lisp-это большой язык. Формальная "
"спецификация \n"
"ANSI заполняет около 1500 страниц бумаги, описывающей язык и 978 "
"предопределенных \n"
"символов. Кроме того, среда разработки вашего поставщика будет определять "
"сотни \n"
"тысяч дополнительных символов. И, конечно же, ваша программа будет только "
"добавлять \n"
"в список имен символов."

#: in/chapter27.html:122
msgid ""
"<p>Most Lisp editors will let you access documentation in various forms.\n"
"For built-in and user-defined code, the editor should give you quick\n"
"access to the documentation string and argument list.  In fact, many\n"
"Lisp editors automatically find and inobtrusively display the argument\n"
"list whenever you type a space following a function or macro name. A\n"
"quick glance at the argument list helps you avoid usage mistakes."
msgstr ""
"<p>\n"
"Большинство редакторов Lisp позволят вам получить доступ к документации \n"
"в различных формах. Для встроенного и определяемого пользователем кода \n"
"редактор должен предоставить вам быстрый доступ к строке документации и \n"
"списку аргументов. На самом деле, многие редакторы Lisp автоматически \n"
"находят и ненавязчиво отображают список аргументов всякий раз, когда вы \n"
"вводите пробел после имени функции или макроса. Быстрый взгляд на список \n"
"аргументов поможет вам избежать ошибок в использовании."

#: in/chapter27.html:127
msgid ""
"<p>Hypertext access to online manuals is becoming increasingly\n"
"popular. Some Lisp editors will support lookups in one or more\n"
"manuals (including the Lisp reference) in a manner similar to the\n"
"way they support access to documentation strings."
msgstr ""
"<p>\n"
"Гипертекстовый доступ к онлайн-руководствам становится все более "
"популярным. \n"
"Некоторые редакторы Lisp поддерживают поиск в одном или нескольких "
"руководствах \n"
"(включая ссылку на Lisp) аналогично тому, как они поддерживают доступ к "
"строкам\n"
"документации."

#: in/chapter27.html:129
msgid "<h2>Access to debugging tools</h2>"
msgstr "<h2>Доступ к инструментам отладки</h2>"

#: in/chapter27.html:136
msgid ""
"<p>The editor (or the Lisp environment in general if the environment\n"
"is not editor-centric) should support easy access to debugging tools\n"
"such as browsers, trace and step facilities, backtraces, inspectors,\n"
"and program databases such as apropos, who-calls, and callers-of\n"
"(see Chapters <a href=\"chapter10.html\">10</a>, <a\n"
"href=\"chapter16.html\">16</a>, and <a href=\"chapter22.html\">22</a>)."
msgstr ""
"<p>\n"
"Редактор (или среда Lisp в целом, если среда не ориентирована на редактор) \n"
"должен поддерживать легкий доступ к средствам отладки, таким как браузеры, \n"
"средства трассировки и пошагового выполнения, обратной трассировке "
"вызовов, \n"
"инспекторы и программные базы данных, такие как apropos, who-calls и callers-"
"of \n"
"(см. главы  <a href=\"chapter10.html\">10</a>, <a href=\"chapter16.html"
"\">16</a>, и\n"
" <a href=\"chapter22.html\">22</a>)."

#: in/chapter27.html:138
msgid "<h2>Extending the editor using Lisp</h2>"
msgstr "<h2>Расширение редактора с помощью Lisp</h2>"

#: in/chapter27.html:144
msgid ""
"<p>The editor in many Lisp development environments is itself \n"
"written in Lisp.  The vendor should document the external APIs\n"
"of the editor and supply source code; then you can add your own\n"
"extensions to the editor and customize your Lisp environment to\n"
"fit the way that you work."
msgstr ""
"<p>Редактор во многих средах разработки Lisp сам написан на Лиспе. \n"
"Поставщик должен документировать внешние API редактора и предоставлять \n"
"исходный код; затем вы можете добавить свои собственные расширения в \n"
"Редактор и настроить среду Lisp в соответствии с тем, как вы работаете."

#: in/chapter27.html:157
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter26.html\">Chapter 26</a> | Chapter 27 | <a href=\"chapter28."
"html\">Chapter 28</a> \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its author.  "
"Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
