#
# NuINu <don't@send.my>, 2020.
#
#. extracted from in/chapter03-08.html
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-19 13:50+0300\n"
"PO-Revision-Date: 2020-06-12 19:45+0300\n"
"Last-Translator: NuINu <don't@send.my>\n"
"Language-Team: Russian <don't@send.my>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Gtranslator 2.91.7\n"
"Plural-Forms: nplurals=5; plural=n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : "
"4;\n"

#: in/chapter03-08.html:5
msgid ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<title>Successful Lisp - Chapter 3, Lesson 8</title> \n"
"</head> "
msgstr ""
"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/"
"html4/strict.dtd\">\n"
"<html><head>\n"
"<META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n"
"<title>Successful Lisp - Chapter 3, Lesson 8</title> \n"
"</head> "

#: in/chapter03-08.html:8
msgid ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Chapter 3 - Essential Lisp in Twelve Lessons</h1> "
msgstr ""
"<body bgcolor=\"white\" text=\"black\">\n"
"<h1>Глава 3 - Основы Лисп в 12 уроках</h1> "

#: in/chapter03-08.html:10
msgid ""
"<h2><A NAME=\"lesson-8\">Lesson 8 - Essential Macro Definition</A></h2> "
msgstr ""
"<h2><A NAME=\"lesson-8\">Урок 8 - Основы определения Макросов</A></h2> "

#: in/chapter03-08.html:12
msgid "<h3>DEFMACRO defines named macros</h3> "
msgstr "<h3>DEFMACRO определяет именованный макрос</h3> "

#: in/chapter03-08.html:16
msgid ""
"<P>A <CODE>DEFMACRO</CODE> form looks a lot like a <CODE>DEFUN</CODE> \n"
"form (see <A HREF=\"chapter03-07.html\">Lesson 7</A>) -- it has a name, a \n"
"list of argument names, and a body:</P>"
msgstr ""
"<P>\n"
"Форма <CODE>DEFMACRO</CODE> очень похожа на форму <CODE>DEFUN</CODE>\n"
"(см. <A HREF=\"chapter03-07.html\">Урок 7</A>) - у нее есть имя, \n"
"список имен аргументов и тело:\n"
"</P>"

#: in/chapter03-08.html:19
msgid ""
"<PRE WIDTH=80>(defmacro <VAR>name</VAR> (<VAR>argument</VAR> ...)\n"
"   <VAR>body</VAR>)</PRE>"
msgstr ""

#: in/chapter03-08.html:21
msgid "<h3>Macros return a form, not values</h3> "
msgstr "<h3>Макросы возвращают форму, а не значения</h3> "

#: in/chapter03-08.html:27
msgid ""
"<P>The macro body returns a form to be evaluated.  In other words, you "
"need \n"
"to write the body of the macro such that it returns a form, not a value.  \n"
"When Lisp evaluates a call to your macro, it first evaluates the body of \n"
"your macro definition, then evaluates the result of the first evaluation.\n"
"(By way of comparison, a function's body is evaluated to return a value.)</P>"
msgstr ""
"<P>\n"
"Тело макроса возвращает форму для вычисления. Другими словами, вам нужно\n"
"написать тело макроса таким образом, чтобы он возвращал форму, \n"
"а не значение. Когда Lisp вычисляет/оценивает вызов вашего макроса, \n"
"он сначала вычисляет тело вашего определения макроса, а затем вычисляет "
"результат этого первого вычисления(но делает он это в разное время,\n"
"первое выполняется во время компиляции, а второе во время выполнения). \n"
"(Для сравнения, тело функции вычисляется, чтобы вернуть значение.)\n"
"</P>"

#: in/chapter03-08.html:30
msgid ""
"<P>Here are a couple of simple macros to illustrate most of what you need \n"
"to know:</P>"
msgstr ""
"<P>Вот несколько простых макросов, иллюстрирующих большую часть того, \n"
"что вам нужно знать:</P>"

#: in/chapter03-08.html:32
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(defmacro setq-literal (place literal)<br>     `(setq ,place ',"
"literal))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM"
"\"> SETQ-LITERAL<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN="
"\"BOTTOM\"> (setq-literal a b)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-"
"&gt;\" ALIGN=\"BOTTOM\"> B<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" "
"ALIGN=\"BOTTOM\"> a<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN="
"\"BOTTOM\"> B<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN="
"\"BOTTOM\"> (defmacro reverse-cons (rest first)<br>     `(cons ,first ,"
"rest))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> "
"REVERSE-CONS<br><br><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM"
"\"> (reverse-cons nil A)<br><IMG SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" "
"ALIGN=\"BOTTOM\"> (B)</PRE>"
msgstr ""

#: in/chapter03-08.html:40
msgid ""
"<P><CODE>SETQ-LITERAL</CODE> works like <CODE>SETQ</CODE>, except that \n"
"<EM>neither</EM> argument is evaluated.  (Remember that <CODE>SETQ</CODE> \n"
"evaluates its second argument.)  The body of <CODE>SETQ-LITERAL</CODE> has \n"
"a form that begins with a <CODE>`</CODE> (pronounced \"backquote\").  \n"
"Backquote behaves like quote -- suppressing evaluation of all the enclosed \n"
"forms -- except where a comma appears within the backquoted form.  A \n"
"symbol following the comma is evaluated.</P>"
msgstr ""
"<P>\n"
"<CODE>SETQ-LITERAL</CODE> работает так же, как <CODE>SETQ</CODE>, за\n"
"исключением того, что <EM>ни один</EM> аргумент не вычисляется. \n"
"(Помните, что  <CODE>SETQ</CODE> вычисляет свой второй аргумент.) \n"
"Тело <CODE>SETQ-LITERAL</CODE> имеет форму, которая начинается \n"
"с <CODE>`</CODE>(произносится как \"обратная кавычка\"). Обратная кавычка \n"
"ведет себя как обычная кавычка - подавляя вычисление всех вложенных форм\n"
" - за исключением тех случаев, когда в форме с обратной кавычкой появляется\n"
"запятая(или запятая с собакой - <CODE>,@</CODE> ), при этом следующий за "
"зяпятой символ\n"
"- вычисляется.\n"
"</P>"

#: in/chapter03-08.html:43
msgid ""
"<P>So in our call to <CODE>(SETQ-LITERAL A B)</CODE> above, here's what \n"
"happens:</P>"
msgstr ""
"<P>\n"
"Итак, в нашем вызове <CODE>(SETQ-LITERAL A B)</CODE> выше, \n"
"вот что происходит:\n"
"</P>"

#: in/chapter03-08.html:56
msgid ""
"<OL>\n"
"<LI>bind <CODE>PLACE</CODE> to the symbol <CODE>A</CODE>.</LI>\n"
"<LI>bind <CODE>LITERAL</CODE> to the symbol <CODE>B</CODE>.</LI>\n"
"<LI>evaluate the body <CODE>`(SETQ ,PLACE ',LITERAL)</CODE>, following \n"
"these steps:</LI>\n"
"\t<OL>\n"
"\t<LI>evaluate <CODE>PLACE</CODE> to get the symbol <CODE>A</CODE>.</LI>\n"
"\t<LI>evaluate <CODE>LITERAL</CODE> to get the symbol <CODE>B</CODE>.</LI>\n"
"\t<LI>return the form <CODE>(SETQ A 'B)</CODE>.</LI>\n"
"\t</OL>\n"
"<LI>evaluate the form <CODE>(SETQ A 'B)</CODE>.</LI>\n"
"</OL>"
msgstr ""
"<OL>\n"
"<LI>привязка <CODE>PLACE</CODE> к символу <CODE>A</CODE>.</LI>\n"
"<LI>привязка <CODE>LITERAL</CODE> к символу <CODE>B</CODE>.</LI>\n"
"<LI>вычисление тела <CODE>`(SETQ ,PLACE ',LITERAL)</CODE>,  выполняя "
"следующие действия:</LI>\n"
"\t<OL>\n"
"\t<LI>вычислить <CODE>PLACE</CODE> чтобы получить символ \n"
"<CODE>A</CODE>.</LI>\n"
"\t<LI>вычислить <CODE>LITERAL</CODE> чтобы получить символ <CODE>B</CODE>.</"
"LI>\n"
"\t<LI>вернуть форму <CODE>(SETQ A 'B)</CODE>.</LI>\n"
"\t</OL>\n"
"<LI>вычислить форму <CODE>(SETQ A 'B)</CODE>.</LI>\n"
"</OL>"

#: in/chapter03-08.html:63
msgid ""
"<P>Neither the backquote nor the commas appear in the returned form.  \n"
"Neither <CODE>A</CODE> nor <CODE>B</CODE> is evaluated in a call to \n"
"<CODE>SETQ-LITERAL</CODE>, but for different reasons.  <CODE>A</CODE> is \n"
"unevaluated because it appears as the first argument of \n"
"<CODE>SETQ</CODE>.  <CODE>B</CODE> is unevaluated because it appears after \n"
"a quote in the form returned by the macro.</P>"
msgstr ""
"<P>\n"
"Ни обратная кавычка, ни запятые не появляются в возвращаемой форме. \n"
"Ни <CODE>A</CODE>, ни <CODE>B</CODE> не вычисляются в вызове \n"
"<CODE>SETQ-LITERAL</CODE>, но по разным причинам. <CODE>A</CODE> не\n"
"вычисляется, потому что он появляется в качестве первого аргумента \n"
"<CODE>SETQ</CODE>. <CODE>B</CODE> не вычисляется, поскольку он \n"
"появляется после кавычки в форме, возвращаемой макросом.\n"
"</P>"

#: in/chapter03-08.html:65
msgid "<P>The operation of <CODE>(REVERSE-CONS NIL A)</CODE> is similar:</P>"
msgstr "<P>Операция <CODE>(REVERSE-CONS NIL A)</CODE> аналогична:</P>"

#: in/chapter03-08.html:78
msgid ""
"<OL>\n"
"<LI>bind <CODE></CODE>REST</LI> to the symbol <CODE>NIL</CODE>.\n"
"<LI>bind <CODE>FIRST</CODE> to the symbol <CODE>A</CODE>.</LI>\n"
"<LI>evaluate the body <CODE>`(CONS ,FIRST ,REST)</CODE>, following these \n"
"steps:</LI>\n"
"\t<OL>\n"
"\t<LI>evaluate <CODE>FIRST</CODE> to get the symbol <CODE>A</CODE>.</LI>\n"
"\t<LI>evaluate <CODE>REST</CODE> to get the symbol <CODE>NIL</CODE>.</LI>\n"
"\t<LI>return the form <CODE>(CONS A NIL)</CODE>.</LI>\n"
"\t</OL>\n"
"<LI>evaluate the form <CODE>(CONS A NIL)</CODE>.</LI>\n"
"</OL>"
msgstr ""
"<OL>\n"
"<LI>привязать <CODE></CODE>REST</LI> к символу <CODE>NIL</CODE>.\n"
"<LI>привязать <CODE>FIRST</CODE> к символу <CODE>A</CODE>.</LI>\n"
"<LI>вычислить тело <CODE>`(CONS ,FIRST ,REST)</CODE>, выполнив следующие "
"действия:</LI>\n"
"\t<OL>\n"
"\t<LI>вычислить <CODE>FIRST</CODE> чтобы получить символ <CODE>A</CODE>.</"
"LI>\n"
"\t<LI>вычислить <CODE>REST</CODE> чтобы получить символ <CODE>NIL</CODE>.</"
"LI>\n"
"\t<LI>вернуть форму <CODE>(CONS A NIL)</CODE>.</LI>\n"
"\t</OL>\n"
"<LI>вычислить форму <CODE>(CONS A NIL)</CODE>.</LI>\n"
"</OL>"

#: in/chapter03-08.html:83
msgid ""
"<P>Both arguments of <CODE>REVERSE-CONS</CODE> are evaluated because \n"
"<CODE>CONS</CODE> evaluates its arguments, and our macro body doesn't "
"quote \n"
"either argument.  <CODE>A</CODE> evaluates to the symbol <CODE>B</CODE>, "
"and \n"
"<CODE>NIL</CODE> evaluates to itself.</P>"
msgstr ""
"<P>\n"
"Оба аргумента <CODE>REVERSE-CONS</CODE> вычисляются, потому что \n"
"<CODE>CONS</CODE> вычисляет свои аргументы, и наше макро-тело не \n"
"цитирует ни один аргумент. <CODE>A</CODE> вычисляется в  символу B\n"
"(см. глобальное присваивание setq-literal, а NIL-вычисляется в себя.\n"
"</P>"

#: in/chapter03-08.html:86
msgid ""
"<P>If you want to see how your macro body appears before evaluation, you \n"
"can use the <CODE>MACROEXPAND</CODE> function:</P>"
msgstr ""
"<P>\n"
"Если вы хотите увидеть, как выглядит ваше тело макроса перед вычислением, вы "
"можете использовать функцию <CODE>MACROEXPAND</CODE>:\n"
"</P>"

#: in/chapter03-08.html:88
msgid ""
"<PRE WIDTH=80><IMG SRC=\"gifs/circle-dot.gif\" ALT=\"?\" ALIGN=\"BOTTOM\"> "
"(macroexpand '(setq-literal a b))<br><IMG SRC=\"gifs/right-arrow.gif\" ALT="
"\"-&gt;\" ALIGN=\"BOTTOM\"> (SETQ A 'B)<br><br><IMG SRC=\"gifs/circle-dot.gif"
"\" ALT=\"?\" ALIGN=\"BOTTOM\"> (macroexpand '(reverse-cons nil a))<br><IMG "
"SRC=\"gifs/right-arrow.gif\" ALT=\"-&gt;\" ALIGN=\"BOTTOM\"> (CONS A NIL)</"
"PRE>"
msgstr ""

#: in/chapter03-08.html:91
msgid ""
"<P>Since <CODE>MACROEXPAND</CODE> is a function, it evaluates its \n"
"arguments.  This is why you have to quote the form you want expanded.</P>"
msgstr ""
"<P>\n"
"Поскольку <CODE>MACROEXPAND</CODE> - это функция, она вычисляет свои \n"
"аргументы. Вот почему вы должны цитировать форму, которую хотите расширить.\n"
"</P>"

#: in/chapter03-08.html:97
msgid ""
"<P>The examples in this lesson are deliberately very simple, so you can \n"
"understand the basic mechanism.  In general, macros are trickier to write \n"
"than functions -- in <A HREF=\"chapter20.html\">Chapter 20</A> we'll look "
"at \n"
"the reasons and the correct techniques for dealing with more complex \n"
"situations.</P>"
msgstr ""
"<P>\n"
"Примеры в этом уроке намеренно очень просты, поэтому вы можете понять \n"
"основной механизм. В общем, макросы писать сложнее, чем функции-в \n"
"<A HREF=\"chapter20.html\">Главе 20</A> мы рассмотрим причины и \n"
"правильные методы работы с более сложными ситуациями.\n"
"</P>"

#: in/chapter03-08.html:112
msgid ""
"<hr>\n"
"<div align=\"center\">\n"
"<a href=\"contents.html\">Contents</a> | <a href=\"cover.html\">Cover</a> "
"<br> \n"
"<a href=\"chapter02.html\">Chapter 2</a> | <A HREF=\"chapter03.html"
"\">Chapter 3, Introduction</A> | <A HREF=\"chapter03-07.html\">Chapter 3, "
"Lesson 7</A> | Chapter 3, Lesson 8 | <A HREF=\"chapter03-09.html\">Chapter "
"3, Lesson 9</A> | <a href=\"chapter04.html\">Chapter 4</a> | \n"
"</div>\n"
"<hr>\n"
"<address>\n"
"Copyright &copy; 1995-2001, David B. Lamkins<br>\n"
"All Rights Reserved Worldwide<br>\n"
"<br>\n"
"This book may not be reproduced without the written consent of its \n"
"author.  Online distribution is restricted to the author's site.\n"
"</address> \n"
"</body> </html> "
msgstr ""
